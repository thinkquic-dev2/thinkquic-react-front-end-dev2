{"version":3,"sources":["hooks/useConfig.js","hooks/useMessages.js","hooks/useFiles.js","hooks/useExcelToJson.js","hooks/useLoginAttempts.js","hooks/useCognito.js","hooks/useS3.js","hooks/useLex.js","AppContext.js","Icons/Icons.js","hooks/useOutsideClick.js","components/GenericModal/GenericModal.js","components/PrivacyStatementModal/PrivacyStatementModal.js","components/SignInForm/SignInForm.js","components/SignInForm/SignInFormContainer.js","components/RegistrationForm/RegistrationForm.js","components/RegistrationForm/RegistrationVerification.js","components/RegistrationForm/RegistrationFormContainer.js","components/ForgotPasswordForm/ForgotPasswordFormContainer.js","FileUploadContext.js","components/MessageBubble/MessageBubble.js","components/Message/TextMessage/TextMessage.js","components/ButtonIconTooltip/ButtonIconTooltip.js","components/Message/AggregationUi/AggregationUi.js","components/Message/AggregationUi/AggregationUiContainer.js","components/Message/DataUi/SelectItems/SelectItems.js","components/Message/DataUi/DataUi.js","utilities/jsonMessageHelper.js","components/Message/DataUi/DataUiContainer.js","components/Message/JsonMessage/JsonMessage.js","components/Message/JsonMessage/JsonMessageContainer.js","components/Message/Message.js","components/MessagesContainer/MessagesContainer.js","components/Conversation/Conversation.js","hooks/useAgTable.js","components/AgTable/AgTableNew.js","components/FilePreviewTable/FilePreviewTable.js","components/SignOutButton/SignOutButton.js","utilities/date.js","components/AccountInfo/AccountInfo.js","components/Header/Header.js","components/Header/HeaderItem/HeaderItem.js","components/Header/Dropdown/Dropdown.js","components/ButtonIconLink/ButtonIconLink.js","components/RightSidebar/RightSidebar.js","components/Sidebar/Sidebar.js","components/SidebarItem/SidebarItem.js","components/Main/Main.js","components/UploadFile/UploadFile.js","components/File/FileContainer.js","components/FilesList/FileUploading/FileUploading.js","components/FilesList/FileUploadError/FileUploadError.js","components/FilesList/FilesList.js","components/FilesListContainer/FilesListContainer.js","components/InputSuggestions/InputSuggestions.js","components/QueryBox/QueryBox.js","components/OptionsList/OptionsList.js","components/AlertModal/AlertModal.js","components/TimeoutPrompt/TimeoutPrompt.js","graphql/queries.js","graphql/mutations.js","mutationHelper.js","components/Chat/Users/Users.js","graphql/subscriptions.js","components/Chat/ChatUserList/ChatUserList.js","components/ChatToggle/ContactToggle.js","components/Chat/ChatInput/ChatInput.js","components/Chat/ChatMessage/ChatMessage.js","components/Chat/ChatMessage/ChatMessageView.js","components/Chat/ConvoList/ConversationList.js","components/Chat/ChatList/ChatList.js","components/ChatToggle/ChatToggle.js","components/ChangePassword/ChangePasswordContainer.js","components/FileUploadToast/FileUploadToast.js","components/ChatApp/ChatApp.js","App.js","aws-exports.js","serviceWorker.js","index.js"],"names":["useConfig","window","appConfig","useMessages","app","useState","messages","setMessages","isPreviousMessagesLoaded","setIsPreviousMessagesLoaded","retrieveTranscriptFromLocalStorage","hasConversationInLocalStorage","getTranscriptFromLocalStorage","getWelcomeMessage","localStorage","getItem","JSON","parse","from","message","welcomeMessage","useEffect","length","setItem","stringify","useFiles","s3","username","albumBucketName","uploadPath","retrievePath","isFileExplorerEnabled","files","setFiles","folders","setFolders","currentDirectoryPath","setCurrentDirectoryPath","pendingFileUploads","setPendingFileUploads","fileUploadErrors","setFileUploadErrors","shouldGetObjects","setShouldGetObjects","uploadStartTime","useRef","userUploadPath","userRetrievePath","removeFileFromFileUploadErrors","filename","filter","fileUploadError","getObjectsAsync","Prefix","fileUploadErrorHandler","pendingFileUploadsFromStorage","getPendingFileUploadsInStorage","setPendingFileUploadsInStorage","pendingFileUpload","newPendingFileUploadsFromStorage","stringifiedPendingFileUploadsInStorage","options","a","getObjects","objects","Contents","forEach","object","currentObjectKey","Key","currentObjectKeyArray","replace","split","folderName","includes","push","getFolderContents","folder","processedObject","Promise","resolve","reject","listObjects","err","data","pollIfObjectIsUploaded","objectKey","getUserFiles","Date","now","current","setTimeout","userFiles","objectsContents","i","prefix","path","index","getNewPendingFileUploads","toDeleteFromPendingFileUploads","pendingFileUploadsInFiles","getPendingFileUploadsInFiles","newPendingFileUploads","uploadFile","fileToUpload","fingerprint","callback","fileName","name","photoKey","AWS","S3","ManagedUpload","params","Bucket","Body","promise","then","newFilename","addToPendingFileUploads","getFile","getObject","deleteFile","deleteObject","useExcelToJson","formatJsonForAgTable","json","columnDefs","rowData","jsonKeys","Object","keys","column","headerName","field","rowDataLength","jsonRowData","formattedRow","j","convertExcelToJson","acceptedFiles","file","reader","FileReader","onabort","console","log","onerror","onload","result","Uint8Array","workbook","XLSX","read","type","raw","SheetNames","sheetName","roa","utils","sheet_to_json","Sheets","header","defval","formattedData","readAsArrayBuffer","convertExcelFromS3ToJson","excelFromS3","useLoginAttempts","loginAttempts","setLoginAttempts","loginAttemptsInStorage","loginAttemptsJson","getLoginAttempts","incrementLoginAttempts","incrementedLoginAttempt","newLoginAttemptsObject","resetLoginAttempts","useCognito","poolData","UserPoolId","cognito","ClientId","userPool","AmazonCognitoIdentity","currentUser","setCurrentUser","userSub","setUserSub","cognitoUser","setCognitoUser","setUsername","email","setEmail","isLoggedIn","setIsLoggedIn","registrationStatus","setRegistrationStatus","signOut","getCognitoUser","getCurrentLoggedInSession","getCurrentUser","getSession","session","idToken","getIdToken","getJwtToken","payload","region","loginMap","getLoginMap","credentials","IdentityPoolId","identityPoolId","Logins","clearCachedId","get","getUsername","getCognitoIdentityCredentials","userData","Username","Pool","userPoolId","signIn","password","errorCallback","authenticationData","Password","authenticationDetails","authenticateUser","onSuccess","getAccessToken","refresh","error","onFailure","code","register","passwordConfirmation","attributeList","dataEmail","Name","Value","attributeEmail","signUp","user","deleteAccount","deleteUser","alert","clear","verifyAccount","verificationCode","confirmRegistration","resetPassword","forgotPassword","confirmPassword","newPassword","useS3","setS3","apiVersion","bucketVersionNumber","useLex","lexConfig","lex","pushChat","text","lexruntime","botAlias","botName","inputText","userId","sessionAttributes","postText","filteredMessage","AppContext","React","createContext","AppContextProvider","children","rawDataFile","setRawDataFile","jsonDataFile","setJsonDataFile","allUsers","setAllUsers","conId","setConId","isWaiting","setIsWaiting","userIdleTime","maxFileUpload","uploadFileInputRef","uploadFileInput","setUploadFileInput","isUploadButtonEnabled","setIsUploadButtonEnabled","isRightSidebarOpen","setIsRightSidebarOpen","rightSidebarContent","setRightSidebarContent","Provider","value","handleFileSelection","filesList","fileObjects","numFiles","resetFileInputRefValue","tableToggleIcon","xmlns","viewBox","d","fill","filesIcon","className","uploadSvgIcon","contactIcon","chatIcon","hamburgerIcon","height","width","caretDownIcon","userProfileIcon","style","gearIcon","closeIcon","checkIcon","barChartIcon","pieChartIcon","lineChartIcon","doughnutChartIcon","tableViewIcon","folderIcon","excelIcon","htmlFileIcon","jsFileIcon","defaultFileIcon","moreVerticalIcon","fullScreenIcon","exitFullScreenIcon","uploadIcon","minimizeIcon","useOutsideClick","ref","handleClick","e","contains","target","document","addEventListener","removeEventListener","GenericModal","props","genericModalRef","genericModalDialogRef","fadeOutModal","classList","add","closeModal","onClick","preventDefault","handleCloseButtonClick","PrivacyStatementModal","isModalOpen","setIsModalOpen","event","handleOpenModalClick","href","SignInForm","setPassword","signInHandler","validatePassword","validateUsername","usernameErrors","passwordErrors","errorsAfterSubmit","setErrorsAfterSubmit","usernameErrorList","map","usernameError","key","passwordErrorList","passwordError","afterSubmitErrorList","errorAfterSubmit","onSubmit","src","alt","htmlFor","id","onChange","to","withRouter","setUsernameErrors","setPasswordErrors","history","RegistrationForm","setPasswordConfirmation","registerHandler","errors","passwordConfirmationErrors","emailErrors","validateEmail","emailError","passwordConfirmationError","RegistrationVerification","setVerificationCode","sendVerificationHandler","placeholder","RegistrationFormContainer","registrationErrors","setPasswordConfirmationErrors","setEmailErrors","validatePasswordConfirmation","str","match","containsUppercaseLetter","containsNumber","containsSymbol","isEmailValid","isUserNameValid","isPasswordValid","isPasswordConfirmationValid","passowrd","ForgotPasswordFormContainer","useContext","passwordVerificationCode","setPasswordVerificationCode","isUsernameProvided","setIsUsernameProvided","isPasswordResetSuccess","setIsPasswordResetSuccess","usernameErrorMessages","setUsernameErrorMessages","formErrorMessages","setFormErrorMessages","passwordVerificationCodeErrors","setPasswordVerificationCodeErrors","usernameValidationErrors","validatePasswordVerificationCode","verificationCodeErrors","errorMessage","passwordVerificationCodeInputValue","passwordVerificationCodeValidationErrors","passwordVerificationCodeInputChangeHandler","passwordInputValue","passwordValidationErrors","passwordInputChangeHandler","passwordConfirmationInputValue","passwordConfirmationValidationErrors","passwordConfirmationInputChangeHandler","resetPasswordErrors","inputValue","usernameInputChangeHandler","validationErrors","FileUploadContext","FileUploadContextProvider","fileInputRef","excelToJsonConverter","appContext","setFilename","isFileFromS3","setIsFileFromS3","jsonData","setJsonData","isExcelConverted","setIsExcelConverted","uploadStatus","setUploadStatus","getFileObjects","clearFileUploadData","triggerInputClick","click","handleFileInputChange","inputField","getFileName","handleS3FilePreview","fileBody","MessageBubble","messageBubbleClasses","TextMessage","marginRight","marginLeft","paddingRight","paddingLeft","ButtonIconTooltip","icon","onClickHandler","handleButtonMouseLeave","$","find","tooltip","onMouseEnter","onMouseLeave","data-toggle","data-placement","title","AggregationUi","viewOptions","content","AggregationUiContainer","aggregationData","view","setView","displayHeading","aggregationDisplayData","grouping","heading","displayView","getLabels","aggregationType","labels","getData","getDisplayValue","fieldValue","displayValue","isNaN","trim","parseFloat","doc_count","aggregationDisplayDataKeys","getDataset","label","borderColor","borderWidth","maintainAspectRation","responsive","legend","display","tooltips","callbacks","tooltipItem","yLabel","lineData","datasets","backgroundColor","barData","pieData","doughnutData","defaultAggregationView","aggregationStat","aggregationStatsKeys","aggregationStatKey","stats","clickHandler","aggregationOption","option","Array","isArray","getAggregationType","stats_key","aggregationDataKeys","getGrouping","getAggregationDisplayData","displayAggregationData","SelectItems","items","itemsFilter","selectedItems","setSelectedItems","selectRef","dropdownItems","item","dropdownItem","selected","selectedItem","removeItemClickhandler","itemToRemove","newSelectedItems","newValue","defaultValue","disabled","defaultDropdownItem","DataUi","viewToggle","getFlattendedAggregationData","aggregation","flattenedAggregationData","getChildrenAggregationDataRecursively","aggregationChildrenKeys","hasAggregationChildren","getContent","aggregationContent","toLocaleLowerCase","contentFirstKey","getContentType","aggregationKey","getStatisticsContent","groupingContents","groupingKeys","getGroupingContent","mergeDataItemsIntoTable","commonFields","propertiesOfFirstObject","mergedData","isPropertyCommonToAllData","property","datumMainKey","datumContent","firstObjectMainKey","firstObjectContentProperties","setPropertiesOfFirstObject","setCommonFields","setMergedData","dataFirstKey","DataUiContainer","chartType","setChartType","xAxis","setXaxis","yAxis","setYaxis","xAxisType","setXaxisType","yAxisAggregationType","setYaxisAggregationType","fieldsToChart","setFieldsToChart","getFields","getRandomColor","min","max","Math","floor","random","chartTypeButtonHandler","getUniqueValuesForXaxisField","xAxisField","uniqueValues","getUniqueValuesForXaxisFields","uniqueValuesPerField","getSum","sum","getYaxisAggregation","yAxisData","getMin","getMax","getAverage","chartView","unselected","selectChartType","info","axis","getFieldsOfType","selectAxisOrField","localData","fields","scales","yAxes","ticks","beginAtZero","redraw","chart","viewButtonHandler","isFieldNumeric","firstRecord","numericFields","stringFields","datum","JsonMessage","aggregations","buttons","texts","JsonMessageContainer","jsonResult","Result","chartableItems","Chart","Aggregation","Aggregations","Data","Button","Text","getDecomposedJsonMessage","getAggregationsUi","getDataUi","button","buttonFirstKey","getButtonsUi","textFirstKey","getTextsUi","Message","isLast","scrollIntoView","block","behavior","messageAdditionalClasses","isMessageJson","MessagesContainer","Conversation","useAgTable","uploadedJsonFile","gridApi","setGridApi","gridColumnApi","setGridColumnApi","columnState","setColumnState","saveColumnState","getColumnState","onGridReady","api","columnApi","restoreColumnState","applyColumnState","state","resetState","resetColumnState","onColumnMoved","onColumnVisible","AgTableNew","rowSelection","sortable","FilePreviewTable","setIsTableVisible","setIsTableToggleVisible","fileUploadContext","isFullScreen","setIsFullScreen","tableContainerClass","sizingIcon","uploadButton","SignOutButton","signOutHandler","getDateNowFormatted","currentDate","getMonth","getDate","getFullYear","AccountInfo","openChangePassword","Header","theme","collapsed","setCollapsed","collapseClass","logoUrl","process","HeaderItem","Dropdown","isActive","setIsActive","toggle","dropdownItemsClass","dropdownClass","ButtonIconLink","RightSidebar","closeRightSidebar","rightSidebarClasses","isMobile","Sidebar","SidebarItem","tooltipText","position","sidebarItemClasses","Main","UploadFile","action","FileContainer","isOptionsOpen","setIsOptionsOpen","fileClickHandler","optionsListClass","textFileArray","fileExt","displayIcon","stopPropagation","openClickHandler","deleteClickHandler","optionsToggleClickHandler","FileUploading","role","FileUploadError","FilesList","searchString","setSearchString","isFilesListVisible","toggleIsFilesListVisible","onFolderClick","onFileClick","filesListClass","FilesListContainer","generateCurrentDirectoryPathString","currentDirectoryPathString","onCrumbClick","crumbIndex","newCurrentDirectoryPath","currentDirectoryPathWithHome","breadcrumb","aria-label","renderBreadcrumb","InputSuggestions","columnNames","userInput","setMessage","textInputRef","getLastWordOfInput","inputWordsArray","doesColumnStartWithInput","columnName","lastWordOfInput","lengthOfLastWordOfInput","autoCompleteInput","inputWithLastWordRemoved","getInputWithLastWordRemoved","focus","shouldDisplayColumnName","QueryBox","isStopConversationRequested","setIsStopConversationRequested","voiceState","setVoiceState","isStopConversationButtonVisible","setIsStopConversationButtonVisible","isSpeakButtonVisible","setIsSpeakButtonVisible","voiceStateInRef","botResponseErrorRef","getLastMessage","saveBotReply","botReply","isJson","isJsonMessageCorrectFormat","hasMessages","isMessageFromUser","platform","isMessageFromApp","conversation","reset","config","LexAudio","inputTranscript","timeDomain","bufferLength","getColumnsArray","columnsObject","columnsArray","columnsObjectKey","hasColumnProperty","messageObject","getMessageObject","parsedMessage","stopConversationButton","background","alignItems","isSpeakButtonDisabled","speakButton","advanceConversation","lastMessageIndex","lastMessage","Column","getColumnNames","offset","stopColor","userMessage","submitHandler","OptionsList","setOption","selectedOptionValue","optionValue","AlertModal","close","TimeoutPrompt","stayLoggedInHandler","allUser","createUser","createUserConversations","assertErrors","response","Error","join","CreateConversation","user1","user2","members","sort","conversationName","API","graphql","graphqlOperation","uuidv4","createdAt","conversationResponse","mutations","cognitoId","conversationId","createConversation","userConversation1Response","userConversation2Response","Analytics","record","attributes","CreateMessage","Users","toggleIsChatUserListVisible","toggleIsChatListVisible","currUser","createNewConversation","convos","sessionStorage","conversationExists","associated","status","cid","verifyConversation","query","queries","subscription","onSubscriptionMsg","prev","subscribeToNewUsers","loading","validUsers","toLowerCase","ChatUserList","isContactListVisible","fetchUsers","chatUserListClass","ContactToggle","ChatInput","setState","createNewMessage","toString","isSent","sender","signInUserSession","sub","required","onKeyUp","keyCode","t","ChatMessage","toLocaleTimeString","isFromMe","ChatMessageView","getSenderName","suser","us","subscribeToNewMessage","allMessageConnection","getConvo","sortMessages","b","getTime","senderName","ConversationList","currUserId","subscribeToNewUCs","me","conversations","userConversations","getUser","associatedConvs","userC","convname","getReceiverName","ChatList","isChatListVisible","ChatToggle","ChangePasswordContainer","FileUploadToast","closeFileUploadToast","fileUploadPendingMessage","fileUploadSuccessMessage","closeFileUploadToastTimer","fadeOutTimer","fileUploadToastRef","fadeOutFileUploadToast","clearTimeout","alertVariantClass","displayToastMessage","closeButtonVariantClass","ChatApp","sessionTimeOutInMinutes","sessionTimeOutMessage","forceLogoutAfterTimeOutInMinutes","maxFileUploadCount","surveyUrl","maxFileUploadSizeInKb","sessionTimeoutTime","forceLogoutTime","signOutTimer","useIdleTimer","timeout","onIdle","setIsUserTimedOut","debounce","getLastActiveTime","getRemainingTime","isUserTimedOut","isTableVisible","isTableToggleVisible","setTheme","setIsFilesListVisible","isAlertModalVisible","setIsAlertModalVisible","isHeaderDropdownOpen","setIsHeaderDropdownOpen","alertModalMessage","setAlertModalMessage","isFileUploadToastOpen","setIsFileUploadToastOpen","fileUploadStatus","setFileUploadStatus","setIsContactListVisible","setIsChatVisible","THEMES","tableContainer","closeFilesList","closeChatUserList","openChatList","closeChatList","isMaxFileUploadCountReached","displayRightSidebarContent","changePasswordClickHandler","openFileUploadToast","hasPendingFileUploads","hasFileUploadErrors","tableToggle","alertModal","shouldPreserveMessages","removeItem","timeoutPrompt","fileUploadToast","App","addUserToTable","variables","joined_at","authMode","joinedDate","setJoinedDate","newuser","registered","getToken","exact","render","awsmobile","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","aws_mobile_analytics_app_id","aws_mobile_analytics_app_region","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","Boolean","location","hostname","Amplify","configure","aws_exports","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9511252a.chunk.js","sourcesContent":["const useConfig = () => {\n  const appConfig = window.appConfig;\n  return appConfig;\n};\n\nexport default useConfig;\n","import { AppConfig } from \"aws-sdk\";\nimport { useEffect, useState } from \"react\";\nimport useConfig from \"./useConfig\";\n\nconst useMessages = () => {\n  const appConfig = useConfig().app;\n  const [messages, setMessages] = useState([]);\n  const [isPreviousMessagesLoaded, setIsPreviousMessagesLoaded] = useState(false);\n\n  const retrieveTranscriptFromLocalStorage = () => {\n    if (hasConversationInLocalStorage()) {\n      return getTranscriptFromLocalStorage();\n    } else {\n      return getWelcomeMessage();\n    }\n  };\n\n  const hasConversationInLocalStorage = () => {\n    return localStorage.getItem(\"transcript\") ? true : false;\n  };\n\n  const getTranscriptFromLocalStorage = () => {\n    return JSON.parse(localStorage.getItem(\"transcript\"));\n  };\n\n  const hasMessages = () => {\n    return messages.length > 0 ? true : false;\n  };\n\n  const saveTranscriptToLocalStorage = () => {\n    localStorage.setItem(\"transcript\", JSON.stringify(messages));\n  };\n\n  const getWelcomeMessage = () => {\n    const welcomeMessage = [\n      {\n        from: \"app\",\n        message: appConfig.welcomeMessage,\n      },\n    ];\n    return welcomeMessage;\n  };\n\n  // retrieve transcript from localStorage\n  // if no transcript in localStorage, add welcome message\n  useEffect(() => {\n    //console.log(isPreviousMessagesLoaded);\n    //console.log(retrieveTranscriptFromLocalStorage());\n    if (!isPreviousMessagesLoaded) {\n      setMessages([...retrieveTranscriptFromLocalStorage()]);\n      setIsPreviousMessagesLoaded(true);\n    }\n  }, [isPreviousMessagesLoaded]);\n\n  // save each message to transcript\n  useEffect(() => {\n    if (hasMessages()) {\n      saveTranscriptToLocalStorage();\n    } else {\n      setMessages([...retrieveTranscriptFromLocalStorage()]);\n    }\n  }, [messages]);\n\n  return {\n    messages,\n    setMessages,\n    isPreviousMessagesLoaded,\n  };\n};\n\nexport default useMessages;\n","import { useEffect, useRef, useState } from \"react\";\n\nimport useConfig from \"./useConfig\";\n\nconst useFiles = ({ s3, username }) => {\n  const { albumBucketName, uploadPath, retrievePath } = useConfig().s3;\n  const { isFileExplorerEnabled } = useConfig().app;\n  const [files, setFiles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [currentDirectoryPath, setCurrentDirectoryPath] = useState([]);\n  const [pendingFileUploads, setPendingFileUploads] = useState(null);\n  const [fileUploadErrors, setFileUploadErrors] = useState([]);\n  const [shouldGetObjects, setShouldGetObjects] = useState(false);\n  const uploadStartTime = useRef(null);\n\n  const userUploadPath = uploadPath + username + \"/\";\n  const userRetrievePath = retrievePath + username + \"/\";\n\n  function removeFileFromFileUploadErrors(filename) {\n    setFileUploadErrors(fileUploadErrors.filter((fileUploadError) => fileUploadError === filename));\n    getObjectsAsync({ Prefix: userRetrievePath });\n  }\n\n  function addToPendingFileUploads(filename) {\n    let newFilename = filename.replace(username + \"-\", \"\");\n    let pendingFileUploadsFromStorage = getPendingFileUploadsInStorage();\n    pendingFileUploadsFromStorage = [...pendingFileUploadsFromStorage, newFilename];\n    setPendingFileUploadsInStorage([...pendingFileUploadsFromStorage]);\n    setPendingFileUploads([...pendingFileUploadsFromStorage]);\n  }\n\n  function fileUploadErrorHandler(filename) {\n    let pendingFileUploadsFromStorage = getPendingFileUploadsInStorage();\n    pendingFileUploadsFromStorage = pendingFileUploadsFromStorage.filter(\n      (pendingFileUpload) => pendingFileUpload !== filename\n    );\n    setPendingFileUploadsInStorage(pendingFileUploadsFromStorage);\n    setPendingFileUploads(pendingFileUploadsFromStorage);\n    setFileUploadErrors([...fileUploadErrors, filename]);\n  }\n\n  function setPendingFileUploadsInStorage(newPendingFileUploadsFromStorage) {\n    if (newPendingFileUploadsFromStorage) {\n      localStorage.setItem(\"pendingFileUploads\", JSON.stringify(newPendingFileUploadsFromStorage));\n    } else {\n      localStorage.setItem(\"pendingFileUploads\", \"[]\");\n      return [];\n    }\n  }\n\n  function getPendingFileUploadsInStorage() {\n    const stringifiedPendingFileUploadsInStorage = localStorage.getItem(\"pendingFileUploads\");\n    if (stringifiedPendingFileUploadsInStorage) {\n      return JSON.parse(stringifiedPendingFileUploadsInStorage);\n    } else {\n      return setPendingFileUploadsInStorage();\n    }\n  }\n\n  const getObjectsAsync = async (options) => {\n    const objects = await getObjects(options);\n    const folders = [];\n    const files = [];\n    objects.Contents.forEach((object) => {\n      let currentObjectKey = object.Key;\n      currentObjectKey = currentObjectKey.replace(userRetrievePath, \"\");\n      let currentObjectKeyArray = currentObjectKey.split(\"/\");\n\n      if (currentObjectKeyArray.length > 1) {\n        const folderName = currentObjectKeyArray[0];\n        if (!folders.includes(folderName)) {\n          folders.push(folderName);\n        }\n      } else {\n        files.push(currentObjectKey);\n      }\n    });\n    setFolders(folders);\n    setFiles(files);\n  };\n\n  const getFolderContents = async (folder) => {\n    // lists all files. folders become prefixes\n    const objects = await getObjects(folder);\n    const folders = [];\n    const files = [];\n    objects.Contents.forEach((object) => {\n      const processedObject = object.Key.replace(folder + \"/\", \"\");\n      if (processedObject.split(\"/\").length > 1) {\n        if (!folders.includes(processedObject.split(\"/\")[0])) {\n          folders.push(processedObject.split(\"/\")[0]);\n        }\n      } else {\n        files.push(processedObject);\n      }\n    });\n    // console.log(folders);\n    // console.log(files);\n    setFolders(folders);\n    setFiles(files);\n  };\n\n  // lists all files. folders become prefixes\n  function getObjects(options) {\n    const listObjectsPromise = new Promise((resolve, reject) => {\n      s3.listObjects(options, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n    const objects = listObjectsPromise;\n    return objects;\n  }\n\n  function startPollToCheckIfObjectIsUploaded(objectKey) {\n    uploadStartTime.current = Date.now();\n    pollIfObjectIsUploaded(objectKey);\n  }\n\n  async function pollIfObjectIsUploaded(objectKey) {\n    // console.log(\"poll\");\n    const userFiles = await getUserFiles();\n    if (userFiles.includes(objectKey)) {\n      // console.log(\"object has been uploaded\");\n      setShouldGetObjects(true);\n      return;\n    }\n    if (Date.now() - uploadStartTime.current > 40000) {\n      fileUploadErrorHandler(objectKey);\n      return;\n    }\n    setTimeout(() => pollIfObjectIsUploaded(objectKey), 5000);\n  }\n\n  async function getUserFiles() {\n    const userFiles = [];\n    const objects = await getObjects({ Prefix: userRetrievePath });\n    const objectsContents = objects.Contents;\n    for (let i = 0; i < objectsContents.length; i++) {\n      userFiles.push(objectsContents[i].Key.replace(userRetrievePath, \"\"));\n    }\n    return userFiles;\n  }\n\n  function getFile(objectKey) {\n    const params = {\n      Bucket: albumBucketName,\n      Key: userRetrievePath + objectKey,\n    };\n    const getFilePromise = new Promise((resolve, reject) => {\n      s3.getObject(params, function (err, data) {\n        if (err) {\n          // console.log(\"There was an error retrieving the file\");\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n    return getFilePromise;\n  }\n\n  function uploadFile(fileToUpload, fingerprint, callback) {\n    var fileName = fileToUpload.name;\n    var defaultUploadFolder = userUploadPath;\n\n    // file key: folder/filename\n    var photoKey = defaultUploadFolder + fingerprint + \"-\" + fileName;\n\n    // Use S3 ManagedUpload class as it supports multipart uploads\n    var upload = new window.AWS.S3.ManagedUpload({\n      params: {\n        Bucket: albumBucketName,\n        Key: photoKey,\n        Body: fileToUpload,\n      },\n    });\n\n    var promise = upload.promise();\n\n    promise.then(\n      function (data) {\n        addToPendingFileUploads(fingerprint + \"-\" + fileToUpload.name);\n        callback(\"success\");\n      },\n      function (err) {\n        removeFileFromFileUploadErrors(fingerprint + \"-\" + fileToUpload.name);\n        // console.log(\"There was an error uploading your photo: \", err.message);\n        callback(\"error\");\n        return;\n      }\n    );\n  }\n\n  function deleteFile(objectKey) {\n    var params = {\n      Bucket: albumBucketName,\n      Key: retrievePath + username + \"/\" + objectKey,\n    };\n    s3.deleteObject(params, function (err, data) {\n      if (err) {\n        // console.log(err, err.stack);\n      } else {\n        getObjectsAsync({ Prefix: userRetrievePath });\n      }\n    });\n  }\n\n  // Check if s3 has been created\n  // s3 is dependecy fullfilled by useCognito\n  useEffect(() => {\n    if (s3 && isFileExplorerEnabled && username) {\n      let options = {};\n      let prefix = userRetrievePath;\n      if (currentDirectoryPath.length > 0) {\n        currentDirectoryPath.forEach((path, index) => {\n          prefix += path + \"/\";\n        });\n      }\n      if (prefix !== \"\") {\n        options.Prefix = prefix;\n      }\n      getObjectsAsync(options);\n    }\n    // eslint-disable-next-line\n  }, [currentDirectoryPath, s3, username, isFileExplorerEnabled, userRetrievePath]);\n\n  // initialize pendingFileUploads\n  useEffect(() => {\n    if (!pendingFileUploads) {\n      setPendingFileUploads(getPendingFileUploadsInStorage());\n    } else {\n      if (s3 && pendingFileUploads.length > 0) {\n        // console.log(\"Triggered poll from useEffect\");\n        startPollToCheckIfObjectIsUploaded(pendingFileUploads[0]);\n      } else {\n        // no op\n      }\n    }\n  }, [pendingFileUploads]);\n\n  // update pendingFileUploads\n  useEffect(() => {\n    const getPendingFileUploadsInFiles = () => {\n      let pendingFileUploadsInFiles = [];\n      for (let i = 0; i < pendingFileUploads.length; i++) {\n        if (files.includes(pendingFileUploads[i])) {\n          pendingFileUploadsInFiles.push(pendingFileUploads[i]);\n        }\n      }\n      return pendingFileUploadsInFiles;\n    };\n    const getNewPendingFileUploads = () => {\n      const toDeleteFromPendingFileUploads = getPendingFileUploadsInFiles();\n      const newPendingFileUploads = [];\n      for (let i = 0; i < pendingFileUploads.length; i++) {\n        if (!toDeleteFromPendingFileUploads.includes(pendingFileUploads[i])) {\n          newPendingFileUploads.push(pendingFileUploads[i]);\n        }\n      }\n      return newPendingFileUploads;\n    };\n    if (pendingFileUploads) {\n      setPendingFileUploadsInStorage(getNewPendingFileUploads());\n      setPendingFileUploads(getNewPendingFileUploads());\n    }\n  }, [files]);\n\n  // check the need to getObjects\n  useEffect(() => {\n    if (shouldGetObjects) {\n      getObjectsAsync({ Prefix: userRetrievePath });\n      setShouldGetObjects(false);\n    }\n  }, [shouldGetObjects]);\n\n  return {\n    files,\n    folders,\n    currentDirectoryPath,\n    getFolderContents,\n    uploadFile,\n    setCurrentDirectoryPath,\n    getFile,\n    deleteFile,\n    pendingFileUploads,\n    fileUploadErrors,\n    removeFileFromFileUploadErrors,\n  };\n};\n\nexport default useFiles;\n","import XLSX from \"xlsx\";\n\nconst useExcelToJson = () => {\n  const convertExcelToJson = (acceptedFiles, callback) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        var data = reader.result;\n        data = new Uint8Array(data);\n        var workbook = XLSX.read(data, { type: \"array\", raw: true });\n        var result = {};\n        workbook.SheetNames.forEach(function (sheetName) {\n          var roa = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1, defval: \"\" });\n          if (roa.length) result[sheetName] = roa;\n        });\n        const formattedData = formatJsonForAgTable(result);\n        callback(formattedData);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  };\n  const convertExcelFromS3ToJson = (excelFromS3) => {\n    var data = excelFromS3;\n    var workbook = XLSX.read(data, { type: \"array\", raw: true });\n    var result = {};\n    workbook.SheetNames.forEach(function (sheetName) {\n      var roa = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1, defval: \"\" });\n      if (roa.length) result[sheetName] = roa;\n    });\n\n    const formattedData = formatJsonForAgTable(result);\n    return formattedData;\n  };\n  const formatJsonForAgTable = (json) => {\n    const columnDefs = [];\n    const rowData = [];\n    const jsonKeys = Object.keys(json);\n    // extract the columns\n    json[jsonKeys[0]][0].forEach((column) => {\n      columnDefs.push({\n        headerName: column,\n        field: column,\n      });\n    });\n    // extract the row data\n    const rowDataLength = json[jsonKeys[0]].length; //because the first row is column headings\n    for (let i = 1; i < rowDataLength; i++) {\n      const jsonRowData = json[jsonKeys[0]][i];\n      const formattedRow = {};\n      for (let j = 0; j < columnDefs.length; j++) {\n        formattedRow[columnDefs[j].field] = jsonRowData[j];\n      }\n      rowData.push(formattedRow);\n    }\n    return {\n      columnDefs,\n      rowData,\n    };\n\n    // {\n    //   columnDefs: [\n    //     { headerName: \"Make\", field: \"make\", display: true },\n    //     { headerName: \"Model\", field: \"model\", display: true },\n    //     { headerName: \"Price\", field: \"price\", display: true }\n\n    //   ],\n    //   rowData: [\n    //     { make: \"Toyota\", model: \"Celica\", price: 35000 },\n    //     { make: \"Ford\", model: \"Mondeo\", price: 32000 },\n    //     { make: \"Porsche\", model: \"Boxter\", price: 72000 }\n    //   ]\n    // }\n  };\n\n  return {\n    convertExcelToJson,\n    convertExcelFromS3ToJson,\n  };\n};\n\nexport default useExcelToJson;\n","import { useState, useEffect } from \"react\";\n\nconst useLoginAttempts = () => {\n  const [loginAttempts, setLoginAttempts] = useState({});\n\n  useEffect(() => {\n    const loginAttemptsInStorage = localStorage.getItem(\"loginAttempts\");\n    if (loginAttemptsInStorage && Object.keys(loginAttempts).length === 0) {\n      const loginAttemptsJson = JSON.parse(loginAttemptsInStorage);\n      setLoginAttempts(loginAttemptsJson);\n    }\n  });\n\n  const getLoginAttempts = (username) => {\n    return loginAttempts[username] ? loginAttempts[username] : 0;\n  };\n\n  const incrementLoginAttempts = (username) => {\n    const incrementedLoginAttempt = loginAttempts[username] ? loginAttempts[username] + 1 : 1;\n    const newLoginAttemptsObject = { ...loginAttempts, [username]: incrementedLoginAttempt };\n    setLoginAttempts({ ...newLoginAttemptsObject });\n    localStorage.setItem(\"loginAttempts\", JSON.stringify({ ...loginAttempts, [username]: ++loginAttempts[username] }));\n  };\n\n  const resetLoginAttempts = (username) => {\n    const newLoginAttemptsObject = { ...loginAttempts, [username]: 0 };\n    setLoginAttempts({ ...newLoginAttemptsObject });\n    localStorage.setItem(\"loginAttempts\", JSON.stringify(newLoginAttemptsObject));\n  };\n\n  return {\n    getLoginAttempts,\n    incrementLoginAttempts,\n    resetLoginAttempts,\n  };\n};\n\nexport default useLoginAttempts;\n","import * as AmazonCognitoIdentity from \"amazon-cognito-identity-js\";\nimport * as AWS from \"aws-sdk\";\nimport { useEffect, useState } from \"react\";\n\nimport useConfig from \"./useConfig\";\n\nconst useCognito = () => {\n  const appConfig = useConfig();\n  const poolData = { UserPoolId: appConfig.cognito.UserPoolId, ClientId: appConfig.cognito.ClientId };\n  const userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userSub, setUserSub] = useState(\"\");\n\n  const [cognitoUser, setCognitoUser] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [registrationStatus, setRegistrationStatus] = useState(\"not started\");\n\n  const signIn = (username, password, errorCallback) => {\n    setUsername(username);\n\n    var authenticationData = {\n      Username: username,\n      Password: password,\n    };\n\n    var authenticationDetails = new AmazonCognitoIdentity.AuthenticationDetails(authenticationData);\n\n    let cognitoUser = getCognitoUser(username, userPool);\n\n    //console.log(getCognitoUser);\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: function (result) {\n        var accessToken = result.getAccessToken().getJwtToken();\n\n        //POTENTIAL: Region needs to be set if not already set previously elsewhere.\n        AWS.config.region = appConfig.cognito.region;\n\n        AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n          IdentityPoolId: appConfig.cognito.identityPoolId, // your identity pool id here\n          Logins: {\n            // Change the key below according to the specific region your user pool is in.\n            [\"cognito-idp.\" +\n            appConfig.cognito.region +\n            \".amazonaws.com/\" +\n            appConfig.cognito.UserPoolId]: result.getIdToken().getJwtToken(),\n          },\n        });\n\n        //refreshes credentials using AWS.CognitoIdentity.getCredentialsForIdentity()\n        AWS.config.credentials.refresh((error) => {\n          if (error) {\n            console.log(\"Here\");\n            console.error(error);\n          } else {\n            // Instantiate aws sdk service objects now that the credentials have been updated.\n            // example: var s3 = new AWS.S3();\n            setCognitoUser(cognitoUser);\n            setIsLoggedIn(true);\n            setCurrentUser(cognitoUser);\n            setUsername(cognitoUser.username);\n          }\n        });\n      },\n      onFailure: function (err) {\n        // alert(err.message || JSON.stringify(err));\n        if (err.code === \"UserNotConfirmedException\") {\n          setRegistrationStatus(\"verifying\");\n        } else {\n          errorCallback(err);\n        }\n      },\n    });\n  };\n\n  const signOut = () => {\n    getCognitoUser(username, userPool).signOut();\n    setCognitoUser(null);\n    setCurrentUser(null);\n    setIsLoggedIn(false);\n    setUsername(null);\n    setRegistrationStatus(\"not started\");\n  };\n\n  const getCurrentLoggedInSession = () => {\n    let cognitoUser = userPool.getCurrentUser();\n\n    if (cognitoUser != null) {\n      cognitoUser.getSession(function (err, session) {\n        if (err) {\n          console.log(err.message);\n        } else {\n          const idToken = session.getIdToken().getJwtToken();\n          setEmail(session.getIdToken().payload.email);\n          getCognitoIdentityCredentials(cognitoUser, idToken);\n          setCognitoUser(cognitoUser);\n        }\n      });\n    } else {\n      console.log(\"Session expired. Please log in again.\");\n    }\n  };\n\n  function getCognitoIdentityCredentials(cognitoUser, idToken) {\n    AWS.config.region = appConfig.cognito.region;\n\n    var loginMap = getLoginMap(appConfig.cognito.region, appConfig.cognito.UserPoolId, idToken);\n\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: appConfig.cognito.identityPoolId,\n      Logins: loginMap,\n    });\n\n    AWS.config.credentials.clearCachedId();\n\n    AWS.config.credentials.get(function (err) {\n      if (err) {\n        console.log(err.message);\n      } else {\n        setIsLoggedIn(true);\n        setCurrentUser(cognitoUser);\n        setUsername(cognitoUser.getUsername());\n      }\n    });\n  }\n\n  function register(email, username, password, passwordConfirmation, errorCallback) {\n    setUsername(username);\n    var attributeList = [];\n\n    var dataEmail = {\n      Name: \"email\",\n      Value: email,\n    };\n\n    var attributeEmail = new AmazonCognitoIdentity.CognitoUserAttribute(dataEmail);\n\n    attributeList.push(attributeEmail);\n\n    userPool.signUp(username, password, attributeList, null, function (err, result) {\n      if (err) {\n        console.log(err.message);\n        errorCallback(err);\n      } else {\n        setCognitoUser(result.user);\n        setUserSub(result.userSub);\n        setRegistrationStatus(\"verifying\");\n      }\n    });\n  }\n\n  function deleteAccount() {\n    cognitoUser.deleteUser(function (err, result) {\n      if (err) {\n        alert(err.message || JSON.stringify(err));\n        return;\n      }\n      console.log(\"call result: \" + result);\n      localStorage.clear();\n      signOut();\n    });\n  }\n\n  function verifyAccount(verificationCode) {\n    getCognitoUser(username, userPool).confirmRegistration(verificationCode, true, function (err, result) {\n      if (err) {\n        console.log(err);\n      } else {\n        localStorage.setItem(\"usernew\", cognitoUser.username);\n        setRegistrationStatus(\"verified\");\n      }\n    });\n  }\n\n  function resetPassword(username, callback) {\n    // setup cognitoUser first\n    let cognitoUser = getCognitoUser(username, userPool);\n\n    // call forgotPassword on cognitoUser\n    cognitoUser.forgotPassword({\n      onSuccess: function (result) {\n        console.log(result);\n        callback(null);\n      },\n      onFailure: function (err) {\n        callback(err);\n      },\n    });\n  }\n\n  function confirmPassword(username, verificationCode, newPassword, callback) {\n    let cognitoUser = getCognitoUser(username, userPool);\n\n    cognitoUser.confirmPassword(verificationCode, newPassword, {\n      onFailure(err) {\n        callback(err);\n      },\n      onSuccess() {\n        callback(null);\n      },\n    });\n  }\n\n  const getCognitoUser = (username, userPool) => {\n    const userData = {\n      Username: username,\n      Pool: userPool,\n    };\n    return new AmazonCognitoIdentity.CognitoUser(userData);\n  };\n\n  const getLoginMap = (region, userPoolId, idToken) => {\n    let loginMap = {};\n    loginMap[\"cognito-idp.\" + region + \".amazonaws.com/\" + userPoolId] = idToken;\n    return loginMap;\n  };\n\n  // Determine if user is logged in\n  useEffect(() => {\n    getCurrentLoggedInSession();\n    // eslint-disable-next-line\n  }, []);\n\n  return {\n    signIn,\n    signOut,\n    register,\n    deleteAccount,\n    verifyAccount,\n    resetPassword,\n    confirmPassword,\n    username,\n    email,\n    isLoggedIn,\n    registrationStatus,\n    currentUser,\n    userSub,\n  };\n};\n\nexport default useCognito;\n","import { useState, useEffect } from \"react\";\nimport useConfig from \"./useConfig\";\nimport * as AWS from \"aws-sdk\";\n\nconst useS3 = ({ isLoggedIn }) => {\n  const appConfig = useConfig();\n  const [s3, setS3] = useState(null);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setS3(\n        new AWS.S3({\n          apiVersion: appConfig.s3.bucketVersionNumber,\n          params: { Bucket: appConfig.s3.albumBucketName },\n        })\n      );\n    }\n  }, [isLoggedIn]);\n\n  return {\n    s3,\n  };\n};\n\nexport default useS3;\n","import * as AWS from \"aws-sdk\";\nimport useConfig from \"./useConfig\";\nconst useLex = ({ username }) => {\n  const lexConfig = useConfig().lex;\n  function pushChat(text, callback) {\n    if (!username) {\n      return;\n    }\n    const lexruntime = new AWS.LexRuntime();\n\n    // send it to the Lex runtime\n    const params = {\n      botAlias: lexConfig.botAlias,\n      botName: lexConfig.botName,\n      inputText: text,\n      userId: username,\n      sessionAttributes: window.sessionAttributes,\n    };\n\n    lexruntime.postText(params, function (err, data) {\n      if (err) {\n        // console.log(err);\n        window.sessionAttributes = {};\n        callback(\"error\");\n        return;\n      }\n      if (data) {\n        window.sessionAttributes = data.sessionAttributes;\n        // capture the sessionAttributes for the next cycle\n        // show response and/or error/dialog status\n        const filteredMessage = data.message.replace(/(\\r\\n|\\n|\\r)/g, \"\");\n        callback(filteredMessage);\n      }\n    });\n  }\n  return {\n    pushChat,\n    botName: lexConfig.botName,\n    botAlias: lexConfig.botAlias,\n  };\n};\n\nexport default useLex;\n","import React, { useRef } from \"react\";\nimport useMessages from \"./hooks/useMessages\";\nimport useFiles from \"./hooks/useFiles\";\nimport useExcelToJson from \"./hooks/useExcelToJson\";\nimport { useState } from \"react\";\nimport useLoginAttempts from \"./hooks/useLoginAttempts\";\n\nimport useCognito from \"./hooks/useCognito\";\nimport useS3 from \"./hooks/useS3\";\nimport useLex from \"./hooks/useLex\";\n\nexport const AppContext = React.createContext();\n\nconst AppContextProvider = ({ children }) => {\n  const { messages, setMessages, isPreviousMessagesLoaded } = useMessages();\n\n  const { convertExcelToJson } = useExcelToJson();\n\n  const [rawDataFile, setRawDataFile] = useState();\n\n  const [jsonDataFile, setJsonDataFile] = useState();\n\n  const { getLoginAttempts, incrementLoginAttempts, resetLoginAttempts } = useLoginAttempts();\n\n  const [allUsers, setAllUsers] = useState([]);\n\n  const [conId, setConId] = useState(\"\");\n\n  const [isWaiting, setIsWaiting] = useState(false);\n\n  const {\n    signIn,\n    signOut,\n    register,\n    deleteAccount,\n    verifyAccount,\n    registrationStatus,\n    isLoggedIn,\n    username,\n    email,\n    userIdleTime,\n    resetPassword,\n    confirmPassword,\n    cognitoUser,\n    currentUser,\n    userSub,\n  } = useCognito({ setMessages });\n\n  const { pushChat, botName, botAlias } = useLex({ username });\n\n  const { s3 } = useS3({ isLoggedIn });\n\n  const {\n    files,\n    folders,\n    currentDirectoryPath,\n    getFolderContents,\n    uploadFile,\n    setCurrentDirectoryPath,\n    getFile,\n    deleteFile,\n    pendingFileUploads,\n    fileUploadErrors,\n    removeFileFromFileUploadErrors,\n    maxFileUpload,\n  } = useFiles({ s3, username });\n\n  const uploadFileInputRef = useRef();\n\n  const [uploadFileInput, setUploadFileInput] = useState(null);\n\n  const [isUploadButtonEnabled, setIsUploadButtonEnabled] = useState(false);\n\n  const handleFileSelection = () => {\n    const filesList = uploadFileInputRef.current.files;\n    let fileObjects = [];\n    for (let i = 0, numFiles = filesList.length; i < numFiles; i++) {\n      fileObjects.push(filesList[i]);\n    }\n    convertExcelToJson(fileObjects, setJsonDataFile);\n    setIsUploadButtonEnabled(true);\n  };\n  const resetFileInputRefValue = () => {\n    uploadFileInputRef.current.value = null;\n    setIsUploadButtonEnabled(false);\n  };\n\n  const [isRightSidebarOpen, setIsRightSidebarOpen] = useState(false);\n\n  const [rightSidebarContent, setRightSidebarContent] = useState(\"account-info\");\n\n  return (\n    <AppContext.Provider\n      value={{\n        messages,\n        isPreviousMessagesLoaded,\n        setMessages,\n        files,\n        folders,\n        currentDirectoryPath,\n        getFolderContents,\n        uploadFile,\n        setCurrentDirectoryPath,\n        getFile,\n        deleteFile,\n        uploadFileInputRef,\n        uploadFileInput,\n        setUploadFileInput,\n        rawDataFile,\n        setRawDataFile,\n        jsonDataFile,\n        setJsonDataFile,\n        handleFileSelection,\n        resetFileInputRefValue,\n        isUploadButtonEnabled,\n        setIsUploadButtonEnabled,\n        signIn,\n        signOut,\n        register,\n        deleteAccount,\n        verifyAccount,\n        pushChat,\n        registrationStatus,\n        isLoggedIn,\n        username,\n        email,\n        botName,\n        botAlias,\n        isRightSidebarOpen,\n        rightSidebarContent,\n        setRightSidebarContent,\n        setIsRightSidebarOpen,\n        maxFileUpload,\n        userIdleTime,\n        resetPassword,\n        confirmPassword,\n        getLoginAttempts,\n        incrementLoginAttempts,\n        resetLoginAttempts,\n        pendingFileUploads,\n        fileUploadErrors,\n        removeFileFromFileUploadErrors,\n        userSub,\n        cognitoUser,\n        currentUser,\n        allUsers,\n        setAllUsers,\n        conId,\n        setConId,\n        isWaiting,\n        setIsWaiting,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContextProvider;\n","import React from \"react\";\n\nexport const tableToggleIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z\" />\n  </svg>\n);\n\nexport const fileIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\">\n    <g>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n      <path\n        className=\"svg-color\"\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const filesIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path\n      className=\"svg-color\"\n      d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"\n    />\n  </svg>\n);\n\nexport const uploadSvgIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path\n      className=\"svg-color\"\n      d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n    />\n  </svg>\n);\n\nexport const contactIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"black\"\n    //width=\"18px\"\n    //height=\"18px\"\n  >\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h16v12zM4 0h16v2H4zm0 22h16v2H4zm8-10c1.38 0 2.5-1.12 2.5-2.5S13.38 7 12 7 9.5 8.12 9.5 9.5 10.62 12 12 12zm0-3.5c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm5 7.49C17 13.9 13.69 13 12 13s-5 .9-5 2.99V17h10v-1.01zm-8.19-.49c.61-.52 2.03-1 3.19-1 1.17 0 2.59.48 3.2 1H8.81z\" />\n  </svg>\n);\n\nexport const chatIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    //width=\"16\"\n    //height=\"16\"\n    fill=\"black\"\n    className=\"bi bi-chat-dots\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path d=\"M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\n    <path d=\"M2.165 15.803l.02-.004c1.83-.363 2.948-.842 3.468-1.105A9.06 9.06 0 0 0 8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6a10.437 10.437 0 0 1-.524 2.318l-.003.011a10.722 10.722 0 0 1-.244.637c-.079.186.074.394.273.362a21.673 21.673 0 0 0 .693-.125zm.8-3.108a1 1 0 0 0-.287-.801C1.618 10.83 1 9.468 1 8c0-3.192 3.004-6 7-6s7 2.808 7 6c0 3.193-3.004 6-7 6a8.06 8.06 0 0 1-2.088-.272 1 1 0 0 0-.711.074c-.387.196-1.24.57-2.634.893a10.97 10.97 0 0 0 .398-2z\" />\n  </svg>\n);\n\nexport const hamburgerIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </svg>\n);\n\nexport const caretDownIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M7 10l5 5 5-5z\" />\n  </svg>\n);\n\nexport const userProfileIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ width: \"24px\", fill: \"white\" }}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n  </svg>\n);\n\nexport const gearIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" style={{ width: \"24px\", fill: \"white\" }}>\n    <g>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\"></path>\n      <path\n        className=\"svg-color\"\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n      ></path>\n    </g>\n  </svg>\n);\n\nexport const closeIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\n  </svg>\n);\n\nexport const closeIcon2 = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n  </svg>\n);\n\nexport const checkIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>\n  </svg>\n);\n\nexport const barChartIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\" />\n  </svg>\n);\n\nexport const pieChartIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z\" />\n  </svg>\n);\n\nexport const lineChartIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z\" />\n  </svg>\n);\n\nexport const doughnutChartIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M2 12C2 6.48 6.48 2 12 2s10 4.48 10 10-4.48 10-10 10S2 17.52 2 12zm10 6c3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6 2.69 6 6 6z\" />\n  </svg>\n);\n\nexport const tableViewIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z\" />\n  </svg>\n);\n\nexport const folderIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\" />\n  </svg>\n);\n\nexport const excelIcon = (\n  <svg className=\"svg-excel\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g>\n      <rect fill=\"none\" />\n      <path d=\"M20.41,8.41l-4.83-4.83C15.21,3.21,14.7,3,14.17,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V9.83 C21,9.3,20.79,8.79,20.41,8.41z M7,7h7v2H7V7z M17,17H7v-2h10V17z M17,13H7v-2h10V13z\" />\n    </g>\n  </svg>\n);\n\nexport const htmlFileIcon = (\n  <svg className=\"svg-html\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g>\n      <rect fill=\"none\" />\n      <path d=\"M20.41,8.41l-4.83-4.83C15.21,3.21,14.7,3,14.17,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V9.83 C21,9.3,20.79,8.79,20.41,8.41z M7,7h7v2H7V7z M17,17H7v-2h10V17z M17,13H7v-2h10V13z\" />\n    </g>\n  </svg>\n);\n\nexport const jsFileIcon = (\n  <svg className=\"svg-js\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g>\n      <rect fill=\"none\" />\n      <path d=\"M20.41,8.41l-4.83-4.83C15.21,3.21,14.7,3,14.17,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V9.83 C21,9.3,20.79,8.79,20.41,8.41z M7,7h7v2H7V7z M17,17H7v-2h10V17z M17,13H7v-2h10V13z\" />\n    </g>\n  </svg>\n);\n\nexport const defaultFileIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <g>\n      <rect fill=\"none\" />\n      <path d=\"M20.41,8.41l-4.83-4.83C15.21,3.21,14.7,3,14.17,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V9.83 C21,9.3,20.79,8.79,20.41,8.41z M7,7h7v2H7V7z M17,17H7v-2h10V17z M17,13H7v-2h10V13z\" />\n    </g>\n  </svg>\n);\n\nexport const moreVerticalIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n  </svg>\n);\n\nexport const discardTableIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n  </svg>\n);\nexport const fullScreenIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" />\n  </svg>\n);\nexport const exitFullScreenIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" />\n  </svg>\n);\nexport const uploadIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\" />\n  </svg>\n);\nexport const minimizeIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M6 19h12v2H6z\" />\n  </svg>\n);\n\nexport const uploadSuccessIcon = (\n  <svg className=\"ml-3\" fill=\"#3D774B\" height=\"24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n  </svg>\n);\n","import { useEffect } from \"react\";\n\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;\n","import React, { useRef } from \"react\";\n\nimport { closeIcon } from \"../../Icons/Icons\";\n\nimport \"./GenericModal.scss\";\n\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\n\nconst GenericModal = (props) => {\n  const genericModalRef = useRef();\n  const genericModalDialogRef = useRef();\n\n  const handleCloseButtonClick = (e) => {\n    e.preventDefault();\n    fadeOutModal();\n  };\n\n  const fadeOutModal = () => {\n    genericModalRef.current.classList.add(\"generic-modal--closing\");\n    setTimeout(props.closeModal, 450);\n  };\n\n  useOutsideClick(genericModalDialogRef, fadeOutModal);\n\n  return (\n    <div className=\"generic-modal\" ref={genericModalRef}>\n      <div className=\"generic-modal__dialog\" ref={genericModalDialogRef}>\n        <div className=\"generic-modal__heading\">\n          <div className=\"generic-modal__title\">Privacy Statement</div>\n          <button className=\"generic-modal__close btn btn-danger\" onClick={(e) => handleCloseButtonClick(e)}>\n            {closeIcon}\n          </button>\n        </div>\n        <div className=\"generic-modal__content\">{props.children}</div>\n        <div className=\"generic-modal__footer\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenericModal;\n","import React, { useState } from \"react\";\n\nimport \"./PrivacyStatementModal.scss\";\n\nimport GenericModal from \"../GenericModal/GenericModal\";\n\nconst PrivacyStatementModal = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleCloseModalClick = () => {\n    setIsModalOpen(false);\n  };\n  const handleOpenModalClick = (event) => {\n    event.preventDefault();\n    setIsModalOpen(true);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-content-center\">\n        <button onClick={(event) => handleOpenModalClick(event)} className=\"btn btn-link\">\n          Privacy Statement\n        </button>\n      </div>\n      {isModalOpen ? (\n        <GenericModal closeModal={handleCloseModalClick}>\n          <div className=\"privacy-statement\">\n            <h2>Who we are</h2>\n\n            <p>Our website address is: https://thinkquic.com.</p>\n\n            <h2>What personal data we collect and why we collect it</h2>\n\n            <h3>Comments</h3>\n\n            <p>\n              When visitors leave comments on the site we collect the data shown in the comments form, and also the\n              visitor’s IP address and browser user agent string to help spam detection.\n            </p>\n\n            <p>\n              An anonymized string created from your email address (also called a hash) may be provided to the Gravatar\n              service to see if you are using it. The Gravatar service privacy policy is available here:\n              https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the\n              public in the context of your comment.\n            </p>\n\n            <h3>Media</h3>\n\n            <p>\n              If you upload images to the website, you should avoid uploading images with embedded location data (EXIF\n              GPS) included. Visitors to the website can download and extract any location data from images on the\n              website.\n            </p>\n\n            <h3>Contact forms</h3>\n\n            <h3>Cookies</h3>\n\n            <p>\n              If you leave a comment on our site you may opt-in to saving your name, email address and website in\n              cookies. These are for your convenience so that you do not have to fill in your details again when you\n              leave another comment. These cookies will last for one year.\n            </p>\n\n            <p>\n              If you visit our login page, we will set a temporary cookie to determine if your browser accepts cookies.\n              This cookie contains no personal data and is discarded when you close your browser.\n            </p>\n\n            <p>\n              When you log in, we will also set up several cookies to save your login information and your screen\n              display choices. Login cookies last for two days, and screen options cookies last for a year. If you\n              select “Remember Me”, your login will persist for two weeks. If you log out of your account, the login\n              cookies will be removed.\n            </p>\n\n            <p>\n              If you edit or publish an article, an additional cookie will be saved in your browser. This cookie\n              includes no personal data and simply indicates the post ID of the article you just edited. It expires\n              after 1 day.\n            </p>\n\n            <h3>Embedded content from other websites</h3>\n\n            <p>\n              Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content\n              from other websites behaves in the exact same way as if the visitor has visited the other website.\n            </p>\n\n            <p>\n              These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor\n              your interaction with that embedded content, including tracking your interaction with the embedded content\n              if you have an account and are logged in to that website.\n            </p>\n\n            <h3>Analytics</h3>\n\n            <h2>Who we share your data with</h2>\n\n            <p>Google Analytics</p>\n\n            <h2>How long we retain your data</h2>\n\n            <p>\n              If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can\n              recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.\n            </p>\n\n            <p>\n              For users that register on our website (if any), we also store the personal information they provide in\n              their user profile. All users can see, edit, or delete their personal information at any time (except they\n              cannot change their username). Website administrators can also see and edit that information.\n            </p>\n\n            <h2>What rights you have over your data</h2>\n\n            <p>\n              If you have an account on this site, or have left comments, you can request to receive an exported file of\n              the personal data we hold about you, including any data you have provided to us. You can also request that\n              we erase any personal data we hold about you. This does not include any data we are obliged to keep for\n              administrative, legal, or security purposes.\n            </p>\n\n            <h2>Where we send your data</h2>\n\n            <p>Visitor comments may be checked through an automated spam detection service.</p>\n\n            <h2>Your contact information</h2>\n\n            <p>\n              The personal information that you are asked to provide, and the reasons why you are asked to provide it,\n              will be made clear to you at the point we ask you to provide your personal information.\n            </p>\n\n            <p>\n              If you contact us directly, we may receive additional information about you such as your name, email\n              address, phone number, the contents of the message and/or attachments you may send us, and any other\n              information you may choose to provide.\n            </p>\n\n            <p>\n              When you register for an Account, we may ask for your contact information, including items such as name,\n              company name, address, email address, and telephone number.\n            </p>\n\n            <h2>How we use your information</h2>\n\n            <p>We use the information we collect in various ways, including to:</p>\n\n            <p>Provide, operate, and maintain our website</p>\n\n            <p>Improve, personalize, and expand our website</p>\n\n            <p>Understand and analyze how you use our website</p>\n\n            <p>Develop new products, services, features, and functionality</p>\n\n            <p>\n              Communicate with you, either directly or through one of our partners, including for customer service, to\n              provide you with updates and other information relating to the website, and for marketing and promotional\n              purposes\n            </p>\n\n            <p>Send you emails</p>\n\n            <p>Find and prevent fraud</p>\n\n            <h2>Cookies and Web Beacons</h2>\n\n            <p>\n              Like any other website, Thinkquic uses ‘cookies’. These cookies are used to store information including\n              visitors’ preferences, and the pages on the website that the visitor accessed or visited. The information\n              is used to optimize the users’ experience by customizing our web page content based on visitors’ browser\n              type and/or other information.\n            </p>\n\n            <p>\n              For more general information on cookies, please read&nbsp;\n              <a href=\"https://www.cookieconsent.com/what-are-cookies/\">“What Are Cookies” from Cookie Consent</a>.\n            </p>\n\n            <h2>CCPA Privacy Rights (Do Not Sell My Personal Information)</h2>\n\n            <p>Under the CCPA, among other rights, California consumers have the right to:</p>\n\n            <p>\n              request that a business that collects a consumer’s personal data disclose the categories and specific\n              pieces of personal data that a business has collected about consumers.\n            </p>\n\n            <p>request that a business delete any personal data about the consumer that a business has collected.</p>\n\n            <p>request that a business that sells a consumer’s personal data, not sell the consumer’s personal data.</p>\n\n            <p>\n              If you make a request, we have one month to respond to you. If you would like to exercise any of these\n              rights, please contact us.\n            </p>\n\n            <h2>GDPR Data Protection Rights</h2>\n\n            <p>\n              We would like to make sure you are fully aware of all of your data protection rights. Every user is\n              entitled to the following:\n            </p>\n\n            <p>\n              The right to access – You have the right to request copies of your personal data. We may charge you a\n              small fee for this service.\n            </p>\n\n            <p>\n              The right to rectification – You have the right to request that we correct any information you believe is\n              inaccurate. You also have the right to request that we complete the information you believe is incomplete.\n            </p>\n\n            <p>\n              The right to erasure – You have the right to request that we erase your personal data, under certain\n              conditions.\n            </p>\n\n            <p>\n              The right to restrict processing – You have the right to request that we restrict the processing of your\n              personal data, under certain conditions.\n            </p>\n\n            <p>\n              The right to object to processing – You have the right to object to our processing of your personal data,\n              under certain conditions.\n            </p>\n\n            <p>\n              The right to data portability – You have the right to request that we transfer the data that we have\n              collected to another organization, or directly to you, under certain conditions.\n            </p>\n\n            <p>\n              If you make a request, we have one month to respond to you. If you would like to exercise any of these\n              rights, please contact us.\n            </p>\n\n            <h2>Children’s Information</h2>\n\n            <p>\n              Another part of our priority is adding protection for children while using the internet. We encourage\n              parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n            </p>\n\n            <p>\n              Thinkquic does not knowingly collect any Personal Identifiable Information from children under the age of\n              13. If you think that your child provided this kind of information on our website, we strongly encourage\n              you to contact us immediately and we will do our best efforts to promptly remove such information from our\n              records.\n            </p>\n\n            <h2>Additional information</h2>\n\n            <h3>How we protect your data</h3>\n\n            <h3>What data breach procedures we have in place</h3>\n\n            <h3>What third parties we receive data from</h3>\n\n            <h3>What automated decision making and/or profiling we do with user data</h3>\n\n            <h3>Industry regulatory disclosure requirements</h3>\n          </div>\n        </GenericModal>\n      ) : null}\n    </>\n  );\n};\n\nexport default PrivacyStatementModal;\n","import React from \"react\";\n\nimport \"./SignInForm.scss\";\n\nimport { Link } from \"react-router-dom\";\n\nimport PrivacyStatementModal from \"../PrivacyStatementModal/PrivacyStatementModal\";\n\nconst SignInForm = ({\n  username,\n  password,\n  setUsername,\n  setPassword,\n  signInHandler,\n  validatePassword,\n  validateUsername,\n  usernameErrors,\n  passwordErrors,\n  errorsAfterSubmit,\n  setErrorsAfterSubmit,\n}) => {\n  const errorListItemClass = \"text-danger\";\n  const usernameErrorList =\n    usernameErrors.length > 0 ? (\n      <div>\n        <ul>\n          {usernameErrors.map((usernameError, index) => (\n            <li className={errorListItemClass} key={\"username-error-\" + index}>\n              {usernameError}\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const passwordErrorList =\n    passwordErrors.length > 0 ? (\n      <div>\n        <ul>\n          {passwordErrors.map((passwordError, index) => (\n            <li className={errorListItemClass} key={\"password-error-\" + index}>\n              {passwordError}\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  const afterSubmitErrorList =\n    errorsAfterSubmit.length > 0 ? (\n      <div>\n        <ul>\n          {errorsAfterSubmit.map((errorAfterSubmit, index) => (\n            <li className={errorListItemClass} key={\"error-after-submit-\" + index}>\n              {errorAfterSubmit}\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : null;\n\n  return (\n    <div className=\"d-flex sign-in-form-container\" style={{ height: \"100vh\" }}>\n      <form\n        onSubmit={(event) => {\n          signInHandler(event);\n        }}\n        className=\"sign-in-form form m-auto\"\n      >\n        <div className=\"sign-in-form__heading\">\n          <a href=\"https://thinkquic.com/\" target=\"_blank\">\n            <img\n              className=\"sign-in-form__logo\"\n              src=\"https://thinkquic.com/wp-content/uploads/2020/10/thinkquic_logo2.png\"\n              alt=\"\"\n            />\n          </a>\n        </div>\n        {afterSubmitErrorList}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-control\"\n            type=\"username\"\n            name=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              validateUsername(event.target.value);\n              setUsername(event.target.value);\n            }}\n          />\n        </div>\n        {usernameErrorList}\n        <div className=\"form-group\">\n          <label htmlFor=\"\">Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              validatePassword(event.target.value);\n              setPassword(event.target.value);\n            }}\n          />\n        </div>\n        {passwordErrorList}\n        <button className=\"btn btn-primary sign-in-form__sign-in-button\" type=\"submit\" id=\"sign-in\">\n          Sign In\n        </button>\n\n        <p className=\"sign-in-form__register-hint\">\n          Don't have an account yet? <Link to=\"/register\">Register Here</Link>\n        </p>\n\n        <p className=\"sign-in-form__register-hint\">\n          <Link to=\"/forgot-password\">Forgot your password?</Link>\n        </p>\n\n        <p className=\"text-center mb-0\">© 2021 All Rights Reserved</p>\n\n        <PrivacyStatementModal />\n      </form>\n    </div>\n  );\n};\n\nexport default SignInForm;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport SignInForm from \"./SignInForm\";\n\nconst SignInFormContainer = (props) => {\n  const { signIn, getLoginAttempts, incrementLoginAttempts, resetLoginAttempts } = props;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [usernameErrors, setUsernameErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [errorsAfterSubmit, setErrorsAfterSubmit] = useState([]);\n\n  const validateUsername = (username) => {\n    if (username === \"\") {\n      setUsernameErrors([\"Username must not be empty\"]);\n    } else {\n      setUsernameErrors([]);\n    }\n  };\n\n  const validatePassword = (password) => {\n    if (password === \"\") {\n      setPasswordErrors([\"Password must not be empty\"]);\n    } else {\n      setPasswordErrors([]);\n    }\n  };\n\n  const isUsernameValid = () => {\n    if (username !== \"\" && usernameErrors.length < 1) {\n      return true;\n    }\n    return false;\n  };\n\n  const isPasswordValid = () => {\n    if (password !== \"\" && passwordErrors.length < 1) {\n      return true;\n    }\n    return false;\n  };\n\n  const signInHandler = (event) => {\n    event.preventDefault();\n    if (getLoginAttempts(username) > 2) {\n      props.history.push(\"/forgot-password\");\n      return;\n    }\n    if (isPasswordValid() && isUsernameValid()) {\n      //console.log(\"SignIn form is good to submit\");\n      signIn(username, password, (error) => {\n        setErrorsAfterSubmit([error.message]);\n        incrementLoginAttempts(username);\n      });\n    } else {\n      validatePassword(password);\n      validateUsername(username);\n    }\n  };\n\n  return (\n    <div>\n      <SignInForm\n        validatePassword={validatePassword}\n        validateUsername={validateUsername}\n        passwordErrors={passwordErrors}\n        usernameErrors={usernameErrors}\n        errorsAfterSubmit={errorsAfterSubmit}\n        setErrorsAfterSubmit={setErrorsAfterSubmit}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        password={password}\n        username={username}\n        signInHandler={signInHandler}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(SignInFormContainer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst RegistrationForm = ({\n  email,\n  setEmail,\n  username,\n  setUsername,\n  password,\n  setPassword,\n  passwordConfirmation,\n  setPasswordConfirmation,\n  registerHandler,\n  errors,\n  validatePassword,\n  passwordErrors,\n  passwordConfirmationErrors,\n  errorsAfterSubmit,\n  setErrorsAfterSubmit,\n  emailErrors,\n  validateEmail,\n  usernameErrors,\n  validateUsername,\n}) => {\n  return (\n    <div className=\"d-flex registration-form-container\">\n      <form\n        onSubmit={(event) => {\n          registerHandler(event);\n        }}\n        className=\"registration-form form m-auto\"\n      >\n        <div className=\"registration-form__heading\">\n          <a href=\"https://thinkquic.com/\" target=\"_blank\">\n            <img\n              className=\"registration-form__logo\"\n              src=\"https://thinkquic.com/wp-content/uploads/2020/10/thinkquic_logo2.png\"\n              alt=\"\"\n            />\n          </a>\n        </div>\n        {errorsAfterSubmit.length > 0 ? (\n          <div>\n            <ul>\n              {errorsAfterSubmit.map((errorAfterSubmit, index) => (\n                <li className=\"text-danger\" key={\"error-after-submit\" + index}>\n                  {errorsAfterSubmit}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            className=\"form-control\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              validateEmail(event.target.value);\n              setEmail(event.target.value);\n            }}\n          />\n        </div>\n        {emailErrors.length > 0 ? (\n          <div>\n            <ul>\n              {emailErrors.map((emailError, index) => (\n                <li className=\"text-danger\" key={\"email-error\" + index}>\n                  {emailError}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-control\"\n            type=\"username\"\n            name=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              validateUsername(event.target.value);\n              setUsername(event.target.value);\n            }}\n          />\n        </div>\n        {usernameErrors.length > 0 ? (\n          <div>\n            <ul>\n              {usernameErrors.map((usernameError, index) => (\n                <li className=\"text-danger\" key={\"email-error\" + index}>\n                  {usernameError}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"\">Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              validatePassword(event.target.value);\n              setPassword(event.target.value);\n            }}\n          />\n        </div>\n        {passwordErrors.length > 0 ? (\n          <div>\n            <ul>\n              {passwordErrors.map((passwordError, index) => (\n                <li className=\"text-danger\" key={\"password-error-\" + index}>\n                  {passwordError}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"\">Confirm Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"confirm-password\"\n            id=\"confirm-password\"\n            value={passwordConfirmation}\n            onChange={(event) => {\n              setErrorsAfterSubmit([]);\n              setPasswordConfirmation(event.target.value);\n            }}\n          />\n        </div>\n        {passwordConfirmationErrors.length > 0 ? (\n          <div>\n            <ul>\n              {passwordConfirmationErrors.map((passwordConfirmationError, index) => (\n                <li className=\"text-danger\" key={\"password-confirmation-error-\" + index}>\n                  {passwordConfirmationError}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        <button className=\"btn btn-primary registration-form__register-button\" type=\"submit\" id=\"register\">\n          Register\n        </button>\n\n        <p className=\"registration-form__sign-in-hint\">\n          Already have an account? <Link to=\"/sign-in\">Login Here</Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\n\nimport \"./RegistrationVerification.scss\";\n\nconst RegistrationVerification = ({\n  verificationCode,\n  setVerificationCode,\n  sendVerificationHandler,\n}) => {\n  return (\n    <div className=\"d-flex w-100 registration-verification-container\">\n      <form\n        className=\"registration-verification\"\n        onSubmit={sendVerificationHandler}\n      >\n        <p className=\"registration-verification__hint\">\n          We've sent you a verification code in your email. Please enter the\n          code below\n        </p>\n        <div className=\"form-group\">\n          <label htmlFor=\"verification-code\">Verification Code</label>\n          <input\n            placeholder=\"ex.000000\"\n            name=\"verification-code\"\n            id=\"verification-code\"\n            className=\"form-control\"\n            value={verificationCode}\n            onChange={(event) => {\n              setVerificationCode(event.target.value);\n            }}\n            type=\"text\"\n          />\n        </div>\n        <button className=\"btn btn-primary registration-verification__verify-button\">\n          Verify\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationVerification;\n","import React, { useState, useEffect } from \"react\";\n\nimport RegistrationForm from \"./RegistrationForm\";\n\nimport RegistrationVerification from \"./RegistrationVerification\";\n\nimport \"./RegistrationForm.scss\";\n\nimport { Redirect } from \"react-router-dom\";\n\nconst RegistrationFormContainer = ({ registrationStatus, register, verifyAccount }) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [registrationErrors, setRegistrationErrors] = useState([]);\n\n  // Username should be unique\n  // Must have Length greater than or equal to 9\n  // Must have uppercase characters\n  // Must have numeric characters\n  // Must have symbols\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [passwordConfirmationErrors, setPasswordConfirmationErrors] = useState([]);\n  const [emailErrors, setEmailErrors] = useState([]);\n  const [errorsAfterSubmit, setErrorsAfterSubmit] = useState(false);\n  const [usernameErrors, setUsernameErrors] = useState([]);\n\n  useEffect(() => {\n    validatePasswordConfirmation();\n    // eslint-disable-next-line\n  }, [password, passwordConfirmation]);\n\n  const validateUsername = (username) => {\n    if (username === \"\") {\n      setUsernameErrors([\"Must not be empty\"]);\n    } else {\n      setUsernameErrors([]);\n    }\n  };\n\n  const validatePassword = (password) => {\n    const isStringAtleastNineChars = (str) => {\n      if (str.length >= 9) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    const containsUppercaseLetter = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[A-Z]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsNumber = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[0-9]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsSymbol = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    let passwordErrors = [];\n    if (!isStringAtleastNineChars(password)) {\n      passwordErrors.push(\"Must have length greater than or equal to 9\");\n    }\n\n    if (!containsUppercaseLetter(password)) {\n      passwordErrors.push(\"Must have uppercase characters\");\n    }\n\n    if (!containsNumber(password)) {\n      passwordErrors.push(\"Must have numeric characters\");\n    }\n\n    if (!containsSymbol(password)) {\n      passwordErrors.push(\"Must have symbols\");\n    }\n\n    setPasswordErrors(passwordErrors);\n  };\n\n  const validateEmail = (email) => {\n    if (email === \"\") {\n      setEmailErrors([\"Must not be empty\"]);\n    } else {\n      setEmailErrors([]);\n    }\n  };\n\n  const validatePasswordConfirmation = () => {\n    let passwordConfirmationErrors = [];\n    if (passwordConfirmation !== password) {\n      passwordConfirmationErrors.push(\"Must match password\");\n    }\n    setPasswordConfirmationErrors(passwordConfirmationErrors);\n  };\n\n  const registerHandler = (event) => {\n    event.preventDefault();\n    if (isEmailValid() && isUserNameValid() && isPasswordValid() && isPasswordConfirmationValid()) {\n      register(email, username, password, passwordConfirmation, (error) => {\n        setErrorsAfterSubmit([error.message]);\n      });\n    } else {\n      validatePassword(password);\n      validatePasswordConfirmation();\n      validateUsername(username);\n      validateEmail(email);\n    }\n\n    // if (registerFormValidationErrors().length > 0) {\n    //   setRegistrationErrors(registerFormValidationErrors());\n    //   return;\n    // } else {\n    //   register(email, username, password, passwordConfirmation);\n    // }\n  };\n\n  const isPasswordValid = () => {\n    if (password !== \"\" && passwordErrors.length < 1) {\n      return true;\n    }\n    return false;\n  };\n\n  const isPasswordConfirmationValid = () => {\n    if (passwordConfirmation !== \"\" && passwordConfirmationErrors.length < 1) {\n      return true;\n    }\n    return false;\n  };\n\n  const isEmailValid = () => {\n    if (email !== \"\") {\n      return true;\n    }\n    return false;\n  };\n\n  const isUserNameValid = () => {\n    if (username !== \"\") {\n      return true;\n    }\n    return false;\n  };\n\n  const registerFormValidationErrors = () => {\n    let errors = [];\n    if (email === \"\") {\n      errors.push(\"Please put a valid email\");\n    }\n\n    if (username === \"\") {\n      errors.push(\"Please enter a username\");\n    }\n\n    if (password === \"\") {\n      errors.push(\"Please enter a password\");\n    }\n\n    if (passwordConfirmation === \"\") {\n      errors.push(\"Please enter a password confirmation\");\n    }\n\n    return errors;\n  };\n\n  const sendVerificationHandler = (event) => {\n    event.preventDefault();\n    verifyAccount(verificationCode);\n  };\n\n  const registrationView = () => {\n    if (registrationStatus === \"verifying\") {\n      return (\n        <RegistrationVerification\n          verificationCode={verificationCode}\n          setVerificationCode={setVerificationCode}\n          sendVerificationHandler={sendVerificationHandler}\n        />\n      );\n    } else if (registrationStatus === \"verified\") {\n      return <Redirect to=\"/sign-in\" />;\n    } else {\n      return (\n        <RegistrationForm\n          validatePassword={validatePassword}\n          passwordErrors={passwordErrors}\n          passwordConfirmationErrors={passwordConfirmationErrors}\n          errorsAfterSubmit={errorsAfterSubmit}\n          setErrorsAfterSubmit={setErrorsAfterSubmit}\n          validateEmail={validateEmail}\n          emailErrors={emailErrors}\n          validateUsername={validateUsername}\n          usernameErrors={usernameErrors}\n          errors={registrationErrors}\n          email={email}\n          setEmail={setEmail}\n          username={username}\n          setUsername={setUsername}\n          passowrd={password}\n          setPassword={setPassword}\n          passwordConfirmation={passwordConfirmation}\n          setPasswordConfirmation={setPasswordConfirmation}\n          registerHandler={registerHandler}\n        />\n      );\n    }\n  };\n\n  return registrationView();\n};\n\nexport default RegistrationFormContainer;\n","import React, { useState, useContext } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport \"./ForgotPasswordForm.scss\";\n\nimport { AppContext } from \"../../AppContext\";\n\nconst ForgotPasswordFormContainer = () => {\n  const { resetPassword, confirmPassword, resetLoginAttempts } = useContext(AppContext);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [passwordVerificationCode, setPasswordVerificationCode] = useState(\"\");\n  const [isUsernameProvided, setIsUsernameProvided] = useState(false);\n  const [isPasswordResetSuccess, setIsPasswordResetSuccess] = useState(false);\n\n  const [usernameErrorMessages, setUsernameErrorMessages] = useState([]);\n\n  const [formErrorMessages, setFormErrorMessages] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [passwordConfirmationErrors, setPasswordConfirmationErrors] = useState([]);\n  const [passwordVerificationCodeErrors, setPasswordVerificationCodeErrors] = useState([]);\n\n  const usernameInputChangeHandler = (inputValue) => {\n    setUsername(inputValue);\n    const usernameValidationErrors = validateUsername(inputValue);\n    if (usernameValidationErrors.length > 0) {\n      setUsernameErrorMessages([...usernameValidationErrors]);\n    } else {\n      setUsernameErrorMessages([]);\n    }\n  };\n\n  const passwordInputChangeHandler = (passwordInputValue) => {\n    setPassword(passwordInputValue);\n    const passwordValidationErrors = validatePassword(passwordInputValue);\n    if (passwordValidationErrors.length > 0) {\n      setPasswordErrors([...passwordValidationErrors]);\n    } else {\n      setPasswordErrors([]);\n    }\n  };\n\n  const passwordConfirmationInputChangeHandler = (passwordConfirmationInputValue) => {\n    setPasswordConfirmation(passwordConfirmationInputValue);\n    const passwordConfirmationValidationErrors = validatePasswordConfirmation(passwordConfirmationInputValue);\n    if (passwordConfirmationValidationErrors.length > 0) {\n      setPasswordConfirmationErrors([...passwordConfirmationValidationErrors]);\n    } else {\n      setPasswordConfirmationErrors([]);\n    }\n  };\n\n  const passwordVerificationCodeInputChangeHandler = (passwordVerificationCodeInputValue) => {\n    setPasswordVerificationCode(passwordVerificationCodeInputValue);\n    const passwordVerificationCodeValidationErrors = validatePasswordVerificationCode(\n      passwordVerificationCodeInputValue\n    );\n    if (passwordVerificationCodeValidationErrors.length > 0) {\n      setPasswordVerificationCodeErrors([...passwordVerificationCodeValidationErrors]);\n    } else {\n      setPasswordVerificationCodeErrors([]);\n    }\n  };\n\n  const validateUsername = (username) => {\n    const usernameValidationErrors = [];\n    if (username === \"\") {\n      usernameValidationErrors.push(\"Username must not be empty.\");\n    }\n    return usernameValidationErrors;\n  };\n\n  const validatePassword = (password) => {\n    const isStringAtleastNineChars = (str) => {\n      if (str.length >= 9) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    const containsUppercaseLetter = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[A-Z]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsNumber = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[0-9]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsSymbol = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    let passwordErrors = [];\n    if (!isStringAtleastNineChars(password)) {\n      passwordErrors.push(\"Must have length greater than or equal to 9\");\n    }\n\n    if (!containsUppercaseLetter(password)) {\n      passwordErrors.push(\"Must have uppercase characters\");\n    }\n\n    if (!containsNumber(password)) {\n      passwordErrors.push(\"Must have numeric characters\");\n    }\n\n    if (!containsSymbol(password)) {\n      passwordErrors.push(\"Must have symbols\");\n    }\n\n    return passwordErrors;\n  };\n\n  const validatePasswordConfirmation = (passwordConfirmation) => {\n    const passwordConfirmationErrors = [];\n    if (password !== passwordConfirmation) {\n      passwordConfirmationErrors.push(\"Passwords must match.\");\n    }\n\n    return passwordConfirmationErrors;\n  };\n\n  const validatePasswordVerificationCode = (verificationCode) => {\n    const verificationCodeErrors = [];\n    if (verificationCode === \"\") {\n      verificationCodeErrors.push(\"Verification code must not be empty\");\n    }\n    return verificationCodeErrors;\n  };\n\n  const sendVerificationClickHandler = () => {\n    const validationErrors = validateUsername(username);\n    if (validationErrors.length > 0) {\n      setUsernameErrorMessages([...validationErrors]);\n      return;\n    }\n    resetPassword(username, (error) => {\n      if (error) {\n        console.log(error);\n        setFormErrorMessages([error.message]);\n      } else {\n        setIsUsernameProvided(true);\n      }\n    });\n  };\n\n  const resetPasswordClickHandler = () => {\n    const passwordValidationErrors = validatePassword(password);\n    const passwordConfirmationValidationErrors = validatePasswordConfirmation(passwordConfirmation);\n    const passwordVerificationCodeValidationErrors = validatePasswordVerificationCode(passwordVerificationCode);\n    const resetPasswordErrors = [\n      ...passwordValidationErrors,\n      ...passwordConfirmationValidationErrors,\n      ...passwordVerificationCodeValidationErrors,\n    ];\n    setPasswordErrors(passwordValidationErrors);\n    setPasswordConfirmationErrors(passwordConfirmationValidationErrors);\n    setPasswordVerificationCodeErrors(passwordVerificationCodeValidationErrors);\n\n    if (resetPasswordErrors.length < 1) {\n      confirmPassword(username, passwordVerificationCode, password, (error) => {\n        if (error) {\n          console.log(error);\n          setFormErrorMessages([error.message]);\n        } else {\n          setIsPasswordResetSuccess(true);\n          resetLoginAttempts(username);\n        }\n      });\n    }\n  };\n\n  const getUsernameErrorMessageList = () => {\n    if (usernameErrorMessages.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {usernameErrorMessages.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getFormErrorMessageList = () => {\n    if (formErrorMessages.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {formErrorMessages.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordErrorMessageList = () => {\n    if (passwordErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordConfirmationErrorMessageList = () => {\n    if (passwordConfirmationErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordConfirmationErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"password-confirmation-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordVerificationCodeErrorMessageList = () => {\n    if (passwordVerificationCodeErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordVerificationCodeErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"password-verification-code-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  if (isPasswordResetSuccess) {\n    return <Redirect to=\"/sign-in\" />;\n  }\n\n  return (\n    <div className=\"forgot-password-form-container\">\n      <form className=\"form forgot-password-form\">\n        <div className=\"sign-in-form__heading\">\n          <img\n            className=\"sign-in-form__logo\"\n            src=\"https://thinkquic.com/wp-content/uploads/2020/10/thinkquic_logo2.png\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"text-center font-weight-bold\">Forgot Password</div>\n        {getFormErrorMessageList()}\n        {!isUsernameProvided ? (\n          <>\n            <div className=\"form-group mt-3\">\n              <label htmlFor=\"\">Please enter your username</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => usernameInputChangeHandler(event.target.value)}\n              />\n              {getUsernameErrorMessageList()}\n            </div>\n            <button type=\"button\" className=\"btn btn-primary btn-block my-3\" onClick={sendVerificationClickHandler}>\n              Send verification code\n            </button>\n          </>\n        ) : (\n          <>\n            <div className=\"form-group mt-3\">\n              <label htmlFor=\"\">Verification Code</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={passwordVerificationCode}\n                onChange={(event) => passwordVerificationCodeInputChangeHandler(event.target.value)}\n              />\n              {getPasswordVerificationCodeErrorMessageList()}\n            </div>\n\n            <div className=\"form-group\">\n              <label>New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={password}\n                onChange={(event) => passwordInputChangeHandler(event.target.value)}\n              />\n              {getPasswordErrorMessageList()}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Confirm New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={passwordConfirmation}\n                onChange={(event) => passwordConfirmationInputChangeHandler(event.target.value)}\n              />\n              {getPasswordConfirmationErrorMessageList()}\n            </div>\n\n            <button className=\"btn btn-block btn-primary my-3\" type=\"button\" onClick={resetPasswordClickHandler}>\n              Reset Password\n            </button>\n          </>\n        )}\n        <p className=\"text-center\">\n          <Link to=\"/sign-in\">Back to sign in</Link>\n        </p>\n        <p className=\"text-center\">\n          <Link to=\"/register\">Register</Link>\n        </p>\n      </form>\n\n      {/* <ForgotPasswordForm />\n      <UserVerificationForm /> */}\n    </div>\n  );\n};\n\nexport default ForgotPasswordFormContainer;\n","import React, { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\nimport useExcelToJson from \"./hooks/useExcelToJson\";\r\nimport { AppContext } from \"./AppContext\";\r\n\r\nexport const FileUploadContext = createContext();\r\n\r\nconst FileUploadContextProvider = ({ children }) => {\r\n  const fileInputRef = useRef();\r\n  const excelToJsonConverter = useExcelToJson();\r\n  const appContext = useContext(AppContext);\r\n  const [filename, setFilename] = useState(null);\r\n  const [isFileFromS3, setIsFileFromS3] = useState(false);\r\n  const [jsonData, setJsonData] = useState(null);\r\n  const [isExcelConverted, setIsExcelConverted] = useState(false);\r\n  const [uploadStatus, setUploadStatus] = useState();\r\n\r\n  const handleFileInputChange = (inputField) => {\r\n    const fileObjects = getFileObjects(inputField.files);\r\n    excelToJsonConverter.convertExcelToJson(fileObjects, setJsonData);\r\n    setFilename(inputField.files[0].name);\r\n  };\r\n\r\n  const triggerInputClick = () => {\r\n    clearFileUploadData();\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const getFileObjects = (files) => {\r\n    const numFiles = files.length;\r\n    let fileObjects = [];\r\n    for (let i = 0; i < numFiles; i++) {\r\n      fileObjects.push(files[i]);\r\n    }\r\n    return fileObjects;\r\n  };\r\n\r\n  const getFileName = () => {\r\n    return filename;\r\n  };\r\n\r\n  const clearFileInput = () => {\r\n    fileInputRef.current.value = null;\r\n  };\r\n\r\n  const clearJsonData = () => {\r\n    setJsonData(null);\r\n  };\r\n\r\n  const clearFilename = () => {\r\n    setFilename(null);\r\n  };\r\n\r\n  const clearIsFileFromS3 = () => {\r\n    setIsFileFromS3(false);\r\n  };\r\n\r\n  const resetUploadStatus = () => {\r\n    setUploadStatus();\r\n  };\r\n\r\n  const uploadFile = () => {\r\n    const file = fileInputRef.current.files[0];\r\n    appContext.uploadFile(file, appContext.username, setUploadStatus);\r\n  };\r\n\r\n  const clearFileUploadData = () => {\r\n    clearJsonData();\r\n    clearFileInput();\r\n    resetUploadStatus();\r\n    clearFilename();\r\n    clearIsFileFromS3();\r\n  };\r\n\r\n  const handleS3FilePreview = (fileBody, filename) => {\r\n    clearFileUploadData();\r\n    setJsonData(excelToJsonConverter.convertExcelFromS3ToJson(fileBody));\r\n    setFilename(filename);\r\n    setIsFileFromS3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (jsonData) {\r\n      setIsExcelConverted(true);\r\n    }\r\n  }, [jsonData]);\r\n\r\n  return (\r\n    <FileUploadContext.Provider\r\n      value={{\r\n        fileInputRef,\r\n        isExcelConverted,\r\n        jsonData,\r\n        uploadStatus,\r\n        filename,\r\n        isFileFromS3,\r\n        triggerInputClick,\r\n        handleFileInputChange,\r\n        getFileName,\r\n        uploadFile,\r\n        clearFileUploadData,\r\n        handleS3FilePreview,\r\n      }}\r\n    >\r\n      {children}\r\n    </FileUploadContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FileUploadContextProvider;\r\n","import React from \"react\";\n\nimport \"./MessageBubble.scss\";\n\nconst MessageBubble = (props) => {\n  const { children, from } = props;\n  const messageBubbleClasses =\n    from === \"app\" ? \"message-bubble message-bubble--app\" : \"message-bubble message-bubble--user\";\n  return <div className={messageBubbleClasses}>{children}</div>;\n};\n\nexport default MessageBubble;\n","import React from \"react\";\n\nconst TextMessage = ({ message }) => {\n  return (\n    <div\n      className=\"position-relative\"\n      style={{ marginRight: \"-.5rem\", marginLeft: \"-.5rem\", paddingRight: \".5rem\", paddingLeft: \".5rem\" }}\n    >\n      <div className=\"overlay\"></div>\n      {message}\n    </div>\n  );\n};\n\nexport default TextMessage;\n","import React from \"react\";\n\nimport \"./ButtonIconTooltip.scss\";\n\nconst ButtonIconTooltip = ({ text, icon, onClickHandler }) => {\n  const handleButtonMouseEnter = (event) => {\n    const $ = window.$;\n    $(event.target).tooltip(\"show\");\n  };\n  const handleButtonMouseLeave = () => {\n    const $ = window.$;\n    $(\"body\").find('[data-toggle=\"tooltip\"]').tooltip(\"hide\");\n  };\n  return (\n    <button\n      onMouseEnter={(e) => {\n        handleButtonMouseEnter(e);\n      }}\n      onMouseLeave={(e) => {\n        handleButtonMouseLeave(e);\n      }}\n      className=\"btn btn-secondary button-icon-tooltip\"\n      onClick={() => {\n        onClickHandler();\n        handleButtonMouseLeave();\n      }}\n      data-toggle=\"tooltip\"\n      data-placement=\"right\"\n      title={text}\n    >\n      {icon}\n    </button>\n  );\n};\n\nexport default ButtonIconTooltip;\n","import React from \"react\";\n\nconst AggregationUi = ({ viewOptions, content }) => {\n  return (\n    <div className=\"aggregation-ui\">\n      <div className=\"aggregation-ui__options\">{viewOptions}</div>\n      <div className=\"aggregation-ui__content\">{content}</div>\n    </div>\n  );\n};\n\nexport default AggregationUi;\n","import React, { useState } from \"react\";\n\nimport \"./AggregationUi.scss\";\n\nimport { Line, Doughnut, Bar, Pie } from \"react-chartjs-2\";\n\nimport ButtonIconTooltip from \"../../ButtonIconTooltip/ButtonIconTooltip\";\n\nimport AggregationUi from \"./AggregationUi\";\n\nimport { tableViewIcon, pieChartIcon, lineChartIcon, barChartIcon, doughnutChartIcon } from \"../../../Icons/Icons\";\n\nconst AggregationUiContainer = ({ aggregationData }) => {\n  const [view, setView] = useState(\"default\");\n\n  const getAggregationType = (aggregationData) => {\n    if (Array.isArray(aggregationData.stats)) {\n      return \"text\";\n    } else {\n      return \"non-text\";\n    }\n  };\n\n  const getAggregationDisplayData = (aggregationData) => {\n    const getGrouping = () => {\n      const aggregationDataKeys = Object.keys(aggregationData);\n      for (let i = 0; i < aggregationDataKeys.length; i++) {\n        if (aggregationDataKeys[i] !== \"stats\" && aggregationDataKeys[i] !== \"stats_key\") {\n          return aggregationDataKeys[i];\n        }\n      }\n      return null;\n    };\n    const heading = aggregationData.stats_key;\n    const grouping = getGrouping();\n    const arrayAggregationData = aggregationData.stats;\n    return {\n      heading,\n      grouping,\n      data: arrayAggregationData,\n    };\n  };\n\n  const displayAggregationData = () => {\n    const aggregationType = getAggregationType(aggregationData);\n    let aggregationDisplayData = {\n      aggregationType,\n      ...getAggregationDisplayData(aggregationData),\n    };\n    return (\n      <div>\n        {displayHeading(aggregationDisplayData)}\n        {displayView(aggregationDisplayData)}\n      </div>\n    );\n  };\n\n  const displayHeading = (aggregationDisplayData) => {\n    return (\n      <div className=\"aggregation-ui__headings\">\n        {aggregationDisplayData.grouping ? (\n          <div className=\"aggregation-ui__data-grouping\">{aggregationDisplayData.grouping}</div>\n        ) : null}\n        <div className=\"aggregation-ui__data-heading\">{aggregationDisplayData.heading}</div>\n      </div>\n    );\n  };\n\n  const displayView = (aggregationDisplayData) => {\n    const getLabels = (aggregationDisplayData) => {\n      if (aggregationDisplayData.aggregationType === \"text\") {\n        const labels = [];\n        for (let i = 0; i < aggregationDisplayData.data.length; i++) {\n          labels.push(aggregationDisplayData.data[i].key);\n        }\n        return labels;\n      } else {\n        return Object.keys(aggregationDisplayData.data);\n      }\n    };\n    const getData = (aggregationDisplayData) => {\n      const getDisplayValue = (fieldValue) => {\n        let displayValue = \"\";\n\n        if (!isNaN(fieldValue)) return fieldValue;\n        if (fieldValue.includes(\"$\")) {\n          displayValue = fieldValue.replace(\"$\", \"\").trim();\n          return parseFloat(displayValue);\n        }\n\n        if (fieldValue.includes(\"sq ft\")) {\n          displayValue = fieldValue.replace(\"sq ft\").trim();\n          return parseFloat(displayValue);\n        }\n\n        if (fieldValue.includes(\"sq. ft.\")) {\n          displayValue = fieldValue.replace(\"sq. ft.\").trim();\n          return parseFloat(displayValue);\n        }\n\n        return fieldValue;\n      };\n      if (aggregationDisplayData.aggregationType === \"text\") {\n        const data = [];\n        for (let i = 0; i < aggregationDisplayData.data.length; i++) {\n          data.push(aggregationDisplayData.data[i].doc_count);\n        }\n        return data;\n      } else {\n        const aggregationDisplayDataKeys = Object.keys(aggregationDisplayData.data);\n        const data = [];\n        for (let i = 0; i < aggregationDisplayDataKeys.length; i++) {\n          data.push(getDisplayValue(aggregationDisplayData.data[aggregationDisplayDataKeys[i]]));\n        }\n        return data;\n      }\n    };\n    const getDataset = (aggregationDisplayData) => {\n      return {\n        label: \"Dataset 1\",\n        borderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 1,\n        data: getData(aggregationDisplayData),\n      };\n    };\n    let options = {\n      maintainAspectRation: false,\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return tooltipItem.yLabel;\n          },\n        },\n      },\n    };\n    switch (view) {\n      case \"line\":\n        const lineData = {\n          labels: getLabels(aggregationDisplayData),\n          datasets: [{ ...getDataset(aggregationDisplayData), backgroundColor: \"rgb(255, 99, 132)\" }],\n        };\n        return <Line data={lineData} options={options} />;\n      case \"bar\":\n        const barData = {\n          labels: getLabels(aggregationDisplayData),\n          datasets: [{ ...getDataset(aggregationDisplayData), backgroundColor: \"rgb(255, 99, 132)\" }],\n        };\n        return <Bar data={barData} options={options} />;\n      case \"pie\":\n        const pieData = {\n          labels: getLabels(aggregationDisplayData),\n          datasets: [getDataset(aggregationDisplayData)],\n        };\n        return <Pie data={pieData} />;\n      case \"doughnut\":\n        const doughnutData = {\n          labels: getLabels(aggregationDisplayData),\n          datasets: [getDataset(aggregationDisplayData)],\n        };\n        return <Doughnut data={doughnutData} />;\n      default:\n        return defaultAggregationView(aggregationDisplayData);\n    }\n  };\n\n  const defaultAggregationView = (aggregationDisplayData) => {\n    if (aggregationDisplayData.aggregationType === \"text\") {\n      return (\n        <div>\n          <table className=\"table table--in-message\">\n            <thead>\n              <tr>\n                <th>{aggregationDisplayData.heading}</th>\n                <th>{\"doc_count\"}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {aggregationDisplayData.data.map((aggregationStat, index) => (\n                <tr key={\"aggregation-array-type-index\" + index}>\n                  <td>{aggregationStat.key}</td>\n                  <td>{aggregationStat.doc_count}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else {\n      const aggregationStatsKeys = Object.keys(aggregationDisplayData.data);\n      return (\n        <div>\n          <table className=\"table table--in-message\">\n            <tbody>\n              {aggregationStatsKeys.map((aggregationStatKey, index) => (\n                <tr key={\"aggregation-stat-key-index-\" + index}>\n                  <th>{aggregationStatKey}</th>\n                  <td>{aggregationData.stats[aggregationStatKey]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  };\n\n  const getAggregationViewOptions = () => {\n    const aggregationOptionsArray = [\n      {\n        id: \"default\",\n        text: \"default view\",\n        icon: tableViewIcon,\n        clickHandler: () => {\n          setView(\"default\");\n        },\n      },\n      {\n        id: \"pie\",\n        text: \"pie chart\",\n        icon: pieChartIcon,\n        clickHandler: () => {\n          setView(\"pie\");\n        },\n      },\n      {\n        id: \"line\",\n        text: \"line chart\",\n        icon: lineChartIcon,\n        clickHandler: () => {\n          setView(\"line\");\n        },\n      },\n      {\n        id: \"bar\",\n        text: \"bar chart\",\n        icon: barChartIcon,\n        clickHandler: () => {\n          setView(\"bar\");\n        },\n      },\n      {\n        id: \"doughnut\",\n        text: \"doughnut chart\",\n        icon: doughnutChartIcon,\n        clickHandler: () => {\n          setView(\"doughnut\");\n        },\n      },\n    ];\n\n    const options = aggregationOptionsArray.filter((aggregationOption) => aggregationOption.id !== view);\n\n    const optionButtons = options.map((option, index) => (\n      <ButtonIconTooltip\n        key={\"option-button-\" + option.text}\n        icon={option.icon}\n        text={option.text}\n        onClickHandler={option.clickHandler}\n      />\n    ));\n    return optionButtons;\n  };\n\n  return <AggregationUi viewOptions={getAggregationViewOptions()} content={displayAggregationData()} />;\n};\n\nexport default AggregationUiContainer;\n","import React, { useRef } from \"react\";\n\nimport \"./SelectItems.scss\";\n\nconst SelectItems = ({ label, items, itemsFilter, selectedItems, setSelectedItems, type }) => {\n  const selectRef = useRef();\n\n  const dropdownItems = items\n    .filter((item) => !itemsFilter.includes(item))\n    .map((dropdownItem, index) => (\n      <option className=\"select-items__dropdown-item\" value={dropdownItem} key={\"dropdown-item-\" + index}>\n        {dropdownItem}\n      </option>\n    ));\n\n  const defaultDropdownItem = (dropdownItems) => {\n    if (dropdownItems.length < 1) {\n      return (\n        <option className=\"select-items__dropdown-item\" value=\"default\" disabled>\n          {type === \"single\" ? \"selected: \" + selectedItems[0] : \"All items have been selected\"}\n        </option>\n      );\n    } else {\n      return (\n        <option className=\"select-items__dropdown-item\" value=\"default\" disabled>\n          Add an item\n        </option>\n      );\n    }\n  };\n\n  const selected = selectedItems.map((selectedItem, index) => (\n    <span className=\"select-items__selected-item\" key={\"selected-item-\" + index}>\n      <span className=\"select-items__selected-item-text\">{selectedItem}</span>\n      <button className=\"select-items__remove-selected-item\" onClick={() => removeItemClickhandler(selectedItem)}>\n        x\n      </button>\n    </span>\n  ));\n\n  const selectChangeHandler = (newValue) => {\n    if (newValue !== \"default\") {\n      setSelectedItems([...selectedItems, newValue]);\n      selectRef.current.value = \"default\";\n    }\n  };\n\n  const removeItemClickhandler = (itemToRemove) => {\n    const newSelectedItems = selectedItems.filter((selectedItem) => selectedItem !== itemToRemove);\n    setSelectedItems(newSelectedItems);\n  };\n\n  return (\n    <div className=\"select-items\">\n      <div className=\"select-items__title\">{label}</div>\n      <label htmlFor=\"select-items\" className=\"d-none\">\n        {label}\n      </label>\n      <select\n        name=\"select-items\"\n        className=\"form-control select-items__dropdown\"\n        onChange={(event) => selectChangeHandler(event.target.value)}\n        defaultValue=\"default\"\n        ref={selectRef}\n      >\n        {defaultDropdownItem(dropdownItems)}\n        {dropdownItems}\n      </select>\n      <div className=\"select-items__selected-items\">{selected}</div>\n    </div>\n  );\n};\n\nexport default SelectItems;\n","import React from \"react\";\n\nconst DataUi = (props) => {\n  const { name, viewToggle, content } = props;\n  return (\n    <div className=\"data-ui\">\n      <div className=\"data-ui__name\">{name}</div>\n      <div className=\"data-ui__options\">\n        <span className=\"data-ui__options-label\">Toggle View: </span>\n        <button className=\"btn btn-outline-info mx-3\" onClick={viewToggle.clickHandler}>\n          {viewToggle.text}\n        </button>\n      </div>\n      <div className=\"data-ui__content\">{content}</div>\n    </div>\n  );\n};\n\nexport default DataUi;\n","export const getAggregationsFromMessage = (message) => {\n  let aggregation = {};\n  return aggregation;\n};\n\nexport const getDataFromMessage = (message) => {\n  let data = [];\n  return data;\n};\n\nexport const getButtonsFromMessage = (message) => {\n  let buttons = [];\n  return buttons;\n};\n\nexport const getTextFromMessage = (message) => {\n  let texts = [];\n  return texts;\n};\n\nexport const isMessageJson = (message) => {\n  try {\n    JSON.parse(message);\n  } catch (error) {\n    return false;\n  }\n  return true;\n};\n\nexport const isArray = (jsonItem) => {\n  if (Array.isArray(jsonItem)) {\n    return true;\n  }\n  return false;\n};\n\nexport function getFlattendedAggregationData(aggregation) {\n  let flattenedAggregationData = [];\n  getChildrenAggregationDataRecursively(aggregation, flattenedAggregationData);\n  return flattenedAggregationData;\n\n  function getChildrenAggregationDataRecursively(aggregation, flattenedAggregationData) {\n    const aggregationChildrenKeys = Object.keys(aggregation);\n    for (let i = 0; i < aggregationChildrenKeys.length; i++) {\n      if (hasAggregationChildren(aggregation)) {\n        getChildrenAggregationDataRecursively(aggregation[aggregationChildrenKeys[i]], flattenedAggregationData);\n      } else {\n        const aggregationData = getContent(aggregation[aggregationChildrenKeys[i]]);\n        if (Array.isArray(aggregationData)) {\n          //  is from grouping data\n          for (let i = 0; i < aggregationData.length; i++) {\n            flattenedAggregationData.push(aggregationData[i]);\n          }\n        } else {\n          // data is statistics data\n          flattenedAggregationData.push(aggregationData);\n        }\n      }\n    }\n  }\n\n  function hasAggregationChildren(aggregation) {\n    const aggregationKey = Object.keys(aggregation)[0];\n    const aggregationContent = aggregation[aggregationKey];\n    const aggregationContentKey = Object.keys(aggregationContent)[0];\n    if (aggregationContentKey.toLocaleLowerCase().includes(\"aggregation\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function getContentType(aggregation) {\n    const contentFirstKey = Object.keys(aggregation)[0];\n\n    if (contentFirstKey.toLocaleLowerCase().includes(\"statistics\")) {\n      return \"statistics\";\n    }\n\n    if (contentFirstKey.toLocaleLowerCase().includes(\"group\")) {\n      return \"grouping\";\n    }\n\n    return \"unsupported\";\n  }\n\n  function getContent(aggregation) {\n    switch (getContentType(aggregation)) {\n      case \"statistics\":\n        return getStatisticsContent(aggregation);\n      case \"grouping\":\n        return getGroupingContent(aggregation);\n      default:\n        console.log(\"unsupported\");\n    }\n  }\n\n  function getGroupingContent(aggregation) {\n    let groupingContents = [];\n    const groupingKeys = Object.keys(aggregation);\n    for (let i = 0; i < groupingKeys.length; i++) {\n      groupingContents.push(aggregation[groupingKeys[i]]);\n    }\n    return groupingContents;\n  }\n\n  function getStatisticsContent(aggregation) {\n    const aggregationKey = Object.keys(aggregation)[0]; //this should always be statistics;\n    const aggregationContent = aggregation[aggregationKey];\n    return aggregationContent;\n  }\n}\n\nexport function getMessageSource(message) {\n  return message.from;\n}\n\nexport const isMessageFromUser = (message) => {\n  if (message.from === \"user\") {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const getDecomposedJsonMessage = (message) => {\n  const jsonResult = JSON.parse(message).Result;\n  const chartableItems = jsonResult.Chart;\n  const aggregations = chartableItems.Aggregation || chartableItems.Aggregations;\n  const data = chartableItems.Data;\n  const buttons = jsonResult.Button;\n  const texts = jsonResult.Text;\n\n  return {\n    aggregations,\n    data,\n    buttons,\n    texts,\n  };\n};\n\nexport const mergeDataItemsIntoTable = (data) => {\n  if (data.length < 1) {\n    return null;\n  }\n  let commonFields = [];\n  let propertiesOfFirstObject = [];\n  let mergedData = [];\n  const setPropertiesOfFirstObject = () => {\n    const firstObjectMainKey = Object.keys(data[0])[0];\n    const firstObjectContentProperties = Object.keys(data[0][firstObjectMainKey]);\n    propertiesOfFirstObject = [...firstObjectContentProperties];\n  };\n\n  const isPropertyCommonToAllData = (property) => {\n    for (let i = 0; i < data.length; i++) {\n      const datumMainKey = Object.keys(data[i])[0];\n      const datumContent = data[i][datumMainKey];\n      const datumContentKeys = Object.keys(datumContent);\n      if (!datumContentKeys.includes(property)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const setCommonFields = () => {\n    for (let i = 0; i < propertiesOfFirstObject.length; i++) {\n      if (isPropertyCommonToAllData(propertiesOfFirstObject[i])) {\n        commonFields.push(propertiesOfFirstObject[i]);\n      }\n    }\n  };\n\n  const setMergedData = () => {\n    for (let i = 0; i < data.length; i++) {\n      const datumMainKey = Object.keys(data[i])[0];\n      const datumContent = data[i][datumMainKey];\n      let rowData = {};\n      rowData.label = datumMainKey;\n      for (let j = 0; j < commonFields.length; j++) {\n        rowData[commonFields[j]] = datumContent[commonFields[j]];\n      }\n      mergedData.push(rowData);\n    }\n  };\n\n  setPropertiesOfFirstObject();\n  setCommonFields();\n  setMergedData();\n\n  mergedData = [];\n  for (let i = 0; i < data.length; i++) {\n    const dataFirstKey = Object.keys(data[i])[0];\n    mergedData.push(data[i][dataFirstKey]);\n  }\n  return mergedData;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { Line, Doughnut, Bar, Pie } from \"react-chartjs-2\";\n\nimport \"./DataUi.scss\";\n\nimport SelectItems from \"./SelectItems/SelectItems\";\n\nimport DataUi from \"./DataUi\";\n\nimport { getButtonsFromMessage } from \"../../../utilities/jsonMessageHelper\";\n\nconst DataUiContainer = ({ data }) => {\n  const [chartType, setChartType] = useState();\n  const [xAxis, setXaxis] = useState([]);\n  const [yAxis, setYaxis] = useState([]);\n  const [xAxisType, setXaxisType] = useState(\"any\");\n  const [yAxisAggregationType, setYaxisAggregationType] = useState([]);\n  const [fieldsToChart, setFieldsToChart] = useState([]);\n  const [view, setView] = useState(\"table\");\n\n  const getDataName = () => {\n    const dataKey = \"Data\";\n    return dataKey;\n  };\n\n  const getFields = () => {\n    const dataFields = Object.keys(data[0]);\n    return dataFields;\n  };\n\n  const getRandomColor = () => {\n    function randomInteger(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    const colors = [\n      \"rgba(255, 99, 132, 1)\",\n      \"rgba(255, 159, 64, 1)\",\n      \"rgba(255, 205, 86, 1)\",\n      \"rgba(75, 192, 192, 1)\",\n      \"rgba(54, 162, 235, 1)\",\n      \"rgba(153, 102, 255, 1)\",\n      \"rgba(201, 203, 207, 1)\",\n    ];\n    return colors[randomInteger(0, 5)];\n  };\n\n  const getDisplayValue = (fieldValue) => {\n    let displayValue = \"\";\n\n    if (!isNaN(fieldValue)) return fieldValue;\n    if (fieldValue.includes(\"$\")) {\n      displayValue = fieldValue.replace(\"$\", \"\").trim();\n      return parseFloat(displayValue);\n    }\n\n    if (fieldValue.includes(\"sq ft\")) {\n      displayValue = fieldValue.replace(\"sq ft\").trim();\n      return parseFloat(displayValue);\n    }\n\n    if (fieldValue.includes(\"sq. ft.\")) {\n      displayValue = fieldValue.replace(\"sq. ft.\").trim();\n      return parseFloat(displayValue);\n    }\n\n    return fieldValue;\n  };\n\n  const tableView = () => {\n    return (\n      <div className=\"in-message-table-container\">\n        <table className=\"table table--in-message w-100\">\n          <thead>\n            <tr>\n              {getFields().map((field, index) => (\n                <th key={\"data-heading-\" + index}>{field}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((datum, index) => (\n              <tr key={\"data-row-\" + index}>\n                {getFields().map((field, index) => (\n                  <td key={\"column-data-\" + index}>{datum[field]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const chartTypeButtonHandler = (chartType) => {\n    setFieldsToChart([]);\n    setYaxis([]);\n    setXaxis([]);\n    setChartType(chartType);\n  };\n\n  const getAxisDataTypeMessage = (axis) => {\n    if (axis === \"any\") {\n      return null;\n    } else {\n      return \"You have selected \" + axis + \" type for x-axis. Only one type can be selected.\";\n    }\n  };\n\n  const selectAxisOrField = (chartType) => {\n    if (chartType === \"Bar\" || chartType === \"Line\") {\n      return (\n        <>\n          <SelectItems\n            info={getAxisDataTypeMessage(xAxisType)}\n            label={\"Fields for x-axis:\"}\n            items={getFieldsOfType(xAxisType)}\n            itemsFilter={[...xAxis, ...yAxis]}\n            selectedItems={xAxis}\n            setSelectedItems={setXaxis}\n          />\n          <SelectItems\n            type={\"single\"}\n            label={\"Fields for y-axis:\"}\n            items={yAxis.length < 1 ? getFieldsOfType(\"numeric\") : []}\n            itemsFilter={[...xAxis, ...yAxis]}\n            selectedItems={yAxis}\n            setSelectedItems={setYaxis}\n          />\n          <SelectItems\n            type={\"single\"}\n            label={\"Select Y-axis aggregation type\"}\n            items={yAxisAggregationType.length < 1 ? [\"min\", \"max\", \"sum\", \"average\"] : []}\n            itemsFilter={[]}\n            selectedItems={yAxisAggregationType}\n            setSelectedItems={setYaxisAggregationType}\n          />\n        </>\n      );\n    } else if (chartType === \"Doughnut\" || chartType === \"Pie\") {\n      return (\n        <SelectItems\n          label={\"Fields:\"}\n          items={getFields().filter((field) => field !== \"label\")}\n          itemsFilter={[...fieldsToChart]}\n          selectedItems={fieldsToChart}\n          setSelectedItems={setFieldsToChart}\n        />\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const selectChartType = () => {\n    const selected = \"btn btn-primary mx-1 mb-2\";\n    const unselected = \"btn btn-outline-primary mx-1 mb-2\";\n    return (\n      <div>\n        <div className=\"py-2\">Select Chart type:</div>\n        <button className={chartType === \"Pie\" ? selected : unselected} onClick={() => chartTypeButtonHandler(\"Pie\")}>\n          Pie\n        </button>\n        <button\n          className={chartType === \"Doughnut\" ? selected : unselected}\n          onClick={() => chartTypeButtonHandler(\"Doughnut\")}\n        >\n          Doughnut\n        </button>\n        <button className={chartType === \"Bar\" ? selected : unselected} onClick={() => chartTypeButtonHandler(\"Bar\")}>\n          Bar\n        </button>\n        <button className={chartType === \"Line\" ? selected : unselected} onClick={() => chartTypeButtonHandler(\"Line\")}>\n          Line\n        </button>\n      </div>\n    );\n  };\n\n  const getUniqueValuesForXaxisField = (xAxisField) => {\n    const uniqueValues = [];\n    for (let i = 0; i < data.length; i++) {\n      if (!uniqueValues.includes(data[i][xAxisField])) {\n        uniqueValues.push(data[i][xAxisField]);\n      }\n    }\n    return uniqueValues;\n  };\n\n  const getUniqueValuesForXaxisFields = () => {\n    const uniqueValuesPerField = {};\n    for (let i = 0; i < xAxis.length; i++) {\n      uniqueValuesPerField[xAxis[i]] = getUniqueValuesForXaxisField(xAxis[i]);\n    }\n    return uniqueValuesPerField;\n  };\n\n  const getMin = (data) => {\n    return Math.min(...data);\n  };\n\n  const getMax = (data) => {\n    return Math.max(...data);\n  };\n\n  const getSum = (data) => {\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) {\n      sum += data[i];\n    }\n    return sum;\n  };\n\n  const getAverage = (data) => {\n    if (!data.length) {\n      return 0;\n    }\n    const sum = getSum(data);\n    return sum / data.length;\n  };\n\n  const getYaxisAggregation = (field, value) => {\n    const yAxisData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (getDisplayValue(data[i][field]) === value) {\n        yAxisData.push(getDisplayValue(data[i][yAxis[0]]));\n      }\n    }\n    switch (yAxisAggregationType[0]) {\n      case \"min\":\n        return getMin(yAxisData);\n      case \"max\":\n        return getMax(yAxisData);\n      case \"average\":\n        return getAverage(yAxisData);\n      case \"sum\":\n      default:\n        return getSum(yAxisData);\n    }\n  };\n\n  const chart = () => {\n    if (chartType === \"Pie\" && fieldsToChart.length > 0) {\n      let labels = [];\n      let datasets = [];\n      let pieData = {};\n\n      // build labels\n      for (let i = 0; i < data.length; i++) {\n        labels.push(i + 1);\n      }\n\n      // build dataset\n      for (let i = 0; i < fieldsToChart.length; i++) {\n        const localData = [];\n        for (let j = 0; j < data.length; j++) {\n          localData.push(getDisplayValue(data[j][fieldsToChart[i]]));\n        }\n        datasets.push({\n          label: fieldsToChart[i],\n          borderColor: \"rgb(255, 99, 132)\",\n          borderWidth: 1,\n          data: localData,\n        });\n      }\n\n      pieData = {\n        labels,\n        datasets,\n      };\n\n      console.log(pieData);\n\n      return <Pie data={pieData} />;\n    }\n\n    if (chartType === \"Doughnut\" && fieldsToChart.length > 0) {\n      let labels = [];\n      let datasets = [];\n      let doughnutData = {};\n\n      // build labels\n      for (let i = 0; i < data.length; i++) {\n        labels.push(i + 1);\n      }\n\n      // build dataset\n      for (let i = 0; i < fieldsToChart.length; i++) {\n        const localData = [];\n        for (let j = 0; j < data.length; j++) {\n          localData.push(getDisplayValue(data[j][fieldsToChart[i]]));\n        }\n        datasets.push({\n          label: fieldsToChart[i],\n          borderColor: \"rgb(255, 99, 132)\",\n          borderWidth: 1,\n          data: localData,\n        });\n      }\n\n      doughnutData = {\n        labels,\n        datasets,\n      };\n\n      return <Doughnut data={doughnutData} />;\n    }\n\n    if (chartType === \"Line\" && xAxis.length > 0 && yAxis.length && yAxisAggregationType.length) {\n      let labels = [];\n      let datasets = [];\n      let lineData = {};\n\n      const localData = [];\n      const uniqueValuesPerField = getUniqueValuesForXaxisFields();\n      const fields = Object.keys(uniqueValuesPerField);\n\n      // build labels\n      for (let i = 0; i < fields.length; i++) {\n        const uniqueValues = uniqueValuesPerField[fields[i]];\n        for (let j = 0; j < uniqueValues.length; j++) {\n          labels.push(fields[i] + \":\" + getDisplayValue(uniqueValues[j]));\n          localData.push(getYaxisAggregation(fields[i], getDisplayValue(uniqueValues[j])));\n        }\n      }\n\n      // // build labels\n      // for (let i = 0; i < data.length; i++) {\n      //   labels.push(data[i].label);\n      // }\n\n      // // build dataset\n      // for (let i = 0; i < xAxis.length; i++) {\n      //   const localData = [];\n      //   for (let j = 0; j < data.length; j++) {\n      //     localData.push(getDisplayValue(data[j][xAxis[i]]));\n      //   }\n      //   datasets.push({\n      //     label: xAxis[i],\n      //     borderColor: getRandomColor(),\n      //     borderWidth: 1,\n      //     data: localData,\n      //   });\n      // }\n\n      datasets.push({\n        label: yAxis[0] + \":\" + yAxisAggregationType[0],\n        borderWidth: 1,\n        data: localData,\n        backgroundColor: getRandomColor(),\n      });\n\n      let options = {\n        maintainAspectRation: false,\n        responsive: true,\n        legend: {\n          display: true,\n        },\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem) {\n              return tooltipItem.yLabel;\n            },\n          },\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                min: 0,\n                callback: function (value) {\n                  if (value % 1 === 0) {\n                    return value;\n                  }\n                },\n              },\n            },\n          ],\n        },\n      };\n\n      lineData = {\n        labels,\n        datasets,\n      };\n\n      return <Line data={lineData} options={options} redraw />;\n    }\n\n    if (chartType === \"Bar\" && xAxis.length > 0 && yAxis.length && yAxisAggregationType.length) {\n      let labels = [];\n      let datasets = [];\n      let barData = {};\n      const localData = [];\n      const uniqueValuesPerField = getUniqueValuesForXaxisFields();\n      const fields = Object.keys(uniqueValuesPerField);\n\n      // build labels\n      for (let i = 0; i < fields.length; i++) {\n        const uniqueValues = uniqueValuesPerField[fields[i]];\n        for (let j = 0; j < uniqueValues.length; j++) {\n          labels.push(fields[i] + \":\" + getDisplayValue(uniqueValues[j]));\n          localData.push(getYaxisAggregation(fields[i], getDisplayValue(uniqueValues[j])));\n        }\n      }\n\n      // console.log(uniqueValuesPerField);\n      // console.log(fields);\n      // console.log(labels);\n      // console.log(localData);\n      // labels = [];\n\n      // build labels\n      // for (let i = 0; i < data.length; i++) {\n      //   labels.push(data[i].label);\n      // }\n\n      // build dataset\n      // for (let i = 0; i < xAxis.length; i++) {\n      //   const localData = [];\n      //   for (let j = 0; j < data.length; j++) {\n      //     localData.push(getDisplayValue(data[j][xAxis[i]]));\n      //   }\n      //   datasets.push({\n      //     label: xAxis[i],\n      //     borderWidth: 1,\n      //     data: localData,\n      //     backgroundColor: getRandomColor(),\n      //   });\n      // }\n\n      datasets.push({\n        label: yAxis[0] + \":\" + yAxisAggregationType[0],\n        borderWidth: 1,\n        data: localData,\n        backgroundColor: getRandomColor(),\n      });\n\n      let options = {\n        maintainAspectRation: false,\n        responsive: true,\n        legend: {\n          display: true,\n        },\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem) {\n              return tooltipItem.yLabel;\n            },\n          },\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                min: 0,\n                callback: function (value) {\n                  if (value % 1 === 0) {\n                    return value;\n                  }\n                },\n              },\n            },\n          ],\n        },\n      };\n\n      barData = {\n        labels,\n        datasets,\n      };\n\n      return <Bar data={barData} options={options} redraw />;\n    }\n\n    return null;\n  };\n\n  const chartView = () => {\n    return (\n      <>\n        {selectChartType()}\n        {selectAxisOrField(chartType)}\n        <div className=\"data-ui__chart-container\">{chart()}</div>\n      </>\n    );\n  };\n\n  const viewButtonHandler = () => {\n    if (view === \"chart\") {\n      setChartType(null);\n      setFieldsToChart([]);\n      setXaxis([]);\n      setYaxis([]);\n      setView(\"table\");\n    } else {\n      setChartType(null);\n      setFieldsToChart([]);\n      setXaxis([]);\n      setYaxis([]);\n      setView(\"chart\");\n    }\n  };\n\n  const getViewToggleInfo = () => {\n    if (view === \"table\") {\n      return {\n        text: \"Chart\",\n        clickHandler: viewButtonHandler,\n      };\n    } else {\n      return {\n        text: \"Table\",\n        clickHandler: viewButtonHandler,\n      };\n    }\n  };\n\n  const getContent = () => {\n    if (view === \"table\") {\n      return tableView();\n    } else {\n      return chartView();\n    }\n  };\n\n  const isFieldNumeric = (field) => {\n    const firstRecord = data[0];\n    return !isNaN(getDisplayValue(firstRecord[field]));\n  };\n\n  const getFieldsOfType = (type) => {\n    const fields = getFields();\n    const numericFields = [];\n    const stringFields = [];\n    for (let i = 0; i < fields.length; i++) {\n      if (isFieldNumeric(fields[i])) {\n        numericFields.push(fields[i]);\n      } else {\n        stringFields.push(fields[i]);\n      }\n    }\n    if (type === \"numeric\") {\n      return numericFields;\n    } else if (type === \"string\") {\n      return stringFields;\n    } else {\n      return fields;\n    }\n  };\n\n  useEffect(() => {\n    if (xAxis.length < 1) {\n      setXaxisType(\"any\");\n    } else {\n      if (isFieldNumeric(xAxis[0])) {\n        setXaxisType(\"numeric\");\n      } else {\n        setXaxisType(\"string\");\n      }\n    }\n  }, [xAxis]);\n\n  return <DataUi name={getDataName()} viewToggle={getViewToggleInfo()} content={getContent()} />;\n};\n\nexport default DataUiContainer;\n","import React from \"react\";\n\nconst JsonMessage = ({ aggregations, data, buttons, texts }) => {\n  return (\n    <div>\n      {aggregations}\n      {data}\n      {texts}\n      {buttons}\n    </div>\n  );\n};\n\nexport default JsonMessage;\n","import React, { useContext } from \"react\";\n\nimport AggregationUiContainer from \"../AggregationUi/AggregationUiContainer\";\nimport DataUiContainer from \"../DataUi/DataUiContainer\";\n\nimport JsonMessage from \"./JsonMessage\";\n\nimport { AppContext } from \"../../../AppContext\";\n\nimport {\n  getFlattendedAggregationData,\n  getDecomposedJsonMessage,\n  mergeDataItemsIntoTable,\n} from \"../../../utilities/jsonMessageHelper\";\n\nconst JsonMessageContainer = (props) => {\n  const { messages, setMessages } = useContext(AppContext);\n\n  const { aggregations, data, buttons, texts } = getDecomposedJsonMessage(props.message);\n\n  const getAggregationsUi = (aggregations) => {\n    const flattenedAggregationData = getFlattendedAggregationData(aggregations);\n    return flattenedAggregationData.map((aggregation, index) => (\n      <AggregationUiContainer aggregationData={aggregation} key={index} />\n    ));\n  };\n\n  const getDataUi = (data) => {\n    if (data.length < 1) {\n      return null;\n    }\n    return <DataUiContainer data={mergeDataItemsIntoTable(data)} />;\n  };\n\n  const getButtonsUi = (buttons) => {\n    return (\n      <div\n        className=\"buttons position-relative\"\n        style={{ marginRight: \"-.5rem\", marginLeft: \"-.5rem\", paddingRight: \".5rem\", paddingLeft: \".5rem\" }}\n      >\n        <div className=\"overlay overlay--buttons\"></div>\n        {buttons.map((button, index) => {\n          const buttonFirstKey = Object.keys(button);\n          return (\n            <button\n              onClick={() => {\n                setMessages([...messages, { from: \"user\", message: button[buttonFirstKey].value }]);\n              }}\n              key={index}\n              className=\"btn btn-success mx-1 mb-2\"\n            >\n              {button[buttonFirstKey].key}\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const getTextsUi = (texts) => {\n    return (\n      <div\n        className=\"py-4 position-relative\"\n        style={{ marginRight: \"-.5rem\", marginLeft: \"-.5rem\", paddingRight: \".5rem\", paddingLeft: \".5rem\" }}\n      >\n        <div className=\"overlay overlay--texts\"></div>\n        {texts.map((text, index) => {\n          const textFirstKey = Object.keys(text);\n          return <div key={index}>{text[textFirstKey].value}</div>;\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <JsonMessage\n      aggregations={getAggregationsUi(aggregations)}\n      data={getDataUi(data)}\n      buttons={getButtonsUi(buttons)}\n      texts={getTextsUi(texts)}\n    />\n  );\n};\n\nexport default JsonMessageContainer;\n","import React, { useEffect, useRef } from \"react\";\n\nimport MessageBubble from \"../MessageBubble/MessageBubble\";\nimport TextMessage from \"./TextMessage/TextMessage\";\nimport JsonMessageContainer from \"./JsonMessage/JsonMessageContainer\";\n\nimport { isMessageJson } from \"../../utilities/jsonMessageHelper\";\n\nconst Message = ({ message, isLast }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (ref.current) {\n      setTimeout(() => {\n        if (ref.current) ref.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n      }, 100);\n    }\n  }, []);\n\n  const renderMessage = () => {\n    if (isMessageJson(message.message)) {\n      return <JsonMessageContainer message={message.message} />;\n    } else {\n      return <TextMessage message={message.message} />;\n    }\n  };\n\n  const messageAdditionalClasses = isLast ? \" message--last\" : \"\";\n\n  return (\n    <div className={\"message\" + messageAdditionalClasses} ref={ref}>\n      <MessageBubble from={message.from}>{renderMessage()}</MessageBubble>;\n    </div>\n  );\n};\n\nexport default Message;\n","import { LinearProgress } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../../AppContext\";\n\nimport Message from \"../Message/Message\";\n\nconst MessagesContainer = () => {\n  const { messages, isWaiting } = useContext(AppContext);\n  const isLast = (index) => {\n    return index + 1 === messages.length ? true : false;\n  };\n  return (\n    <div className=\"messages-container\">\n      {messages.map((message, index) => {\n        return <Message isLast={isLast(index)} key={index} index={index} message={message} />;\n      })}\n      {/* {isWaiting ? (\n        <div className=\"progress_load\">\n          <LinearProgress />\n        </div>\n      ) : (\n        <></>\n      )} */}\n    </div>\n  );\n};\n\nexport default MessagesContainer;\n","import React from \"react\";\n\nimport \"./Conversation.scss\";\n\nconst Conversation = ({ children }) => {\n  return <div className=\"conversation\">{children}</div>;\n};\n\nexport default Conversation;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst useAgTable = (uploadedJsonFile) => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [columnState, setColumnState] = useState(null);\n\n  useEffect(() => {\n    if (uploadedJsonFile && gridColumnApi) {\n      saveColumnState();\n    }\n    // eslint-disable-next-line\n  }, [uploadedJsonFile, gridColumnApi]);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n  const saveColumnState = () => {\n    setColumnState(gridColumnApi.getColumnState());\n  };\n  const restoreColumnState = () => {\n    gridColumnApi.applyColumnState({ state: columnState });\n  };\n  const resetState = () => {\n    gridColumnApi.resetColumnState();\n    console.log(gridColumnApi.getColumnState());\n  };\n  const onColumnMoved = (e) => {\n    console.log(\"Event Column Moved\", e);\n  };\n  const onColumnVisible = (e) => {\n    saveColumnState();\n  };\n\n  return {\n    gridApi,\n    setGridApi,\n    gridColumnApi,\n    setGridColumnApi,\n    columnState,\n    setColumnState,\n    onGridReady,\n    saveColumnState,\n    restoreColumnState,\n    resetState,\n    onColumnMoved,\n    onColumnVisible,\n  };\n};\n\nexport default useAgTable;\n","import React from \"react\";\n\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\nconst AgTableNew = ({ jsonData, onGridReady, onColumnVisible }) => {\n  return (\n    <div className=\"ag-table__container ag-theme-balham\" style={{ height: \"calc(100% - 54px)\", width: \"100%\" }}>\n      <AgGridReact\n        rowData={jsonData.rowData}\n        rowSelection=\"multiple\"\n        onGridReady={onGridReady}\n        onColumnVisible={onColumnVisible}\n      >\n        {jsonData.columnDefs.map((column, index) => (\n          <AgGridColumn\n            key={index}\n            field={column.field}\n            sortable={true}\n            filter={true}\n            // checkboxSelection={index === 0 ? true : false}\n          ></AgGridColumn>\n        ))}\n      </AgGridReact>\n    </div>\n  );\n};\n\nexport default AgTableNew;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\n\nimport { FileUploadContext } from \"../../FileUploadContext\";\nimport { AppContext } from \"../../AppContext\";\n\nimport useAgTable from \"../../hooks/useAgTable\";\n\nimport ButtonIcon from \"../ButtonIcon/ButtonIcon\";\nimport AgTableNew from \"../AgTable/AgTableNew\";\n\nimport \"./FilePreviewTable.scss\";\n\nimport {\n  discardTableIcon,\n  fullScreenIcon,\n  exitFullScreenIcon,\n  uploadIcon,\n  minimizeIcon,\n  uploadSuccessIcon,\n  closeIcon,\n} from \"../../Icons/Icons\";\n\nconst FilePreviewTable = ({ setIsTableVisible, setIsTableToggleVisible }) => {\n  const fileUploadContext = useContext(FileUploadContext);\n  const appContext = useContext(AppContext);\n\n  const { onGridReady, onColumnVisible } = useAgTable(fileUploadContext.jsonData);\n\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const tableContainerClass = isFullScreen ? \" file-preview-table--fullscreen\" : \"\";\n\n  const sizingIcon = isFullScreen ? exitFullScreenIcon : fullScreenIcon;\n\n  const handleFullScreenToggleClick = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  const handleCloseButtonClick = () => {\n    setIsTableVisible(false);\n    setIsTableToggleVisible(false);\n    fileUploadContext.clearFileUploadData();\n  };\n\n  const handleMinimizeButtonClick = () => {\n    setIsTableVisible(false);\n  };\n\n  const handleUploadButtonClick = () => {\n    fileUploadContext.uploadFile();\n    setIsTableVisible(false);\n  };\n\n  const uploadButton =\n    fileUploadContext.uploadStatus !== \"success\" && !fileUploadContext.isFileFromS3 ? (\n      <button\n        className=\"file-preview-table__button file-preview-table__button--upload\"\n        onClick={handleUploadButtonClick}\n      >\n        {uploadIcon}\n      </button>\n    ) : null;\n\n  const uploadStatusMessage = () => {\n    if (!fileUploadContext.uploadStatus) {\n      return null;\n    }\n    // return null for now; needs to be refactored\n    return null;\n    if (fileUploadContext.uploadStatus === \"success\" && appContext.pendingFileUploads.length < 1) {\n      return (\n        <div className=\"file-preview-table__upload-status-message alert alert-success\">file has been uploaded</div>\n      );\n    } else {\n      return <div className=\"file-preview-table__upload-status-message alert alert-info\">file is uploading</div>;\n    }\n  };\n\n  return (\n    <div className={\"file-preview-table\" + tableContainerClass}>\n      <div className=\"file-preview-table__heading\">\n        {uploadStatusMessage()}\n        {uploadButton}\n        <div className=\"file-preview-table__filename\">{fileUploadContext.getFileName()}</div>\n        <button\n          className=\"file-preview-table__button file-preview-table__button--minimize\"\n          onClick={handleMinimizeButtonClick}\n        >\n          {minimizeIcon}\n        </button>\n        <button\n          className=\"file-preview-table__button file-preview-table__button--fullscreen-toggle\"\n          onClick={handleFullScreenToggleClick}\n        >\n          {sizingIcon}\n        </button>\n        <button\n          className=\"file-preview-table__button file-preview-table__button--close\"\n          onClick={handleCloseButtonClick}\n        >\n          {closeIcon}\n        </button>\n      </div>\n      {fileUploadContext.jsonData ? (\n        <AgTableNew jsonData={fileUploadContext.jsonData} onGridReady={onGridReady} onColumnVisible={onColumnVisible} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default FilePreviewTable;\n","import React from \"react\";\nconst SignOutButton = ({ signOutHandler }) => {\n  return (\n    <button className=\"btn btn-success\" onClick={() => signOutHandler()}>\n      Sign Out\n    </button>\n  );\n};\n\nexport default SignOutButton;\n","export const getDateNowFormatted = () => {\n  const currentDate = new Date(Date.now());\n  const month = currentDate.getMonth() + 1;\n  const day = currentDate.getDate();\n  const year = currentDate.getFullYear();\n\n  return month + \"/\" + day + \"/\" + year;\n};\n","import React from \"react\";\n\nimport { getDateNowFormatted } from \"../../utilities/date\";\n\nconst AccountInfo = ({ username, openChangePassword, email }) => {\n  return (\n    <div className=\"account-info\">\n      <div className=\"font-weight-bold text-center\">My Profile</div>\n      <div className=\"py-2 d-flex justify-content-center align-items-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ width: \"8rem\", fill: \"white\" }}>\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n        </svg>\n      </div>\n      <div className=\"py-2\">\n        Username: <strong>{username}</strong>\n      </div>\n      <div className=\"py-2\">\n        Email: <strong>{email}</strong>\n      </div>\n      <div className=\"py-2\">\n        Joined: <strong>{getDateNowFormatted()}</strong>\n      </div>\n      <div className=\"py-2\">\n        Last login: <strong>{getDateNowFormatted()}</strong>\n      </div>\n      <div className=\"py-2\">\n        <button className=\"btn btn-block btn-primary\" onClick={openChangePassword}>\n          Change Password\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountInfo;\n","import React, { useState } from \"react\";\n\nimport \"./Header.scss\";\n\nimport { hamburgerIcon } from \"../../Icons/Icons\";\n\nconst Header = ({ children, theme }) => {\n  const [collapsed, setCollapsed] = useState(true);\n  const menuToggleClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const collapseClass = collapsed ? \"header__collapse\" : \"header__collapse header__collapse--active\";\n  const logoUrl =\n    theme === \"theme-two\"\n      ? process.env.PUBLIC_URL + \"/images/thinkquick-logo-attemp-white-01.png\"\n      : process.env.PUBLIC_URL + \"/images/thinkquick-logo-attemp-01.png\";\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__brand\">\n        <a href=\"https://thinkquic.com/\" target=\"_blank\">\n          <img className=\"header__brand-logo\" src={logoUrl} alt=\"\" />\n        </a>\n        <span className=\"header__brand-text sr-only\">Thinkquic</span>\n      </div>\n      <button onClick={menuToggleClick} className=\"header__menu-toggle\">\n        {hamburgerIcon}\n      </button>\n      <div className={collapseClass}>\n        <div className=\"header__user-utilities\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst HeaderItem = ({ children }) => {\n  return <div className=\"header__item\">{children}</div>;\n};\n\nexport default HeaderItem;\n","import React, { useState } from \"react\";\n\nimport \"./Dropdown.scss\";\n\nconst Dropdown = ({ children, isActive, setIsActive, toggle }) => {\n  const dropdownItemsClass = isActive ? \"dropdown__items dropdown__items--active\" : \"dropdown__items\";\n  const dropdownClass = isActive ? \"dropdown dropdown--active\" : \"dropdown\";\n  return (\n    <div className={dropdownClass}>\n      <div onClick={() => setIsActive(!isActive)}>{toggle}</div>\n      <div className={dropdownItemsClass}>{children}</div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nconst ButtonIconLink = ({ clickHandler, icon, text }) => {\n  return (\n    <button\n      className=\"btn btn-link text-white d-flex align-items-center\"\n      onClick={clickHandler}\n    >\n      {icon}\n      <span>{text}</span>\n    </button>\n  );\n};\n\nexport default ButtonIconLink;\n","import React from \"react\";\n\nimport \"./RightSidebar.scss\";\n\nimport { closeIcon } from \"../../Icons/Icons\";\n\nconst RightSidebar = ({ isRightSidebarOpen, closeRightSidebar, rightSidebarContent, isMobile }) => {\n  let rightSidebarClasses = isRightSidebarOpen ? \"right-sidebar right-sidebar--active\" : \"right-sidebar\";\n  rightSidebarClasses = isMobile ? rightSidebarClasses + \" right-sidebar--is-mobile\" : rightSidebarClasses;\n\n  return (\n    <div className={rightSidebarClasses}>\n      <button onClick={closeRightSidebar} className=\"right-sidebar__close\">\n        {closeIcon}\n      </button>\n      <div className=\"right-sidebar__content\">{rightSidebarContent}</div>\n    </div>\n  );\n};\n\nexport default RightSidebar;\n","import React from \"react\";\n\nimport \"./Sidebar.scss\";\n\nconst Sidebar = ({ children }) => {\n  return <div className=\"sidebar\">{children}</div>;\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport \"./SidebarItem.scss\";\n\nconst SidebarItem = ({ icon, tooltipText, clickHandler, position }) => {\n  let sidebarItemClasses = \"sidebar-item\";\n  if (position && position === \"bottom\") {\n    sidebarItemClasses = \"sidebar-item sidebar-item--bottom\";\n  }\n  return (\n    <div className={sidebarItemClasses}>\n      <button className=\"sidebar-item__button\" onClick={clickHandler}>\n        {icon}\n      </button>\n      <div className=\"sidebar-item__tooltip\">{tooltipText}</div>\n    </div>\n  );\n};\n\n/*const SidebarItem = (props) => {\n  if (props.type && props.type === 'button') {\n\n    return (\n      <button\n        className={props.className ? \"sidebar-item \" + props.className : \"sidebar-item\"}\n        onClick={props.onClickHandler}\n      >\n        <span className=\"sidebar-item__icon\">{props.icon}</span>\n        <span className=\"sidebar-item__text\">{props.text}</span>\n        {props.children}\n      </button>\n    )\n  } else {\n    return (\n      <div\n        className={props.className ? \"sidebar-item \" + props.className : \"sidebar-item\"}\n        onClick={props.onClickHandler}\n      >\n        <span className=\"sidebar-item__icon\">{props.icon}</span>\n        <span className=\"sidebar-item__text\">{props.text}</span>\n        {props.children}\n      </div>\n    )\n  }\n}*/\n\nexport default SidebarItem;\n","import React from \"react\";\n\nimport \"./Main.scss\";\n\nconst Main = ({ children }) => {\n  return <div className=\"main\">{children}</div>;\n};\n\nexport default Main;\n","import React, { useContext } from \"react\";\n\nimport { FileUploadContext } from \"../../FileUploadContext\";\n\nconst UploadFile = () => {\n  const fileUploadContext = useContext(FileUploadContext);\n\n  const handleInputChange = (inputField) => {\n    fileUploadContext.handleFileInputChange(inputField);\n  };\n\n  return (\n    <form className=\"upload-file__form\" action=\"/action_page.php\">\n      <label className=\"sr-only\" htmlFor=\"myfile\">\n        Select a file:\n      </label>\n      <input\n        ref={fileUploadContext.fileInputRef}\n        onChange={(event) => handleInputChange(event.target)}\n        className=\"d-none\"\n        type=\"file\"\n        id=\"myfile\"\n        name=\"myfile\"\n      />\n    </form>\n  );\n};\n\nexport default UploadFile;\n","import React, { useState } from \"react\";\n\nimport { folderIcon, excelIcon, htmlFileIcon, jsFileIcon, defaultFileIcon, moreVerticalIcon } from \"../../Icons/Icons\";\n\nconst FileContainer = ({ type, text, onClick, deleteFile }) => {\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false);\n\n  const displayIcon = () => {\n    if (type === \"folder\") {\n      return folderIcon;\n    } else {\n      const textFileArray = text.split(\".\");\n      const fileExt = textFileArray[textFileArray.length - 1];\n      if (fileExt === \"csv\" || fileExt === \"xlsx\") {\n        return excelIcon;\n      } else if (fileExt === \"html\") {\n        return htmlFileIcon;\n      } else if (fileExt === \"js\") {\n        return jsFileIcon;\n      } else {\n        return defaultFileIcon;\n      }\n    }\n  };\n\n  const fileClickHandler = () => {\n    if (onClick) {\n      onClick(text);\n    } else {\n      // no op\n    }\n  };\n\n  const optionsToggleClickHandler = (event) => {\n    event.stopPropagation();\n    setIsOptionsOpen(!isOptionsOpen);\n  };\n\n  const openClickHandler = (event) => {\n    event.stopPropagation();\n    fileClickHandler();\n  };\n\n  const deleteClickHandler = (event) => {\n    event.stopPropagation();\n    setIsOptionsOpen(false);\n    deleteFile(text);\n  };\n\n  const optionsListClass = isOptionsOpen ? \"file__options-list file__options-list--is-open\" : \"file__options-list\";\n\n  return (\n    <div className=\"file\" onClick={fileClickHandler}>\n      <div className=\"file__icon\">{displayIcon()}</div>\n      <div className=\"file__name\">{text}</div>\n      <div className={optionsListClass}>\n        <button className=\"btn btn-sm btn-success file__option\" onClick={(event) => openClickHandler(event)}>\n          open\n        </button>\n        <button className=\"btn btn-sm btn-danger file__option\" onClick={(event) => deleteClickHandler(event)}>\n          delete\n        </button>\n      </div>\n      <button className=\"file__options-toggle\" onClick={(event) => optionsToggleClickHandler(event)}>\n        {moreVerticalIcon}\n      </button>\n    </div>\n  );\n};\n\nexport default FileContainer;\n","import React from \"react\";\n\nimport \"./FileUploading.scss\";\n\nimport { defaultFileIcon } from \"../../../Icons/Icons\";\n\nconst FileUploading = (props) => {\n  const { text } = props;\n  return (\n    <div className=\"file-uploading\">\n      <div className=\"file-uploading__notifications\">\n        <span className=\"file-uploading__message\">Uploading</span>\n        <div className=\"file-uploading__spinner spinner-border text-light\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n      <div className=\"file-uploading__file\">\n        <span className=\"file-uploading__icon\">{defaultFileIcon}</span>\n        <span className=\"file-uploading__filename\">{text}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUploading;\n","import React from \"react\";\n\nimport \"./FileUploadError.scss\";\n\nimport { defaultFileIcon, closeIcon } from \"../../../Icons/Icons\";\n\nconst FileUploadError = (props) => {\n  const { text, removeFileFromFileUploadErrors } = props;\n  return (\n    <div className=\"file-upload-error\">\n      <div className=\"file-upload-error__notification\">\n        <span className=\"file-upload-error__message\">Upload Error</span>\n        <button className=\"file-upload-error__close-button\" onClick={removeFileFromFileUploadErrors}>\n          {closeIcon}\n        </button>\n      </div>\n      <div className=\"file-upload-error__file\">\n        <span className=\"file-upload-error__icon\">{defaultFileIcon}</span>\n        <span className=\"file-upload-error__filename\">{text}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUploadError;\n","import React from \"react\";\n\nimport \"./FilesList.scss\";\n\nimport FileContainer from \"../File/FileContainer\";\nimport FileUploading from \"./FileUploading/FileUploading\";\nimport FileUploadError from \"./FileUploadError/FileUploadError\";\n\nimport { closeIcon } from \"../../Icons/Icons\";\n\nconst FilesList = (props) => {\n  const {\n    searchString,\n    setSearchString,\n    files,\n    folders,\n    isFilesListVisible,\n    toggleIsFilesListVisible,\n    onFolderClick,\n    onFileClick,\n    deleteFile,\n    pendingFileUploads,\n    fileUploadErrors,\n    removeFileFromFileUploadErrors,\n  } = props;\n\n  const filesListClass = isFilesListVisible ? \"files-list files-list--visible\" : \"files-list\";\n  return (\n    <div className={filesListClass}>\n      <div className=\"files-list__header\">\n        <span className=\"files-list__heading\">Files</span>\n        <button className=\"files-list__close-button\" onClick={toggleIsFilesListVisible}>\n          {closeIcon}\n        </button>\n      </div>\n      <input\n        placeholder={\"search files\"}\n        value={searchString}\n        onChange={(e) => setSearchString(e.target.value)}\n        className=\"form-control files-list__search\"\n      ></input>\n      {props.children}\n      <div className=\"files-list__items\">\n        {pendingFileUploads.map((pendingFileUpload, index) => {\n          return <FileUploading key={pendingFileUpload + \"-\" + index} text={pendingFileUpload} />;\n        })}\n        {fileUploadErrors.map((fileUploadError, index) => {\n          return (\n            <FileUploadError\n              key={fileUploadError + \"-\" + index}\n              text={fileUploadError}\n              removeFileFromFileUploadErrors={() => removeFileFromFileUploadErrors(fileUploadErrors)}\n            />\n          );\n        })}\n        {folders.map((folderName, index) => {\n          if (folderName.includes(searchString)) {\n            return (\n              <FileContainer\n                onClick={onFolderClick}\n                deleteFile={deleteFile}\n                text={folderName}\n                type={\"folder\"}\n                key={\"folder-\" + { folderName } + \"-\" + index}\n              />\n            );\n          }\n          return null;\n        })}\n        {files.map((fileName, index) => {\n          if (fileName.includes(searchString)) {\n            return (\n              <FileContainer\n                onClick={onFileClick}\n                deleteFile={deleteFile}\n                text={fileName}\n                type={\"file\"}\n                key={\"file-\" + { fileName } + \"-\" + index}\n              />\n            );\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FilesList;\n","import React from \"react\";\n\nimport { useState, useContext } from \"react\";\n\nimport FilesList from \"../FilesList/FilesList\";\n\nimport useExcelToJson from \"../../hooks/useExcelToJson\";\n\nimport { AppContext } from \"../../AppContext\";\n\nimport { FileUploadContext } from \"../../FileUploadContext\";\n\nconst FilesListContainer = ({ isFilesListVisible, toggleIsFilesListVisible }) => {\n  const {\n    setJsonDataFile,\n    files,\n    folders,\n    currentDirectoryPath,\n    setCurrentDirectoryPath,\n    getFile,\n    deleteFile,\n    pendingFileUploads,\n    fileUploadErrors,\n    removeFileFromFileUploadErrors,\n  } = useContext(AppContext);\n\n  const fileUploadContext = useContext(FileUploadContext);\n\n  const { convertExcelFromS3ToJson } = useExcelToJson();\n  const [searchString, setSearchString] = useState(\"\");\n\n  const generateCurrentDirectoryPathString = () => {\n    let currentDirectoryPathString = \"\";\n    currentDirectoryPath.forEach((path) => {\n      currentDirectoryPathString += path + \"/\";\n    });\n    return currentDirectoryPathString;\n  };\n\n  const onFileClick = async (filename) => {\n    let file = null;\n    if (filename.includes(\".csv\") || filename.includes(\".xlsx\")) {\n      file = await getFile(generateCurrentDirectoryPathString() + filename);\n      fileUploadContext.handleS3FilePreview(file.Body, filename);\n      toggleIsFilesListVisible();\n    } else {\n      // console.log(\"did not do anything because file is not a csv\");\n      return;\n    }\n  };\n\n  const onFolderClick = (folder) => {\n    setCurrentDirectoryPath([...currentDirectoryPath, folder]);\n  };\n\n  const renderBreadcrumb = () => {\n    const currentDirectoryPathWithHome = [\"Home\", ...currentDirectoryPath];\n    const breadcrumb = currentDirectoryPathWithHome.map((path, index) => {\n      if (index < currentDirectoryPathWithHome.length - 1) {\n        return (\n          <li className=\"breadcrumb__item breadcrumb__item--active\" onClick={() => onCrumbClick(index)} key={index}>\n            {/* <button className=\"btn btn-link\" >{path}</button> */}\n            {path}\n          </li>\n        );\n      } else {\n        return (\n          <li className=\"breadcrumb__item\" onClick={() => onCrumbClick(index)} key={index}>\n            {path}\n          </li>\n        );\n      }\n    });\n    return (\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">{breadcrumb}</ol>\n      </nav>\n    );\n  };\n\n  const onCrumbClick = (crumbIndex) => {\n    const newCurrentDirectoryPath = [];\n    // home as the only crumb\n    if (currentDirectoryPath.length < 1 && crumbIndex === 0) {\n      return;\n    }\n\n    // home with other crumb\n    if (currentDirectoryPath.length > 1 && crumbIndex === 0) {\n      setCurrentDirectoryPath([]);\n    }\n\n    // last crumb\n    if (currentDirectoryPath.length === crumbIndex) {\n      return;\n    }\n\n    for (let i = 0; i < crumbIndex; i++) {\n      newCurrentDirectoryPath.push(currentDirectoryPath[i]);\n    }\n    setCurrentDirectoryPath(newCurrentDirectoryPath);\n  };\n\n  return (\n    <FilesList\n      toggleIsFilesListVisible={toggleIsFilesListVisible}\n      isFilesListVisible={isFilesListVisible}\n      files={files}\n      folders={folders}\n      searchString={searchString}\n      setSearchString={setSearchString}\n      onFolderClick={onFolderClick}\n      onFileClick={onFileClick}\n      deleteFile={deleteFile}\n      pendingFileUploads={pendingFileUploads}\n      fileUploadErrors={fileUploadErrors}\n      removeFileFromFileUploadErrors={removeFileFromFileUploadErrors}\n    >\n      {renderBreadcrumb()}\n    </FilesList>\n  );\n};\n\nexport default FilesListContainer;\n","import React from \"react\";\n\nimport \"./InputSuggestion.scss\";\n\nconst InputSuggestions = ({ columnNames, userInput, setMessage, textInputRef }) => {\n  const getLastWordOfInput = () => {\n    const inputWordsArray = userInput.split(\" \");\n    const inputWordCount = inputWordsArray.length;\n    const lastWordIndex = inputWordCount - 1;\n    const lastWord = inputWordsArray[lastWordIndex];\n    return lastWord;\n  };\n\n  const getInputWithLastWordRemoved = () => {\n    let inputWithLastWordRemoved = \"\";\n    const inputWordsArray = userInput.split(\" \");\n    for (let i = 0; i < inputWordsArray.length - 1; i++) {\n      inputWithLastWordRemoved += inputWordsArray[i] + \" \";\n    }\n    return inputWithLastWordRemoved.trim();\n  };\n\n  const shouldDisplayColumnName = (columnName) => {\n    if (getLastWordOfInput() !== columnName) {\n      return doesColumnStartWithInput(columnName, getLastWordOfInput());\n    }\n    return false;\n  };\n\n  const doesColumnStartWithInput = (columnName, lastWordOfInput) => {\n    if (lastWordOfInput === \"\") {\n      return true;\n    }\n    const lengthOfLastWordOfInput = lastWordOfInput.length;\n    for (let i = 0; i < lengthOfLastWordOfInput; i++) {\n      if (lastWordOfInput[i] !== columnName[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const inputSuggestionButtons = () => {\n    if (!columnNames || userInput.split(\" \").length < 2) {\n      return null;\n    }\n    return columnNames.map((columnName, index) => {\n      if (shouldDisplayColumnName(columnName)) {\n        return (\n          <button\n            onClick={() => autoCompleteInput(columnName)}\n            className=\"input-suggestions__suggestion\"\n            key={columnName + \"-\" + index}\n          >\n            {columnName}\n          </button>\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const autoCompleteInput = (columnName) => {\n    const inputWithLastWordRemoved = getInputWithLastWordRemoved();\n    const autoCompleteInput = inputWithLastWordRemoved + \" \" + columnName;\n    setMessage(autoCompleteInput);\n    textInputRef.focus();\n  };\n\n  return <div className=\"input-suggestions\">{inputSuggestionButtons()}</div>;\n};\n\nexport default InputSuggestions;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { AppContext } from \"../../AppContext\";\n\nimport InputSuggestion from \"../InputSuggestions/InputSuggestions\";\n\nconst QueryBox = ({ pushChat, username, botName, botAlias, sessionAttributes }) => {\n  const textInputRef = useRef();\n  const { messages, setMessages, isPreviousMessagesLoaded, setIsWaiting } = useContext(AppContext);\n  const [message, setMessage] = useState(\"\");\n\n  const [isStopConversationRequested, setIsStopConversationRequested] = useState(false);\n  const [voiceState, setVoiceState] = useState(\"passive\");\n  const [isStopConversationButtonVisible, setIsStopConversationButtonVisible] = useState(false);\n  const [isSpeakButtonVisible, setIsSpeakButtonVisible] = useState(true);\n  const voiceStateInRef = useRef(\"passive\");\n  const botResponseErrorRef = useRef(0);\n\n  useEffect(() => {\n    const getLastMessage = () => {\n      return messages[messages.length - 1];\n    };\n    const saveBotReply = (botReply) => {\n      if (botReply === \"error\") {\n        setMessages([\n          ...messages,\n          {\n            from: \"app\",\n            message: \"Your request didn’t get processed, Please go through the below steps\",\n            type: \"error\",\n          },\n        ]);\n        return;\n      }\n      if (isJson(botReply) && !isJsonMessageCorrectFormat(botReply)) {\n        setMessages([...messages, { from: \"app\", message: \"Oops something went wrong.\" }]);\n        // setIsWaiting(false);\n      } else {\n        botResponseErrorRef.current = 0;\n        setMessages([...messages, { from: \"app\", message: botReply }]);\n      }\n    };\n    if (hasMessages() && isMessageFromUser() && isPreviousMessagesLoaded) {\n      if (messages[messages.length - 1].platform === \"voice\") {\n        // no op\n      } else {\n        pushChat(messages[messages.length - 1].message, saveBotReply);\n      }\n    }\n    if (hasMessages() && isMessageFromApp(getLastMessage()) && getLastMessage().type === \"error\") {\n      if (!botResponseErrorRef.current) {\n        botResponseErrorRef.current += 1;\n        pushChat(\"hi\", saveBotReply);\n      }\n    }\n    // eslint-disable-next-line\n  }, [messages]);\n\n  // this is to determine whether stopConversationButton should be displayed or not\n  // this is to determine whether speakButton should be displayed or not\n  useEffect(() => {\n    if (voiceState === \"passive\") {\n      setIsSpeakButtonVisible(true);\n      setIsStopConversationButtonVisible(false);\n    } else {\n      setIsSpeakButtonVisible(false);\n      setIsStopConversationButtonVisible(true);\n    }\n  }, [voiceState]);\n\n  // when the stopConversation is requested\n  // stopConversation when the state becomes listening or passive\n  useEffect(() => {\n    if (isStopConversationRequested && (voiceState === \"listening\" || voiceState === \"passive\")) {\n      conversation.reset();\n      setVoiceState(\"passive\");\n      setIsStopConversationRequested(false);\n    } else {\n      // console.log(\"waiting\");\n      // no op\n    }\n    // eslint-disable-next-line\n  }, [voiceState, isStopConversationRequested]);\n\n  const config = {\n    lexConfig: {\n      botName: botName,\n      botAlias: botAlias,\n      userId: username,\n    },\n  };\n\n  let conversation;\n\n  try {\n    conversation = new window.LexAudio.conversation(\n      config,\n      function (state) {\n        if (state === \"Listening\") {\n          setVoiceState(\"listening\");\n          voiceStateInRef.current = \"listening\";\n        }\n        if (state === \"Sending\") {\n          voiceStateInRef.current = \"sending\";\n          setVoiceState(\"sending\");\n        }\n        if (state === \"Speaking\") {\n          voiceStateInRef.current = \"speaking\";\n          setVoiceState(\"speaking\");\n        }\n        if (state === \"Passive\") {\n          voiceStateInRef.current = \"passive\";\n          setVoiceState(\"passive\");\n        }\n      },\n      function (data) {\n        const filteredMessage = data.message.replace(/(\\r\\n|\\n|\\r)/g, \"\");\n        setMessages((state) => [\n          ...state,\n          {\n            from: \"user\",\n            message: data.inputTranscript,\n            platform: \"voice\",\n          },\n          {\n            from: \"app\",\n            message: filteredMessage,\n          },\n        ]);\n      },\n      function (error) {\n        setMessages((state) => [\n          ...state,\n          { from: \"app\", message: \"Oops! Something went wrong. Please try saying that again.\" },\n        ]);\n      },\n      function (timeDomain, bufferLength) {\n        // console.log(bufferLength);\n      }\n    );\n  } catch (error) {\n    setMessages([...messages, { from: \"app\", message: \"Oops! Something went wrong\" }]);\n  }\n\n  const hasMessages = () => {\n    return messages.length > 0 ? true : false;\n  };\n\n  const isMessageFromUser = () => {\n    return messages[messages.length - 1].from === \"user\" ? true : false;\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (message && message !== \"\") {\n      const userMessage = {\n        from: \"user\",\n        message: message,\n      };\n      setMessages([...messages, userMessage]);\n      setMessage(\"\");\n      //setIsWaiting(true);\n    } else {\n      return;\n    }\n  };\n\n  const stopConversationClickHandler = () => {\n    setIsStopConversationRequested(true);\n  };\n\n  const speakButtonClickHandler = () => {\n    if (voiceState === \"passive\") {\n      conversation.advanceConversation();\n    } else {\n      console.log(\"speakButton clicked but will be ignored\");\n    }\n  };\n\n  const voiceButtonClass = () => {\n    if (voiceState === \"passive\") {\n      return \"btn query-box__button query-box__button--voice\";\n    } else {\n      return \"btn query-box__button query-box__button--voice\";\n    }\n  };\n\n  const getColumnNames = () => {\n    const lastMessageIndex = messages.length - 1;\n    const lastMessage = messages[lastMessageIndex];\n    if (\n      isMessageFromApp(lastMessage) &&\n      isJson(lastMessage.message) &&\n      hasColumnProperty(getMessageObject(lastMessage.message))\n    ) {\n      const messageObject = getMessageObject(lastMessage.message);\n      return getColumnsArray(messageObject.Column);\n    }\n    return null;\n  };\n\n  const getColumnsArray = (columnsObject) => {\n    const columnsArray = [];\n    for (let i = 0; i < columnsObject.length; i++) {\n      const columnsObjectKey = Object.keys(columnsObject[i]);\n      columnsArray.push(columnsObject[i][columnsObjectKey].value);\n    }\n    return columnsArray;\n  };\n\n  const hasColumnProperty = (messageObject) => {\n    const messageObjectKeys = Object.keys(messageObject);\n    return messageObjectKeys.includes(\"Column\");\n  };\n\n  const getMessageObject = (message) => {\n    return JSON.parse(message).Result;\n  };\n\n  const isJson = (message) => {\n    try {\n      JSON.parse(message);\n    } catch (error) {\n      return false;\n    }\n    return true;\n  };\n\n  const isJsonMessageCorrectFormat = (message) => {\n    if (!isJson(message)) {\n      return false;\n    }\n    const parsedMessage = JSON.parse(message);\n    if (!parsedMessage.Result) {\n      console.log(\"no result property\");\n      return false;\n    }\n    if (!parsedMessage.Result.Chart) {\n      console.log(\"no chart property\");\n      return false;\n    }\n    if (!parsedMessage.Result.Chart.Aggregation) {\n      console.log(\"no aggregation property\");\n      return false;\n    }\n    if (!parsedMessage.Result.Chart.Data) {\n      console.log(\"no data property\");\n      return false;\n    }\n    if (!parsedMessage.Result.Button) {\n      console.log(\"no button property\");\n      return false;\n    }\n    if (!parsedMessage.Result.Text) {\n      console.log(\"no text property\");\n      return false;\n    }\n    return true;\n  };\n\n  const isMessageFromApp = (message) => {\n    return JSON.stringify(message.from) === JSON.stringify(\"app\") ? true : false;\n  };\n\n  const stopConversationButton = isStopConversationButtonVisible ? (\n    <button\n      onClick={stopConversationClickHandler}\n      className={\"btn query-box__button\"}\n      style={{ background: \"red\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M6 6h12v12H6z\" />\n      </svg>\n    </button>\n  ) : null;\n\n  const isSpeakButtonDisabled = voiceState === \"passive\" ? false : true;\n\n  const speakButton = isSpeakButtonVisible ? (\n    <button onClick={speakButtonClickHandler} className={voiceButtonClass()} disabled={isSpeakButtonDisabled}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\" />\n      </svg>\n    </button>\n  ) : null;\n\n  return (\n    <div className=\"query-box\">\n      {messages.length > 0 ? (\n        <InputSuggestion\n          columnNames={getColumnNames()}\n          userInput={message}\n          setMessage={setMessage}\n          textInputRef={textInputRef.current}\n        />\n      ) : null}\n      {voiceState === \"listening\" ? (\n        <div className=\"query-box__mic-listening-container\">\n          <div className=\"query-box__mic-listening-helper\">\n            <div className=\"query-box__mic-listening\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <defs>\n                  <linearGradient id=\"MyGradient\">\n                    <stop offset=\"0%\" stopColor=\"rgba(65,77,241,1)\" />\n                    <stop offset=\"100%\" stopColor=\"rgba(255,71,71,1)\" />\n                  </linearGradient>\n                </defs>\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                <path d=\"M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"></path>\n              </svg>\n              <span className=\"query-box__mic-listening-text\">Listening</span>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <form className=\"query-box__form\" onSubmit={(e) => submitHandler(e)}>\n        <input\n          onChange={(e) => {\n            setMessage(e.target.value);\n          }}\n          value={message}\n          type=\"text\"\n          className=\"query-box__input form-control\"\n          ref={textInputRef}\n        />\n        <button type=\"submit\" className=\"btn query-box__button query-box__button--send\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" />\n          </svg>\n        </button>\n        {speakButton}\n        {stopConversationButton}\n      </form>\n    </div>\n  );\n};\n\nexport default QueryBox;\n","import React from \"react\";\n\nimport \"./OptionsList.scss\";\n\nimport { checkIcon } from \"../../Icons/Icons\";\n\nconst OptionsList = ({ title, options, setOption, selectedOptionValue }) => {\n  const optionClickHandler = (optionValue) => {\n    setOption(optionValue);\n  };\n  return (\n    <div className=\"options-list\">\n      <div className=\"options-list__title\">{title}</div>\n      <div className=\"options-list__options\">\n        {options.map((option, index) => {\n          return (\n            <button\n              className=\"options-list__option\"\n              key={title + \"-options\" + index}\n              onClick={() => optionClickHandler(option.value)}\n            >\n              {option.name}\n              {selectedOptionValue === option.value ? checkIcon : null}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default OptionsList;\n","import React from \"react\";\nimport \"./AlertModal.scss\";\nconst AlertModal = ({ close, message }) => {\n  return (\n    <div className=\"alert-modal\">\n      <div className=\"alert-modal__content alert-danger\">\n        <p className=\"alert-modal__message\">{message}</p>\n        <div className=\"alert-modal__close-container\">\n          <button className=\"alert-modal__close\" onClick={close}>\n            close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AlertModal;\n","import React from \"react\";\n\nimport \"./TimeoutPrompt.scss\";\n\nconst TimeoutPrompt = ({ stayLoggedInHandler, signOutHandler, message }) => {\n  return (\n    <div className=\"timeout-prompt-container\">\n      <div className=\"timeout-prompt\">\n        <div className=\"timeout-prompt__message\">{message}</div>\n        <div className=\"timeout-prompt__options\">\n          <button className=\"timeout-prompt__option btn btn-primary\" onClick={stayLoggedInHandler}>\n            Stay logged in\n          </button>\n          <button className=\"timeout-prompt__option btn btn-outline-primary\" onClick={signOutHandler}>\n            Sign out\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeoutPrompt;\n","/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const allMessage = /* GraphQL */ `\r\n  query AllMessage($after: String, $conversationId: ID!, $first: Int) {\r\n    allMessage(after: $after, conversationId: $conversationId, first: $first) {\r\n      author {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      content\r\n      conversationId\r\n      createdAt\r\n      id\r\n      isSent\r\n      recipient {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      sender\r\n    }\r\n  }\r\n`;\r\nexport const allMessageConnection = /* GraphQL */ `\r\n  query AllMessageConnection($after: String, $conversationId: ID!, $first: Int) {\r\n    allMessageConnection(after: $after, conversationId: $conversationId, first: $first) {\r\n      messages {\r\n        content\r\n        conversationId\r\n        createdAt\r\n        id\r\n        isSent\r\n        sender\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n`;\r\nexport const allMessageFrom = /* GraphQL */ `\r\n  query AllMessageFrom($after: String, $conversationId: ID!, $first: Int, $sender: String!) {\r\n    allMessageFrom(after: $after, conversationId: $conversationId, first: $first, sender: $sender) {\r\n      author {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      content\r\n      conversationId\r\n      createdAt\r\n      id\r\n      isSent\r\n      recipient {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      sender\r\n    }\r\n  }\r\n`;\r\nexport const allUser = /* GraphQL */ `\r\n  query AllUser($after: String, $first: Int) {\r\n    allUser(after: $after, first: $first) {\r\n      cognitoId\r\n      conversations {\r\n        nextToken\r\n      }\r\n      id\r\n      messages {\r\n        nextToken\r\n      }\r\n      username\r\n      registered\r\n    }\r\n  }\r\n`;\r\nexport const me = /* GraphQL */ `\r\n  query Me {\r\n    me {\r\n      cognitoId\r\n      conversations {\r\n        nextToken\r\n      }\r\n      id\r\n      messages {\r\n        nextToken\r\n      }\r\n      username\r\n      registered\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getUserConversationConnectionThroughUser = `\r\nquery getUserConversationConnectionThroughUser($after: String, $first: Int) {\r\n  me {\r\n    id\r\n    registered\r\n    __typename\r\n    conversations(first: $first, after: $after) {\r\n      __typename\r\n      nextToken\r\n      userConversations {\r\n        __typename\r\n        userId\r\n        conversationId\r\n        associated {\r\n          __typename\r\n          userId\r\n        }\r\n        conversation {\r\n          __typename\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n","/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const createConversation = /* GraphQL */ `\r\n  mutation CreateConversation($createdAt: String, $id: ID!, $name: String!) {\r\n    createConversation(createdAt: $createdAt, id: $id, name: $name) {\r\n      createdAt\r\n      id\r\n      messages {\r\n        nextToken\r\n      }\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const createMessage = /* GraphQL */ `\r\n  mutation CreateMessage($content: String, $conversationId: ID!, $createdAt: String!, $id: ID!) {\r\n    createMessage(content: $content, conversationId: $conversationId, createdAt: $createdAt, id: $id) {\r\n      author {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      content\r\n      conversationId\r\n      createdAt\r\n      id\r\n      isSent\r\n      recipient {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      sender\r\n    }\r\n  }\r\n`;\r\nexport const createUser = /* GraphQL */ `\r\n  mutation CreateUser($username: String!, $joined_at: Int) {\r\n    createUser(username: $username, joined_at: $joined_at) {\r\n      cognitoId\r\n      conversations {\r\n        nextToken\r\n      }\r\n      id\r\n      messages {\r\n        nextToken\r\n      }\r\n      username\r\n      registered\r\n      joined_at\r\n    }\r\n  }\r\n`;\r\nexport const createUserConversations = /* GraphQL */ `\r\n  mutation CreateUserConversations($conversationId: ID!, $userId: ID!) {\r\n    createUserConversations(conversationId: $conversationId, userId: $userId) {\r\n      associated {\r\n        conversationId\r\n        userId\r\n      }\r\n      conversation {\r\n        createdAt\r\n        id\r\n        name\r\n      }\r\n      conversationId\r\n      user {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      userId\r\n    }\r\n  }\r\n`;\r\n","import * as mutations from \"./graphql/mutations\";\r\nimport { graphqlOperation, Analytics, API } from \"aws-amplify\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst assertErrors = (response) => {\r\n  if (response && response.errors && response.errors.length > 0) {\r\n    throw new Error(response.errors.join(\"\\n\"));\r\n  }\r\n};\r\n\r\nexport const CreateUser = async (user) => {\r\n  try {\r\n    const response = await API.graphql(graphqlOperation(mutations.createUser, { user }));\r\n    assertErrors(response);\r\n    return response.data.CreateUser;\r\n  } catch (e) {\r\n    Analytics.record({\r\n      name: \"createUserError\",\r\n      attributes: {\r\n        error: e.message,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const CreateConversation = async (user1, user2) => {\r\n  try {\r\n    const members = [user1.username, user2.username].sort();\r\n    const conversationName = members.join(\" and \");\r\n    const conversationResponse = await API.graphql(\r\n      graphqlOperation(mutations.createConversation, {\r\n        name: conversationName,\r\n        id: uuidv4(),\r\n        createdAt: Date.now(),\r\n      })\r\n    );\r\n\r\n    assertErrors(conversationResponse);\r\n    const userConversation1Response = await API.graphql(\r\n      graphqlOperation(mutations.createUserConversations, {\r\n        userId: user1.cognitoId,\r\n        conversationId: conversationResponse.data.createConversation.id,\r\n      })\r\n    );\r\n    assertErrors(userConversation1Response);\r\n    const userConversation2Response = await API.graphql(\r\n      graphqlOperation(mutations.createUserConversations, {\r\n        userId: user2.cognitoId,\r\n        conversationId: conversationResponse.data.createConversation.id,\r\n      })\r\n    );\r\n    assertErrors(userConversation2Response);\r\n    return conversationResponse.data.createConversation.id;\r\n  } catch (e) {\r\n    Analytics.record({\r\n      name: \"createConversationError\",\r\n      attributes: {\r\n        error: e.message,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const CreateMessage = async (message) => {\r\n  try {\r\n    const response = await API.graphql(graphqlOperation(mutations.createMessage, { ...message }));\r\n    assertErrors(response);\r\n    return response.data.CreateMessage;\r\n  } catch (e) {\r\n    Analytics.record({\r\n      name: \"createMessageError\",\r\n      attributes: {\r\n        error: e.message,\r\n      },\r\n    });\r\n  }\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { graphqlOperation } from \"aws-amplify\";\r\nimport { Connect } from \"aws-amplify-react\";\r\nimport { AppContext } from \"../../../AppContext\";\r\nimport * as queries from \"../../../graphql/queries\";\r\nimport * as subscriptions from \"../../../graphql/subscriptions\";\r\nimport { CreateConversation } from \"../../../mutationHelper\";\r\n// import { allUser } from \"../../graphql/queries\";\r\n// import { Avatar } from \"@material-ui/core\";\r\nimport \"./Users.scss\";\r\n\r\nconst Users = (props) => {\r\n  // static contextType = AppContext;\r\n\r\n  const { username, toggleIsChatUserListVisible, toggleIsChatListVisible } = props;\r\n\r\n  const { setConId } = useContext(AppContext);\r\n  let currUser = null;\r\n  let allUsers = [];\r\n\r\n  const createNewConversation = async (user) => {\r\n    let convos = sessionStorage.getItem(\"convos\");\r\n    convos = convos ? JSON.parse(convos) : [];\r\n    const verifyConversation = () => {\r\n      //console.log(user.cognitoId, currUser?.cognitoId);\r\n      for (let i = 0; i < convos.length; i++) {\r\n        //console.log(convos);\r\n        if (\r\n          (convos[i].associated[0]?.userId === currUser?.cognitoId &&\r\n            convos[i].associated[1]?.userId === user.cognitoId) ||\r\n          (convos[i].associated[1]?.userId === currUser?.cognitoId &&\r\n            convos[i].associated[0]?.userId === user.cognitoId)\r\n        ) {\r\n          //console.log(\"OK 1\");\r\n          return { status: true, cid: convos[i]?.conversationId };\r\n        }\r\n      }\r\n      //console.log(\"OK 2\");\r\n      return { status: false };\r\n    };\r\n    let conversationExists = verifyConversation();\r\n    // console.log(conversationExists);\r\n    if (conversationExists.status) {\r\n      sessionStorage.setItem(\"convId\", conversationExists?.cid + \"\");\r\n      setConId(conversationExists?.cid + \"\");\r\n    } else {\r\n      const conversationId = await CreateConversation(user, currUser);\r\n      sessionStorage.setItem(\"convId\", conversationId + \"\");\r\n      setConId(conversationId + \"\");\r\n    }\r\n    toggleIsChatUserListVisible();\r\n    toggleIsChatListVisible();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className=\"section-header\">\r\n          <h6 className=\"mb-0\">\r\n            <i\r\n              className=\"ion-ios-person\"\r\n              data-pack=\"default\"\r\n              data-tags=\"talk\"\r\n            />{\" \"}\r\n            Users\r\n          </h6>\r\n        </div> */}\r\n      <div className=\"user-list\">\r\n        <div className=\"list-group\">\r\n          <Connect\r\n            query={graphqlOperation(queries.allUser)}\r\n            subscription={graphqlOperation(subscriptions.subscribeToNewUsers)}\r\n            onSubscriptionMsg={(prev, { subscribeToNewUsers }) => {\r\n              prev.allUser.items.push(subscribeToNewUsers);\r\n              return prev;\r\n            }}\r\n          >\r\n            {({ data, loading, error }) => {\r\n              let { allUser } = data || {\r\n                allUser: [],\r\n              };\r\n\r\n              allUsers = allUser ? allUser : [];\r\n              sessionStorage.setItem(\"allUsers\", JSON.stringify(allUsers));\r\n\r\n              if (error) return <h3>Error: {error}</h3>;\r\n              if (loading || !allUsers) return <h3>Loading...</h3>;\r\n              let validUsers = allUsers?.filter((user) => user.username.toLowerCase() !== username.toLowerCase());\r\n              currUser = allUsers?.filter((user) => user.username.toLowerCase() === username.toLowerCase())[0];\r\n              validUsers = validUsers ? validUsers : [];\r\n              const noUsers = validUsers?.length === 0;\r\n              if (noUsers) {\r\n                return (\r\n                  <div>\r\n                    <br />\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                      It looks lonely here... Sign up another user\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              return validUsers.map((user, i) => (\r\n                <a\r\n                  href=\"#\"\r\n                  key={i}\r\n                  className=\"list-group-item list-group-item-action p-3 border-0\"\r\n                  onClick={() => createNewConversation(user)}\r\n                >\r\n                  {user.username}\r\n                </a>\r\n              ));\r\n            }}\r\n          </Connect>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","/* eslint-disable */\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const subscribeToNewMessage = /* GraphQL */ `\r\n  subscription SubscribeToNewMessage($conversationId: ID!) {\r\n    subscribeToNewMessage(conversationId: $conversationId) {\r\n      author {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      content\r\n      conversationId\r\n      createdAt\r\n      id\r\n      isSent\r\n      recipient {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      sender\r\n    }\r\n  }\r\n`;\r\nexport const subscribeToNewUCs = /* GraphQL */ `\r\n  subscription SubscribeToNewUCs($userId: ID!) {\r\n    subscribeToNewUCs(userId: $userId) {\r\n      associated {\r\n        conversationId\r\n        userId\r\n      }\r\n      conversation {\r\n        createdAt\r\n        id\r\n        name\r\n      }\r\n      conversationId\r\n      user {\r\n        cognitoId\r\n        id\r\n        username\r\n        registered\r\n      }\r\n      userId\r\n    }\r\n  }\r\n`;\r\nexport const subscribeToNewUsers = /* GraphQL */ `\r\n  subscription SubscribeToNewUsers {\r\n    subscribeToNewUsers {\r\n      cognitoId\r\n      conversations {\r\n        nextToken\r\n      }\r\n      id\r\n      messages {\r\n        nextToken\r\n      }\r\n      username\r\n      registered\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { allUser } from \"../../../graphql/queries\";\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\nimport Users from \"../Users/Users\";\r\nimport \"./ChatUserList.scss\";\r\n\r\nconst ChatUserList = (props) => {\r\n  const { isContactListVisible, toggleIsChatUserListVisible, username, toggleIsChatListVisible } = props;\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const users = await API.graphql(graphqlOperation(allUser));\r\n        //console.log(users);\r\n      } catch (e) {\r\n        //console.log(e);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  });\r\n\r\n  const chatUserListClass = isContactListVisible ? \"contact-list contact-list--visible\" : \"contact-list\";\r\n  const closeIcon = (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className={chatUserListClass}>\r\n      <div className=\"contact-list__header\">\r\n        <span className=\"contact-list__heading\">Contacts</span>\r\n        <button className=\"contact-list__close-button\" onClick={toggleIsChatUserListVisible}>\r\n          {closeIcon}\r\n        </button>\r\n      </div>\r\n      <Users\r\n        username={username}\r\n        toggleIsChatUserListVisible={toggleIsChatUserListVisible}\r\n        toggleIsChatListVisible={toggleIsChatListVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatUserList;\r\n","import React from \"react\";\r\nimport ChatUserList from \"../Chat/ChatUserList/ChatUserList\";\r\n\r\nconst ContactToggle = ({ isContactListVisible, toggleIsChatUserListVisible, username, toggleIsChatListVisible }) => {\r\n  return (\r\n    <ChatUserList\r\n      toggleIsChatUserListVisible={toggleIsChatUserListVisible}\r\n      isContactListVisible={isContactListVisible}\r\n      username={username}\r\n      toggleIsChatListVisible={toggleIsChatListVisible}\r\n    ></ChatUserList>\r\n  );\r\n};\r\n\r\nexport default ContactToggle;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CreateMessage } from \"../../../mutationHelper\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./ChatInput.scss\";\r\nimport { AppContext } from \"../../../AppContext\";\r\n\r\nconst ChatInput = (props) => {\r\n  const [state, setState] = useState({ text: \"\" });\r\n  const { currentUser } = useContext(AppContext);\r\n\r\n  const createNewMessage = async () => {\r\n    const conversationId = sessionStorage.getItem(\"convId\");\r\n    //console.log(conversationId);\r\n    await CreateMessage({\r\n      content: state.text,\r\n      conversationId: conversationId,\r\n      createdAt: new Date().toString(),\r\n      id: uuidv4(),\r\n      isSent: true,\r\n      sender: currentUser.signInUserSession.idToken.payload.sub,\r\n    });\r\n    //console.log(state.text);\r\n    setState({ text: \"\" });\r\n  };\r\n\r\n  const onKeyUp = (e) => {\r\n    // enter\r\n    if (e.keyCode === 13) {\r\n      createNewMessage();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control no-focus\"\r\n          required\r\n          placeholder=\"Type a Message\"\r\n          value={state.text}\r\n          onKeyUp={onKeyUp}\r\n          onChange={(e, t) => {\r\n            setState({ text: e.target.value });\r\n          }}\r\n        />\r\n        <span className=\"input-group-btn\">\r\n          <button className=\"btn btn-dark\" onClick={createNewMessage} type=\"button\">\r\n            Send&nbsp;<i className=\"ion-chatbubble-working\"></i>\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport \"./ChatMessage.scss\";\r\n\r\nconst ChatMessage = (props) => {\r\n  const timeString = props.message.createdAt\r\n    ? new Date(props.message.createdAt).toLocaleTimeString()\r\n    : new Date().toLocaleTimeString();\r\n  return (\r\n    <div className={`message_body ${props.isFromMe ? \"me\" : \"\"}`}>\r\n      <p className=\"chatmessage\">\r\n        {/* <span className=\"name\">{props.senderName}</span> */}\r\n        <span className=\"msgtext\">{props.message.content}</span>\r\n        {/* <span className=\"timestamp\">{timeString}</span> */}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { graphqlOperation } from \"aws-amplify\";\r\nimport { Connect } from \"aws-amplify-react\";\r\nimport * as queries from \"../../../graphql/queries\";\r\nimport * as subscriptions from \"../../../graphql/subscriptions\";\r\nimport \"./ChatMessageView.scss\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport { AppContext } from \"../../../AppContext\";\r\n\r\nconst ChatMessageView = (props) => {\r\n  const { currentUser } = useContext(AppContext);\r\n\r\n  const getSenderName = (message) => {\r\n    let sname = \"\";\r\n    let allUsers = sessionStorage.getItem(\"allUsers\");\r\n    allUsers = allUsers ? JSON.parse(allUsers) : [];\r\n    const suser = allUsers.filter((us) => us.id === message?.sender)[0];\r\n    sname = suser?.username;\r\n    return sname;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-message-view\">\r\n      <div className=\"chat\">\r\n        {props.conversation ? (\r\n          <div className=\"msgview\">\r\n            <Connect\r\n              query={graphqlOperation(queries.allMessageConnection, {\r\n                conversationId: props.conversation.id,\r\n              })}\r\n              subscription={graphqlOperation(subscriptions.subscribeToNewMessage, {\r\n                conversationId: props.conversation.id,\r\n              })}\r\n              onSubscriptionMsg={(prev, { subscribeToNewMessage }) => {\r\n                try {\r\n                  prev.allMessageConnection.messages.push(subscribeToNewMessage);\r\n                } catch (e) {\r\n                  console.log(\"Failed to merge user conversation subscription\");\r\n                }\r\n                return prev;\r\n              }}\r\n            >\r\n              {({ data, loading, error }) => {\r\n                let { allMessageConnection: getConvo } = data || {\r\n                  allMessageConnection: [],\r\n                };\r\n                //console.log(data);\r\n                getConvo = getConvo ? getConvo : [];\r\n                if (error) return <h3>Error: {error}</h3>;\r\n                let messages;\r\n                try {\r\n                  messages = getConvo.messages;\r\n                } catch (e) {\r\n                  messages = [];\r\n                }\r\n                // console.log(getConvo);\r\n                if (loading || !messages) return <h3>Loading...</h3>;\r\n                //console.log(messages);\r\n                let sortMessages = messages.sort((a, b) => {\r\n                  return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n                });\r\n                return (\r\n                  <>\r\n                    {sortMessages.map((message, i) => (\r\n                      <ChatMessage\r\n                        key={i}\r\n                        message={message}\r\n                        senderName={getSenderName(message)}\r\n                        isFromMe={message.sender === currentUser.signInUserSession.idToken.payload.sub}\r\n                      />\r\n                    ))}\r\n                  </>\r\n                );\r\n              }}\r\n            </Connect>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessageView;\r\n","import React, { useContext } from \"react\";\r\nimport { graphqlOperation } from \"aws-amplify\";\r\nimport { Connect } from \"aws-amplify-react\";\r\nimport * as queries from \"../../../graphql/queries\";\r\nimport * as subscriptions from \"../../../graphql/subscriptions\";\r\nimport \"./ConversationList.scss\";\r\nimport { AppContext } from \"../../../AppContext\";\r\n\r\nconst ConversationList = (props) => {\r\n  const { currentUser, conId, setConId } = useContext(AppContext);\r\n  const { currUserId } = props;\r\n\r\n  const getReceiverName = (convname) => {\r\n    let [user1, user2] = convname.split(\" and \");\r\n    if (user1.toLowerCase() !== currentUser.username.toLowerCase()) return user1;\r\n    if (user2.toLowerCase() !== currentUser.username.toLowerCase()) return user2;\r\n  };\r\n\r\n  const setConversationId = (cid) => {\r\n    sessionStorage.setItem(\"convId\", cid + \"\");\r\n    setConId(cid);\r\n  };\r\n\r\n  return (\r\n    <div className=\"convo-list\">\r\n      <div className=\"list-group\">\r\n        {currUserId ? (\r\n          <Connect\r\n            query={graphqlOperation(queries.getUserConversationConnectionThroughUser)}\r\n            subscription={graphqlOperation(subscriptions.subscribeToNewUCs, {\r\n              userId: currUserId,\r\n            })}\r\n            onSubscriptionMsg={(prev, { subscribeToNewUCs }) => {\r\n              try {\r\n                //console.log(prev, subscribeToNewUCs);\r\n                prev.me.conversations.userConversations.push(subscribeToNewUCs);\r\n              } catch (e) {\r\n                console.log(\"Failed to merge user conversation subscription\");\r\n              }\r\n              return prev;\r\n            }}\r\n          >\r\n            {({ data, loading, error }) => {\r\n              const { me: getUser } = data || {\r\n                conversations: [],\r\n              };\r\n\r\n              if (error) return <h3>Error: {error}</h3>;\r\n              let userConversations;\r\n              try {\r\n                userConversations = getUser?.conversations.userConversations;\r\n              } catch (e) {\r\n                userConversations = [];\r\n              }\r\n              if (loading || !userConversations) return <h3>Loading...</h3>;\r\n              // console.log(userConversations);\r\n              const associatedConvs = userConversations.map(({ associated, conversationId }) => ({\r\n                associated,\r\n                conversationId,\r\n              }));\r\n              sessionStorage.setItem(\"convos\", JSON.stringify(associatedConvs));\r\n\r\n              return userConversations.map((userC, i) => (\r\n                <div\r\n                  className={`convItem ${conId === userC.conversationId ? \"active\" : \"\"}`}\r\n                  onClick={(e) => {\r\n                    setConversationId(userC.conversationId);\r\n                  }}\r\n                  key={i}\r\n                >\r\n                  {getReceiverName(userC.conversation.name)}\r\n                </div>\r\n              ));\r\n            }}\r\n          </Connect>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n","import React, { useContext } from \"react\";\r\nimport ChatInput from \"../ChatInput/ChatInput\";\r\nimport ChatMessageView from \"../ChatMessage/ChatMessageView\";\r\nimport ConversationList from \"../ConvoList/ConversationList\";\r\nimport \"./ChatList.scss\";\r\nimport { AppContext } from \"../../../AppContext\";\r\n\r\nconst ChatList = (props) => {\r\n  const { isChatListVisible, toggleIsChatListVisible } = props;\r\n  const { currentUser, conId } = useContext(AppContext);\r\n\r\n  //console.log(conId);\r\n\r\n  // const [state, setState] = useState({\r\n  //   selectedConversation: userConversation,\r\n  // });\r\n\r\n  // const changeConversation = (conversation) => {\r\n  //   setState({\r\n  //     selectedConversation: conversation,\r\n  //   });\r\n  // };\r\n\r\n  const convId = sessionStorage.getItem(\"convId\");\r\n\r\n  const chatUserListClass = isChatListVisible ? \"chat-list chat-list--visible\" : \"chat-list\";\r\n  const closeIcon = (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className={chatUserListClass}>\r\n      <div className=\"chat-list__header\">\r\n        <span className=\"chat-list__heading\">Chat</span>\r\n        <button className=\"chat-list__close-button\" onClick={toggleIsChatListVisible}>\r\n          {closeIcon}\r\n        </button>\r\n      </div>\r\n      {currentUser ? (\r\n        <>\r\n          <ConversationList currUserId={currentUser.signInUserSession.idToken.payload.sub} />\r\n          <ChatMessageView conversation={{ id: conId + \"\" }}></ChatMessageView>\r\n          <ChatInput />\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import React from \"react\";\r\nimport ChatList from \"../Chat/ChatList/ChatList\";\r\n\r\nconst ChatToggle = ({ isChatListVisible, toggleIsChatListVisible }) => {\r\n  return <ChatList toggleIsChatListVisible={toggleIsChatListVisible} isChatListVisible={isChatListVisible}></ChatList>;\r\n};\r\n\r\nexport default ChatToggle;\r\n","import React, { useState, useContext } from \"react\";\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport \"./ChangePassword.scss\";\n\nimport { AppContext } from \"../../AppContext\";\n\nimport { closeIcon } from \"../../Icons/Icons\";\n\nconst ChangePasswordContainer = ({ closeRightSidebar }) => {\n  const { resetPassword, confirmPassword } = useContext(AppContext);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [passwordVerificationCode, setPasswordVerificationCode] = useState(\"\");\n  const [isUsernameProvided, setIsUsernameProvided] = useState(false);\n  const [isPasswordResetSuccess, setIsPasswordResetSuccess] = useState(false);\n\n  const [usernameErrorMessages, setUsernameErrorMessages] = useState([]);\n\n  const [formErrorMessages, setFormErrorMessages] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [passwordConfirmationErrors, setPasswordConfirmationErrors] = useState([]);\n  const [passwordVerificationCodeErrors, setPasswordVerificationCodeErrors] = useState([]);\n\n  const usernameInputChangeHandler = (inputValue) => {\n    setUsername(inputValue);\n    const usernameValidationErrors = validateUsername(inputValue);\n    if (usernameValidationErrors.length > 0) {\n      setUsernameErrorMessages([...usernameValidationErrors]);\n    } else {\n      setUsernameErrorMessages([]);\n    }\n  };\n\n  const passwordInputChangeHandler = (passwordInputValue) => {\n    setPassword(passwordInputValue);\n    const passwordValidationErrors = validatePassword(passwordInputValue);\n    if (passwordValidationErrors.length > 0) {\n      setPasswordErrors([...passwordValidationErrors]);\n    } else {\n      setPasswordErrors([]);\n    }\n  };\n\n  const passwordConfirmationInputChangeHandler = (passwordConfirmationInputValue) => {\n    setPasswordConfirmation(passwordConfirmationInputValue);\n    const passwordConfirmationValidationErrors = validatePasswordConfirmation(passwordConfirmationInputValue);\n    if (passwordConfirmationValidationErrors.length > 0) {\n      setPasswordConfirmationErrors([...passwordConfirmationValidationErrors]);\n    } else {\n      setPasswordConfirmationErrors([]);\n    }\n  };\n\n  const passwordVerificationCodeInputChangeHandler = (passwordVerificationCodeInputValue) => {\n    setPasswordVerificationCode(passwordVerificationCodeInputValue);\n    const passwordVerificationCodeValidationErrors = validatePasswordVerificationCode(\n      passwordVerificationCodeInputValue\n    );\n    if (passwordVerificationCodeValidationErrors.length > 0) {\n      setPasswordVerificationCodeErrors([...passwordVerificationCodeValidationErrors]);\n    } else {\n      setPasswordVerificationCodeErrors([]);\n    }\n  };\n\n  const validateUsername = (username) => {\n    const usernameValidationErrors = [];\n    if (username === \"\") {\n      usernameValidationErrors.push(\"Username must not be empty.\");\n    }\n    return usernameValidationErrors;\n  };\n\n  const validatePassword = (password) => {\n    const isStringAtleastNineChars = (str) => {\n      if (str.length >= 9) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    const containsUppercaseLetter = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[A-Z]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsNumber = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[0-9]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const containsSymbol = (str) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str[i].match(/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    let passwordErrors = [];\n    if (!isStringAtleastNineChars(password)) {\n      passwordErrors.push(\"Must have length greater than or equal to 9\");\n    }\n\n    if (!containsUppercaseLetter(password)) {\n      passwordErrors.push(\"Must have uppercase characters\");\n    }\n\n    if (!containsNumber(password)) {\n      passwordErrors.push(\"Must have numeric characters\");\n    }\n\n    if (!containsSymbol(password)) {\n      passwordErrors.push(\"Must have symbols\");\n    }\n\n    return passwordErrors;\n  };\n\n  const validatePasswordConfirmation = (passwordConfirmation) => {\n    const passwordConfirmationErrors = [];\n    if (password !== passwordConfirmation) {\n      passwordConfirmationErrors.push(\"Passwords must match.\");\n    }\n\n    return passwordConfirmationErrors;\n  };\n\n  const validatePasswordVerificationCode = (verificationCode) => {\n    const verificationCodeErrors = [];\n    if (verificationCode === \"\") {\n      verificationCodeErrors.push(\"Verification code must not be empty\");\n    }\n    return verificationCodeErrors;\n  };\n\n  const sendVerificationClickHandler = () => {\n    const validationErrors = validateUsername(username);\n    if (validationErrors.length > 0) {\n      setUsernameErrorMessages([...validationErrors]);\n      return;\n    }\n    resetPassword(username, (error) => {\n      if (error) {\n        console.log(error);\n        setFormErrorMessages([error.message]);\n      } else {\n        setIsUsernameProvided(true);\n      }\n    });\n  };\n\n  const resetPasswordClickHandler = () => {\n    const passwordValidationErrors = validatePassword(password);\n    const passwordConfirmationValidationErrors = validatePasswordConfirmation(passwordConfirmation);\n    const passwordVerificationCodeValidationErrors = validatePasswordVerificationCode(passwordVerificationCode);\n    const resetPasswordErrors = [\n      ...passwordValidationErrors,\n      ...passwordConfirmationValidationErrors,\n      ...passwordVerificationCodeValidationErrors,\n    ];\n    setPasswordErrors(passwordValidationErrors);\n    setPasswordConfirmationErrors(passwordConfirmationValidationErrors);\n    setPasswordVerificationCodeErrors(passwordVerificationCodeValidationErrors);\n\n    if (resetPasswordErrors.length < 1) {\n      confirmPassword(username, passwordVerificationCode, password, (error) => {\n        if (error) {\n          console.log(error);\n          setFormErrorMessages([error.message]);\n        } else {\n          setIsPasswordResetSuccess(true);\n          closeRightSidebar();\n        }\n      });\n    }\n  };\n\n  const getUsernameErrorMessageList = () => {\n    if (usernameErrorMessages.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {usernameErrorMessages.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getFormErrorMessageList = () => {\n    if (formErrorMessages.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {formErrorMessages.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordErrorMessageList = () => {\n    if (passwordErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"username-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordConfirmationErrorMessageList = () => {\n    if (passwordConfirmationErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordConfirmationErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"password-confirmation-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getPasswordVerificationCodeErrorMessageList = () => {\n    if (passwordVerificationCodeErrors.length < 1) {\n      return null;\n    }\n    return (\n      <ul>\n        {passwordVerificationCodeErrors.map((errorMessage, index) => (\n          <li className=\"text-danger\" key={\"password-verification-code-error-\" + index}>\n            {errorMessage}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"change-password-container\">\n      <form className=\"form change-password-form\">\n        <div className=\"text-center font-weight-bold\">Change Password</div>\n        {getFormErrorMessageList()}\n        {!isUsernameProvided ? (\n          <>\n            <div className=\"form-group mt-3\">\n              <label htmlFor=\"\">Please enter your username</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => usernameInputChangeHandler(event.target.value)}\n              />\n              {getUsernameErrorMessageList()}\n            </div>\n            <button type=\"button\" className=\"btn btn-primary btn-block my-3\" onClick={sendVerificationClickHandler}>\n              Send verification code\n            </button>\n          </>\n        ) : (\n          <>\n            <div className=\"form-group mt-3\">\n              <label htmlFor=\"\">Verification Code</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={passwordVerificationCode}\n                onChange={(event) => passwordVerificationCodeInputChangeHandler(event.target.value)}\n              />\n              {getPasswordVerificationCodeErrorMessageList()}\n            </div>\n\n            <div className=\"form-group\">\n              <label>New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={password}\n                onChange={(event) => passwordInputChangeHandler(event.target.value)}\n              />\n              {getPasswordErrorMessageList()}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"\">Confirm New Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                value={passwordConfirmation}\n                onChange={(event) => passwordConfirmationInputChangeHandler(event.target.value)}\n              />\n              {getPasswordConfirmationErrorMessageList()}\n            </div>\n\n            <button className=\"btn btn-block btn-primary my-3\" type=\"button\" onClick={resetPasswordClickHandler}>\n              Reset Password\n            </button>\n          </>\n        )}\n      </form>\n\n      {/* <ForgotPasswordForm />\n      <UserVerificationForm /> */}\n    </div>\n  );\n};\n\nexport default ChangePasswordContainer;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport useConfig from \"../../hooks/useConfig\";\n\nimport \"./FileUploadToast.scss\";\n\nimport { closeIcon } from \"../../Icons/Icons\";\n\nconst FileUploadToast = ({ status, closeFileUploadToast }) => {\n  const { fileUploadPendingMessage, fileUploadSuccessMessage } = useConfig().app;\n  const closeFileUploadToastTimer = useRef();\n  const fadeOutTimer = useRef();\n  const fileUploadToastRef = useRef();\n\n  const startFileUploadToastCloseTimer = () => {\n    clearTimeout(closeFileUploadToastTimer.current);\n    clearTimeout(fadeOutTimer.current);\n    closeFileUploadToastTimer.current = setTimeout(fadeOutFileUploadToast, 10000);\n  };\n\n  const fadeOutFileUploadToast = () => {\n    clearTimeout(fadeOutTimer.current);\n    fileUploadToastRef.current.classList.add(\"file-upload-toast--closing\");\n    fadeOutTimer.current = setTimeout(closeFileUploadToast, 250);\n  };\n\n  const closeClickHandler = () => {\n    clearTimeout(closeFileUploadToastTimer.current);\n    fadeOutFileUploadToast();\n  };\n\n  const alertVariantClass = () => {\n    switch (status) {\n      case \"success\":\n        return \" alert-success\";\n      case \"uploading\":\n        return \" alert-info\";\n      case \"fail\":\n      default:\n        return \" alert-danger\";\n    }\n  };\n\n  const closeButtonVariantClass = () => {\n    switch (status) {\n      case \"success\":\n        return \" btn-success\";\n      case \"uploading\":\n        return \" btn-info\";\n      case \"fail\":\n      default:\n        return \" btn-danger\";\n    }\n  };\n\n  const displayToastMessage = () => {\n    switch (status) {\n      case \"success\":\n        return fileUploadSuccessMessage;\n      case \"uploading\":\n        return (\n          <div className=\"d-flex align-items-center\">\n            <div className=\"spinner-border text-info mr-2\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n            {fileUploadPendingMessage}\n          </div>\n        );\n      case \"fail\":\n      default:\n        return \"There was an error uploading your file\";\n    }\n  };\n\n  useEffect(() => {\n    startFileUploadToastCloseTimer();\n  });\n\n  return (\n    <div className={\"file-upload-toast alert\" + alertVariantClass()} ref={fileUploadToastRef}>\n      <div className=\"file-upload-toast__message\">{displayToastMessage()}</div>\n      <button onClick={closeClickHandler} className={\"file-upload-toast__close btn\" + closeButtonVariantClass()}>\n        {closeIcon}\n      </button>\n    </div>\n  );\n};\n\nexport default FileUploadToast;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\n\nimport { AppContext } from \"../../AppContext\";\n\nimport { FileUploadContext } from \"../../FileUploadContext\";\n\nimport MessagesContainer from \"../MessagesContainer/MessagesContainer\";\nimport Conversation from \"../Conversation/Conversation\";\nimport FilePreviewTable from \"../FilePreviewTable/FilePreviewTable\";\nimport useAgTable from \"../../hooks/useAgTable\";\nimport SignOutButton from \"../SignOutButton/SignOutButton\";\nimport AccountInfo from \"../AccountInfo/AccountInfo\";\nimport Header from \"../Header/Header\";\nimport HeaderItem from \"../Header/HeaderItem/HeaderItem\";\nimport Dropdown from \"../Header/Dropdown/Dropdown\";\nimport ButtonIconLink from \"../ButtonIconLink/ButtonIconLink\";\nimport RightSidebar from \"../RightSidebar/RightSidebar\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport SidebarItem from \"../SidebarItem/SidebarItem\";\nimport Main from \"../Main/Main\";\nimport UploadFile from \"../UploadFile/UploadFile\";\nimport FilesListContainer from \"../FilesListContainer/FilesListContainer\";\nimport QueryBox from \"../QueryBox/QueryBox\";\nimport OptionsList from \"../OptionsList/OptionsList\";\nimport AlertModal from \"../AlertModal/AlertModal\";\nimport TimeoutPrompt from \"../TimeoutPrompt/TimeoutPrompt\";\nimport ContactToggle from \"../ChatToggle/ContactToggle\";\nimport ChatToggle from \"../ChatToggle/ChatToggle\";\n\nimport AppMessageTester from \"../AppMessageTester/AppMessageTester\";\nimport DeleteAccountButton from \"../DeleteAccountButton/DeleteAccountButton\";\n\nimport {\n  tableToggleIcon,\n  filesIcon,\n  uploadSvgIcon,\n  userProfileIcon,\n  gearIcon,\n  caretDownIcon,\n  contactIcon,\n  chatIcon,\n} from \"../../Icons/Icons\";\n\nimport { useIdleTimer } from \"react-idle-timer\";\nimport ChangePasswordContainer from \"../ChangePassword/ChangePasswordContainer\";\nimport useConfig from \"../../hooks/useConfig\";\nimport FileUploadToast from \"../FileUploadToast/FileUploadToast\";\n\nconst ChatApp = () => {\n  const {\n    email,\n    setMessages,\n    signOut,\n    pushChat,\n    username,\n    botName,\n    botAlias,\n    isRightSidebarOpen,\n    setIsRightSidebarOpen,\n    rightSidebarContent,\n    setRightSidebarContent,\n    files,\n    resetLoginAttempts,\n    getLoginAttempts,\n    deleteAccount,\n    pendingFileUploads,\n    fileUploadErrors,\n  } = useContext(AppContext);\n\n  const fileUploadContext = useContext(FileUploadContext);\n\n  const {\n    sessionTimeOutInMinutes,\n    sessionTimeOutMessage,\n    forceLogoutAfterTimeOutInMinutes,\n    maxFileUploadCount,\n    maxFileUploadSizeInKb,\n    surveyUrl,\n  } = useConfig().app;\n\n  const sessionTimeoutTime = 1000 * 60 * sessionTimeOutInMinutes || 1000 * 60 * 20;\n  const forceLogoutTime = 1000 * 60 * forceLogoutAfterTimeOutInMinutes || 1000 * 60 * 2;\n\n  const signOutTimer = useRef();\n\n  const handleOnIdle = (event) => {\n    setIsUserTimedOut(true);\n    console.log(\"user timed out signing off in 10 seconds\");\n    clearTimeout(signOutTimer.current);\n    signOutTimer.current = setTimeout(() => signOutHandler(true), forceLogoutTime);\n  };\n\n  const stayLoggedInClickHandler = () => {\n    console.log(\"user chose to stay logged in. waiting to time out again\");\n    clearTimeout(signOutTimer.current);\n    setIsUserTimedOut(false);\n  };\n\n  const { getLastActiveTime, getRemainingTime } = useIdleTimer({\n    timeout: sessionTimeoutTime,\n    onIdle: handleOnIdle,\n    debounce: 500,\n  });\n\n  const [isUserTimedOut, setIsUserTimedOut] = useState(false);\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const [isTableToggleVisible, setIsTableToggleVisible] = useState(false);\n  const [theme, setTheme] = useState(\"theme-two\");\n  const [isFilesListVisible, setIsFilesListVisible] = useState(false);\n  const [isAlertModalVisible, setIsAlertModalVisible] = useState(false);\n  const [isHeaderDropdownOpen, setIsHeaderDropdownOpen] = useState(false);\n  const [alertModalMessage, setAlertModalMessage] = useState(\"\");\n  const [isFileUploadToastOpen, setIsFileUploadToastOpen] = useState(false);\n  const [fileUploadStatus, setFileUploadStatus] = useState(\"idle\");\n  /* Chat app*/\n  const [isContactListVisible, setIsContactListVisible] = useState(false);\n  const [isChatListVisible, setIsChatVisible] = useState(false);\n\n  const THEMES = [\n    { name: \"default\", value: \"default\" },\n    { name: \"Theme One\", value: \"theme-one\" },\n    { name: \"Theme Two\", value: \"theme-two\" },\n    { name: \"Theme Three\", value: \"theme-three\" },\n  ];\n\n  const appClassWithTheme = () => {\n    if (theme === \"theme-one\") {\n      return \"app app--theme-one\";\n    } else if (theme === \"theme-two\") {\n      return \"app app--theme-two\";\n    } else if (theme === \"theme-three\") {\n      return \"app app--theme-three\";\n    } else {\n      return \"app\";\n    }\n  };\n\n  const tableContainer = isTableVisible ? (\n    <FilePreviewTable setIsTableVisible={setIsTableVisible} setIsTableToggleVisible={setIsTableToggleVisible} />\n  ) : null;\n\n  const openFilesList = () => {\n    setIsFilesListVisible(true);\n    setIsHeaderDropdownOpen(false);\n    setIsRightSidebarOpen(false);\n    setIsChatVisible(false);\n    setIsContactListVisible(false);\n  };\n\n  const closeFilesList = () => {\n    setIsFilesListVisible(false);\n  };\n\n  const openChatUserList = () => {\n    setIsContactListVisible(true);\n    setIsChatVisible(false);\n    setIsFilesListVisible(false);\n    setIsRightSidebarOpen(false);\n  };\n\n  const closeChatUserList = () => {\n    setIsContactListVisible(false);\n  };\n\n  const openChatList = () => {\n    setIsChatVisible(true);\n    setIsContactListVisible(false);\n    setIsFilesListVisible(false);\n    setIsRightSidebarOpen(false);\n  };\n\n  const closeChatList = () => {\n    setIsChatVisible(false);\n  };\n\n  const sidebarFilesListClickHandler = () => {\n    if (isFilesListVisible) {\n      closeFilesList();\n    } else {\n      openFilesList();\n    }\n  };\n\n  const sidebarChatUserListClickHandler = () => {\n    if (isContactListVisible) {\n      closeChatUserList();\n    } else {\n      openChatUserList();\n    }\n  };\n\n  const sidebarChatListClickHandler = () => {\n    if (isChatListVisible) {\n      closeChatList();\n    } else {\n      openChatList();\n    }\n  };\n\n  const closeRightSidebar = () => {\n    setIsRightSidebarOpen(false);\n  };\n\n  const handleFileUploadButtonClick = () => {\n    if (isMaxFileUploadCountReached()) {\n      fileUploadContext.triggerInputClick();\n    } else {\n      setIsAlertModalVisible(true);\n      setAlertModalMessage(\"You have reached the limit for uploading files\");\n    }\n  };\n\n  const isMaxFileUploadCountReached = () => {\n    return files.length < maxFileUploadCount ? true : false;\n  };\n\n  const toggleIsTableVisible = () => {\n    setIsTableVisible(!isTableVisible);\n  };\n\n  const displayRightSidebarContent = () => {\n    if (rightSidebarContent === \"settings\") {\n      return (\n        <div>\n          <div className=\"text-center font-weight-bold\">Settings</div>\n          <OptionsList title={\"Themes\"} setOption={setTheme} selectedOptionValue={theme} options={THEMES} />\n          <a href={surveyUrl} target=\"_blank\" className=\"btn btn-primary\">\n            Feedback\n          </a>\n        </div>\n      );\n    } else if (rightSidebarContent === \"profile\") {\n      return <AccountInfo username={username} email={email} openChangePassword={changePasswordClickHandler} />;\n    } else if (rightSidebarContent === \"change-password\") {\n      return <ChangePasswordContainer closeRightSidebar={closeRightSidebar} />;\n    }\n  };\n\n  const changePasswordClickHandler = () => {\n    closeFilesList();\n    closeChatUserList();\n    closeChatList();\n    setIsHeaderDropdownOpen(false);\n    setIsRightSidebarOpen(true);\n    setRightSidebarContent(\"change-password\");\n  };\n\n  const myProfileClickHandler = () => {\n    closeFilesList();\n    closeChatUserList();\n    closeChatList();\n    setIsHeaderDropdownOpen(false);\n    setIsRightSidebarOpen(true);\n    setRightSidebarContent(\"profile\");\n  };\n\n  const settingsClickHandler = () => {\n    closeFilesList();\n    closeChatUserList();\n    closeChatList();\n    setIsHeaderDropdownOpen(false);\n    setIsRightSidebarOpen(true);\n    setRightSidebarContent(\"settings\");\n  };\n\n  const openFileUploadToast = (fileUploadStatus) => {\n    setIsFileUploadToastOpen(true);\n    setFileUploadStatus(fileUploadStatus);\n  };\n\n  const closeFileUploadToast = () => {\n    setIsFileUploadToastOpen(false);\n  };\n\n  const hasPendingFileUploads = () => {\n    return pendingFileUploads.length > 0 ? true : false;\n  };\n\n  const isFileUploadStatusUploading = () => {\n    return fileUploadStatus === \"uploading\" ? true : false;\n  };\n\n  const hasFileUploadErrors = () => {\n    return fileUploadErrors.length > 0 ? true : false;\n  };\n\n  const tableToggle = isTableToggleVisible ? (\n    <SidebarItem icon={tableToggleIcon} clickHandler={toggleIsTableVisible} tooltipText={\"toggle table\"} />\n  ) : null;\n\n  const alertModal = isAlertModalVisible ? (\n    <AlertModal close={() => setIsAlertModalVisible(false)} message={alertModalMessage} />\n  ) : null;\n\n  const signOutHandler = (shouldPreserveMessages) => {\n    if (shouldPreserveMessages === true) {\n      // no op\n    } else {\n      setMessages([]);\n      localStorage.removeItem(\"transcript\");\n      // console.log(\"user got forcefully logged out\");\n    }\n    clearTimeout(signOutTimer.current);\n    signOut();\n  };\n\n  const timeoutPrompt = isUserTimedOut ? (\n    <TimeoutPrompt\n      stayLoggedInHandler={stayLoggedInClickHandler}\n      signOutHandler={() => signOutHandler()}\n      message={sessionTimeOutMessage}\n    />\n  ) : null;\n\n  const fileUploadToast = isFileUploadToastOpen ? (\n    <FileUploadToast closeFileUploadToast={closeFileUploadToast} status={fileUploadStatus} />\n  ) : null;\n\n  // successfull login should clear login attempts\n  useEffect(() => {\n    if (getLoginAttempts(username) !== 0) {\n      resetLoginAttempts(username);\n    }\n  }, []);\n\n  // show table when excel has been converted into json\n  useEffect(() => {\n    if (fileUploadContext.jsonData) {\n      setIsTableVisible(true);\n      setIsTableToggleVisible(true);\n    } else {\n      setIsTableVisible(false);\n      setIsTableToggleVisible(false);\n    }\n  }, [fileUploadContext.jsonData]);\n\n  // fileupload toast\n  useEffect(() => {\n    if (hasPendingFileUploads()) {\n      openFileUploadToast(\"uploading\");\n    }\n\n    if (!hasPendingFileUploads()) {\n      if (isFileUploadStatusUploading() && !hasFileUploadErrors()) {\n        openFileUploadToast(\"success\");\n      } else if (hasFileUploadErrors()) {\n        openFileUploadToast(\"fail\");\n      }\n    }\n  }, [pendingFileUploads, fileUploadErrors]);\n\n  return (\n    <div className={appClassWithTheme()}>\n      {alertModal}\n      {timeoutPrompt}\n      <Header username={username} theme={theme}>\n        <HeaderItem>\n          <div>\n            Welcome, <strong>{username}</strong>\n          </div>\n        </HeaderItem>\n        <HeaderItem>\n          <Dropdown\n            isActive={isHeaderDropdownOpen}\n            setIsActive={setIsHeaderDropdownOpen}\n            toggle={\n              <button className=\"dropdown__toggle btn btn-secondary\">\n                <span>Account</span>\n                {caretDownIcon}\n              </button>\n            }\n          >\n            <ButtonIconLink\n              clickHandler={() => myProfileClickHandler(\"profile\")}\n              icon={userProfileIcon}\n              text={\"My Profile\"}\n            />\n            <ButtonIconLink clickHandler={() => settingsClickHandler(\"settings\")} icon={gearIcon} text={\"Settings\"} />\n            <SignOutButton\n              signOutHandler={() => {\n                signOutHandler();\n                localStorage.removeItem(\"transcript\");\n              }}\n            />\n          </Dropdown>\n        </HeaderItem>\n        <RightSidebar\n          isMobile={true}\n          isRightSidebarOpen={isRightSidebarOpen}\n          closeRightSidebar={closeRightSidebar}\n          rightSidebarContent={displayRightSidebarContent()}\n        />\n      </Header>\n      <Sidebar>\n        <SidebarItem icon={uploadSvgIcon} clickHandler={handleFileUploadButtonClick} tooltipText={\"upload\"} />\n        <SidebarItem icon={filesIcon} clickHandler={sidebarFilesListClickHandler} tooltipText={\"files\"} />\n        {tableToggle}\n        <SidebarItem icon={contactIcon} tooltipText={\"contacts\"} clickHandler={sidebarChatUserListClickHandler} />\n        <SidebarItem icon={chatIcon} tooltipText={\"chat\"} clickHandler={sidebarChatListClickHandler} />\n      </Sidebar>\n      <Main>\n        {/* <DeleteAccountButton deleteAccountHandler={deleteAccount} />\n        <AppMessageTester /> */}\n        {fileUploadToast}\n        <UploadFile />\n        <FilesListContainer isFilesListVisible={isFilesListVisible} toggleIsFilesListVisible={closeFilesList} />\n        <ContactToggle\n          isContactListVisible={isContactListVisible}\n          toggleIsChatUserListVisible={closeChatUserList}\n          username={username}\n          toggleIsChatListVisible={openChatList}\n        />\n        <ChatToggle isChatListVisible={isChatListVisible} toggleIsChatListVisible={closeChatList} />\n        <Conversation>\n          {tableContainer}\n          <MessagesContainer></MessagesContainer>\n          <QueryBox pushChat={pushChat} username={username} botName={botName} botAlias={botAlias}></QueryBox>\n        </Conversation>\n        <RightSidebar\n          isRightSidebarOpen={isRightSidebarOpen}\n          closeRightSidebar={closeRightSidebar}\n          rightSidebarContent={displayRightSidebarContent()}\n        />\n      </Main>\n    </div>\n  );\n};\n\nexport default ChatApp;\n","import React, { useContext, useEffect } from \"react\";\n\nimport \"./App.scss\";\n\nimport { AppContext } from \"./AppContext\";\n\nimport SignInFormContainer from \"./components/SignInForm/SignInFormContainer\";\nimport RegistrationFormContainer from \"./components/RegistrationForm/RegistrationFormContainer\";\nimport ForgotPasswordFormContainer from \"./components/ForgotPasswordForm/ForgotPasswordFormContainer\";\nimport ChatApp from \"./components/ChatApp/ChatApp\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport { createUser } from \"./graphql/mutations\";\n\nfunction App() {\n  const {\n    signIn,\n    register,\n    verifyAccount,\n    registrationStatus,\n    isLoggedIn,\n    username,\n    getLoginAttempts,\n    incrementLoginAttempts,\n    resetLoginAttempts,\n    userSub,\n    joinedDate,\n    setJoinedDate,\n  } = useContext(AppContext);\n\n  useEffect(() => {\n    const getToken = async () => {\n      const newuser = localStorage.getItem(\"usernew\");\n      if (registrationStatus === \"verified\" && isLoggedIn) {\n        addUserToTable({\n          id: userSub,\n          cognitoId: userSub,\n          registered: true,\n          username: newuser,\n        });\n      }\n    };\n    getToken();\n  }, [isLoggedIn]);\n\n  async function addUserToTable(user) {\n    try {\n      const result = await API.graphql({\n        query: createUser,\n        variables: { ...user, joined_at: Math.floor(Date.now() / 1000) },\n        authMode: \"AMAZON_COGNITO_USER_POOLS\",\n      });\n      console.log(result);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={() => {\n          if (isLoggedIn && username) {\n            return <ChatApp />;\n          } else {\n            return <Redirect to=\"/sign-in\" />;\n          }\n        }}\n      />\n\n      <Route\n        path=\"/sign-in\"\n        render={() => {\n          if (isLoggedIn && username) {\n            return <Redirect to=\"/\" />;\n          }\n          if (registrationStatus === \"verifying\") {\n            return <Redirect to=\"/register\" />;\n          }\n          return (\n            <SignInFormContainer\n              signIn={signIn}\n              getLoginAttempts={getLoginAttempts}\n              incrementLoginAttempts={incrementLoginAttempts}\n              resetLoginAttempts={resetLoginAttempts}\n            />\n          );\n        }}\n      />\n\n      <Route\n        path=\"/register\"\n        render={() => {\n          if (isLoggedIn && username) {\n            return <Redirect to=\"/\" />;\n          }\n          return (\n            <RegistrationFormContainer\n              register={register}\n              verifyAccount={verifyAccount}\n              registrationStatus={registrationStatus}\n            />\n          );\n        }}\n      />\n\n      <Route\n        path=\"/forgot-password\"\n        render={() => {\n          if (isLoggedIn && username) {\n            return <Redirect to=\"/\" />;\n          }\n          return <ForgotPasswordFormContainer />;\n        }}\n      />\n\n      <Route\n        path=\"/\"\n        render={() => {\n          if (isLoggedIn && username) {\n            return <Redirect to=\"/\" />;\n          } else {\n            return <Redirect to=\"/sign-in\" />;\n          }\n        }}\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\r\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\r\n\r\nconst awsmobile = {\r\n  aws_project_region: \"us-west-2\",\r\n  aws_cognito_identity_pool_id: \"us-west-2:a2cb5a9d-d728-4c5c-a96e-b2973d14c5e0\",\r\n  aws_cognito_region: \"us-west-2\",\r\n  aws_user_pools_id: \"us-west-2_jseVZL1mh\",\r\n  aws_user_pools_web_client_id: \"36nivl36qlp8fbnkpd2jv52fu\",\r\n  oauth: {},\r\n  aws_mobile_analytics_app_id: \"c4a87de1250246e491ab2d90d2db162f\",\r\n  aws_mobile_analytics_app_region: \"us-west-2\",\r\n  aws_content_delivery_bucket: \"thinkquicreactfronte-20210211155341-hostingbucket-dev\",\r\n  aws_content_delivery_bucket_region: \"us-west-2\",\r\n  aws_content_delivery_url: \"https://d27nvasfpedpzh.cloudfront.net\",\r\n  aws_appsync_graphqlEndpoint: \"https://7zmvw77ngrhorm2rplc5j7tzta.appsync-api.us-west-2.amazonaws.com/graphql\",\r\n  aws_appsync_region: \"us-west-2\",\r\n  aws_appsync_authenticationType: \"AMAZON_COGNITO_USER_POOLS\",\r\n};\r\n\r\nexport default awsmobile;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Amplify from \"aws-amplify\";\nimport aws_exports from \"./aws-exports\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AppContextProvider from \"./AppContext\";\nimport FileUploadContextProvider from \"./FileUploadContext\";\n\nAmplify.configure(aws_exports);\nReactDOM.render(\n  <AppContextProvider>\n    <FileUploadContextProvider>\n      <App />\n    </FileUploadContextProvider>\n  </AppContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}